import {
  require_isarray
} from "./chunk-YJX5WJNG.js";
import {
  require_crypto
} from "./chunk-AECE7TE2.js";
import {
  init_tslib_es6,
  tslib_es6_exports
} from "./chunk-4BO2DEKR.js";
import {
  require_bs58
} from "./chunk-4K5Z4VVF.js";
import {
  require_events
} from "./chunk-GJBZJ4UL.js";
import {
  PublicKey,
  Transaction,
  init_index_browser_esm,
  require_base64_js,
  require_ieee754
} from "./chunk-ZK3X3TJ5.js";
import {
  __commonJS,
  __esm,
  __export,
  __reExport,
  __require,
  __toCommonJS,
  __toESM
} from "./chunk-256EKJAK.js";

// node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow3(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow3;
    function getFromWindowOrThrow3(name2) {
      const res = getFromWindow3(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow3;
    function getDocumentOrThrow3() {
      return getFromWindowOrThrow3("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow3;
    function getDocument3() {
      return getFromWindow3("document");
    }
    exports.getDocument = getDocument3;
    function getNavigatorOrThrow3() {
      return getFromWindowOrThrow3("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow3;
    function getNavigator3() {
      return getFromWindow3("navigator");
    }
    exports.getNavigator = getNavigator3;
    function getLocationOrThrow3() {
      return getFromWindowOrThrow3("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow3;
    function getLocation3() {
      return getFromWindow3("location");
    }
    exports.getLocation = getLocation3;
    function getCryptoOrThrow3() {
      return getFromWindowOrThrow3("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow3;
    function getCrypto3() {
      return getFromWindow3("crypto");
    }
    exports.getCrypto = getCrypto3;
    function getLocalStorageOrThrow3() {
      return getFromWindowOrThrow3("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow3;
    function getLocalStorage3() {
      return getFromWindow3("localStorage");
    }
    exports.getLocalStorage = getLocalStorage3;
  }
});

// node_modules/@walletconnect/browser-utils/node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/@walletconnect/browser-utils/node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs();
    function getWindowMetadata2() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e4) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i6 = 0; i6 < links.length; i6++) {
          const link = links[i6];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i6 = 0; i6 < metaTags.length; i6++) {
          const tag = metaTags[i6];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name3 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name3) {
          name3 = doc.title;
        }
        return name3;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name2 = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name: name2
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata2;
  }
});

// node_modules/@walletconnect/browser-utils/node_modules/detect-browser/es/index.js
function detect(userAgent) {
  if (!!userAgent) {
    return parseUserAgent(userAgent);
  }
  if (typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative") {
    return new ReactNativeInfo();
  }
  if (typeof navigator !== "undefined") {
    return parseUserAgent(navigator.userAgent);
  }
  return getNodeVersion();
}
function matchUserAgent(ua2) {
  return ua2 !== "" && userAgentRules.reduce(function(matched, _a2) {
    var browser = _a2[0], regex = _a2[1];
    if (matched) {
      return matched;
    }
    var uaMatch = regex.exec(ua2);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}
function parseUserAgent(ua2) {
  var matchedRule = matchUserAgent(ua2);
  if (!matchedRule) {
    return null;
  }
  var name2 = matchedRule[0], match = matchedRule[1];
  if (name2 === "searchbot") {
    return new BotInfo();
  }
  var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);
  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS) {
      versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));
    }
  } else {
    versionParts = [];
  }
  var version2 = versionParts.join(".");
  var os3 = detectOS(ua2);
  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua2);
  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo(name2, version2, os3, searchBotMatch[1]);
  }
  return new BrowserInfo(name2, version2, os3);
}
function detectOS(ua2) {
  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
    var _a2 = operatingSystemRules[ii], os3 = _a2[0], regex = _a2[1];
    var match = regex.exec(ua2);
    if (match) {
      return os3;
    }
  }
  return null;
}
function getNodeVersion() {
  var isNode3 = typeof process !== "undefined" && process.version;
  return isNode3 ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
  var output = [];
  for (var ii = 0; ii < count; ii++) {
    output.push("0");
  }
  return output;
}
var __spreadArrays, BrowserInfo, NodeInfo, SearchBotDeviceInfo, BotInfo, ReactNativeInfo, SEARCHBOX_UA_REGEX, SEARCHBOT_OS_REGEX, REQUIRED_VERSION_PARTS, userAgentRules, operatingSystemRules;
var init_es = __esm({
  "node_modules/@walletconnect/browser-utils/node_modules/detect-browser/es/index.js"() {
    __spreadArrays = function() {
      for (var s5 = 0, i6 = 0, il = arguments.length; i6 < il; i6++) s5 += arguments[i6].length;
      for (var r5 = Array(s5), k5 = 0, i6 = 0; i6 < il; i6++)
        for (var a6 = arguments[i6], j6 = 0, jl = a6.length; j6 < jl; j6++, k5++)
          r5[k5] = a6[j6];
      return r5;
    };
    BrowserInfo = /** @class */
    /* @__PURE__ */ function() {
      function BrowserInfo3(name2, version2, os3) {
        this.name = name2;
        this.version = version2;
        this.os = os3;
        this.type = "browser";
      }
      return BrowserInfo3;
    }();
    NodeInfo = /** @class */
    /* @__PURE__ */ function() {
      function NodeInfo3(version2) {
        this.version = version2;
        this.type = "node";
        this.name = "node";
        this.os = process.platform;
      }
      return NodeInfo3;
    }();
    SearchBotDeviceInfo = /** @class */
    /* @__PURE__ */ function() {
      function SearchBotDeviceInfo3(name2, version2, os3, bot) {
        this.name = name2;
        this.version = version2;
        this.os = os3;
        this.bot = bot;
        this.type = "bot-device";
      }
      return SearchBotDeviceInfo3;
    }();
    BotInfo = /** @class */
    /* @__PURE__ */ function() {
      function BotInfo3() {
        this.type = "bot";
        this.bot = true;
        this.name = "bot";
        this.version = null;
        this.os = null;
      }
      return BotInfo3;
    }();
    ReactNativeInfo = /** @class */
    /* @__PURE__ */ function() {
      function ReactNativeInfo3() {
        this.type = "react-native";
        this.name = "react-native";
        this.version = null;
        this.os = null;
      }
      return ReactNativeInfo3;
    }();
    SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
    SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
    REQUIRED_VERSION_PARTS = 3;
    userAgentRules = [
      ["aol", /AOLShield\/([0-9\._]+)/],
      ["edge", /Edge\/([0-9\._]+)/],
      ["edge-ios", /EdgiOS\/([0-9\._]+)/],
      ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
      ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
      ["samsung", /SamsungBrowser\/([0-9\.]+)/],
      ["silk", /\bSilk\/([0-9._-]+)\b/],
      ["miui", /MiuiBrowser\/([0-9\.]+)$/],
      ["beaker", /BeakerBrowser\/([0-9\.]+)/],
      ["edge-chromium", /EdgA?\/([0-9\.]+)/],
      [
        "chromium-webview",
        /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
      ],
      ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
      ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
      ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
      ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
      ["fxios", /FxiOS\/([0-9\.]+)/],
      ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
      ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
      ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
      ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
      ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
      ["ie", /MSIE\s(7\.0)/],
      ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
      ["android", /Android\s([0-9\.]+)/],
      ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
      ["safari", /Version\/([0-9\._]+).*Safari/],
      ["facebook", /FBAV\/([0-9\.]+)/],
      ["instagram", /Instagram\s([0-9\.]+)/],
      ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
      ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
      ["searchbot", SEARCHBOX_UA_REGEX]
    ];
    operatingSystemRules = [
      ["iOS", /iP(hone|od|ad)/],
      ["Android OS", /Android/],
      ["BlackBerry OS", /BlackBerry|BB10/],
      ["Windows Mobile", /IEMobile/],
      ["Amazon OS", /Kindle/],
      ["Windows 3.11", /Win16/],
      ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
      ["Windows 98", /(Windows 98)|(Win98)/],
      ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
      ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
      ["Windows Server 2003", /(Windows NT 5.2)/],
      ["Windows Vista", /(Windows NT 6.0)/],
      ["Windows 7", /(Windows NT 6.1)/],
      ["Windows 8", /(Windows NT 6.2)/],
      ["Windows 8.1", /(Windows NT 6.3)/],
      ["Windows 10", /(Windows NT 10.0)/],
      ["Windows ME", /Windows ME/],
      ["Open BSD", /OpenBSD/],
      ["Sun OS", /SunOS/],
      ["Chrome OS", /CrOS/],
      ["Linux", /(Linux)|(X11)/],
      ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
      ["QNX", /QNX/],
      ["BeOS", /BeOS/],
      ["OS/2", /OS\/2/]
    ];
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/browser.js
function detectEnv(userAgent) {
  return detect(userAgent);
}
function detectOS2() {
  const env = detectEnv();
  return env && env.os ? env.os : void 0;
}
function isAndroid() {
  const os3 = detectOS2();
  return os3 ? os3.toLowerCase().includes("android") : false;
}
function isIOS() {
  const os3 = detectOS2();
  return os3 ? os3.toLowerCase().includes("ios") || os3.toLowerCase().includes("mac") && navigator.maxTouchPoints > 1 : false;
}
function isMobile() {
  const os3 = detectOS2();
  return os3 ? isAndroid() || isIOS() : false;
}
function isNode() {
  const env = detectEnv();
  const result = env && env.name ? env.name.toLowerCase() === "node" : false;
  return result;
}
function isBrowser() {
  const result = !isNode() && !!getNavigator2();
  return result;
}
function getClientMeta() {
  return windowMetadata.getWindowMetadata();
}
var windowMetadata, windowGetters, getFromWindow2, getFromWindowOrThrow2, getDocumentOrThrow2, getDocument2, getNavigatorOrThrow2, getNavigator2, getLocationOrThrow2, getLocation2, getCryptoOrThrow2, getCrypto2, getLocalStorageOrThrow2, getLocalStorage2;
var init_browser = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/browser.js"() {
    windowMetadata = __toESM(require_cjs2());
    windowGetters = __toESM(require_cjs());
    init_es();
    getFromWindow2 = windowGetters.getFromWindow;
    getFromWindowOrThrow2 = windowGetters.getFromWindowOrThrow;
    getDocumentOrThrow2 = windowGetters.getDocumentOrThrow;
    getDocument2 = windowGetters.getDocument;
    getNavigatorOrThrow2 = windowGetters.getNavigatorOrThrow;
    getNavigator2 = windowGetters.getNavigator;
    getLocationOrThrow2 = windowGetters.getLocationOrThrow;
    getLocation2 = windowGetters.getLocation;
    getCryptoOrThrow2 = windowGetters.getCryptoOrThrow;
    getCrypto2 = windowGetters.getCrypto;
    getLocalStorageOrThrow2 = windowGetters.getLocalStorageOrThrow;
    getLocalStorage2 = windowGetters.getLocalStorage;
  }
});

// node_modules/@walletconnect/browser-utils/node_modules/@walletconnect/safe-json/dist/esm/index.js
function safeJsonParse(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSON.parse(value);
  } catch (_a2) {
    return value;
  }
}
function safeJsonStringify(value) {
  return typeof value === "string" ? value : JSON.stringify(value);
}
var init_esm = __esm({
  "node_modules/@walletconnect/browser-utils/node_modules/@walletconnect/safe-json/dist/esm/index.js"() {
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/json.js
var safeJsonParse2, safeJsonStringify2;
var init_json = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/json.js"() {
    init_esm();
    safeJsonParse2 = safeJsonParse;
    safeJsonStringify2 = safeJsonStringify;
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/local.js
function setLocal(key, data) {
  const raw = safeJsonStringify2(data);
  const local = getLocalStorage2();
  if (local) {
    local.setItem(key, raw);
  }
}
function getLocal(key) {
  let data = null;
  let raw = null;
  const local = getLocalStorage2();
  if (local) {
    raw = local.getItem(key);
  }
  data = raw ? safeJsonParse2(raw) : raw;
  return data;
}
function removeLocal(key) {
  const local = getLocalStorage2();
  if (local) {
    local.removeItem(key);
  }
}
var init_local = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/local.js"() {
    init_json();
    init_browser();
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/mobile.js
function formatIOSMobile(uri, entry) {
  const encodedUri = encodeURIComponent(uri);
  return entry.universalLink ? `${entry.universalLink}/wc?uri=${encodedUri}` : entry.deepLink ? `${entry.deepLink}${entry.deepLink.endsWith(":") ? "//" : "/"}wc?uri=${encodedUri}` : "";
}
function saveMobileLinkInfo(data) {
  const focusUri = data.href.split("?")[0];
  setLocal(mobileLinkChoiceKey, Object.assign(Object.assign({}, data), { href: focusUri }));
}
function getMobileRegistryEntry(registry, name2) {
  return registry.filter((entry) => entry.name.toLowerCase().includes(name2.toLowerCase()))[0];
}
function getMobileLinkRegistry(registry, whitelist) {
  let links = registry;
  if (whitelist) {
    links = whitelist.map((name2) => getMobileRegistryEntry(registry, name2)).filter(Boolean);
  }
  return links;
}
var mobileLinkChoiceKey;
var init_mobile = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/mobile.js"() {
    init_local();
    mobileLinkChoiceKey = "WALLETCONNECT_DEEPLINK_CHOICE";
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/registry.js
function getWalletRegistryUrl() {
  return API_URL + "/api/v2/wallets";
}
function getDappRegistryUrl() {
  return API_URL + "/api/v2/dapps";
}
function formatMobileRegistryEntry(entry, platform = "mobile") {
  var _a2;
  return {
    name: entry.name || "",
    shortName: entry.metadata.shortName || "",
    color: entry.metadata.colors.primary || "",
    logo: (_a2 = entry.image_url.sm) !== null && _a2 !== void 0 ? _a2 : "",
    universalLink: entry[platform].universal || "",
    deepLink: entry[platform].native || ""
  };
}
function formatMobileRegistry(registry, platform = "mobile") {
  return Object.values(registry).filter((entry) => !!entry[platform].universal || !!entry[platform].native).map((entry) => formatMobileRegistryEntry(entry, platform));
}
var API_URL;
var init_registry = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/registry.js"() {
    API_URL = "https://registry.walletconnect.com";
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/index.js
var esm_exports2 = {};
__export(esm_exports2, {
  detectEnv: () => detectEnv,
  detectOS: () => detectOS2,
  formatIOSMobile: () => formatIOSMobile,
  formatMobileRegistry: () => formatMobileRegistry,
  formatMobileRegistryEntry: () => formatMobileRegistryEntry,
  getClientMeta: () => getClientMeta,
  getCrypto: () => getCrypto2,
  getCryptoOrThrow: () => getCryptoOrThrow2,
  getDappRegistryUrl: () => getDappRegistryUrl,
  getDocument: () => getDocument2,
  getDocumentOrThrow: () => getDocumentOrThrow2,
  getFromWindow: () => getFromWindow2,
  getFromWindowOrThrow: () => getFromWindowOrThrow2,
  getLocal: () => getLocal,
  getLocalStorage: () => getLocalStorage2,
  getLocalStorageOrThrow: () => getLocalStorageOrThrow2,
  getLocation: () => getLocation2,
  getLocationOrThrow: () => getLocationOrThrow2,
  getMobileLinkRegistry: () => getMobileLinkRegistry,
  getMobileRegistryEntry: () => getMobileRegistryEntry,
  getNavigator: () => getNavigator2,
  getNavigatorOrThrow: () => getNavigatorOrThrow2,
  getWalletRegistryUrl: () => getWalletRegistryUrl,
  isAndroid: () => isAndroid,
  isBrowser: () => isBrowser,
  isIOS: () => isIOS,
  isMobile: () => isMobile,
  isNode: () => isNode,
  mobileLinkChoiceKey: () => mobileLinkChoiceKey,
  removeLocal: () => removeLocal,
  safeJsonParse: () => safeJsonParse2,
  safeJsonStringify: () => safeJsonStringify2,
  saveMobileLinkInfo: () => saveMobileLinkInfo,
  setLocal: () => setLocal
});
var init_esm2 = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/index.js"() {
    init_browser();
    init_json();
    init_local();
    init_mobile();
    init_registry();
  }
});

// node_modules/qrcode/lib/can-promise.js
var require_can_promise = __commonJS({
  "node_modules/qrcode/lib/can-promise.js"(exports, module) {
    module.exports = function() {
      return typeof Promise === "function" && Promise.prototype && Promise.prototype.then;
    };
  }
});

// node_modules/qrcode/lib/utils/typedarray-buffer.js
var require_typedarray_buffer = __commonJS({
  "node_modules/qrcode/lib/utils/typedarray-buffer.js"(exports, module) {
    "use strict";
    var isArray = require_isarray();
    function typedArraySupport() {
      try {
        var arr = new Uint8Array(1);
        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
          return 42;
        } };
        return arr.foo() === 42;
      } catch (e4) {
        return false;
      }
    }
    Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();
    var K_MAX_LENGTH = Buffer2.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
    function Buffer2(arg, offset, length2) {
      if (!Buffer2.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer2)) {
        return new Buffer2(arg, offset, length2);
      }
      if (typeof arg === "number") {
        return allocUnsafe2(this, arg);
      }
      return from3(this, arg, offset, length2);
    }
    if (Buffer2.TYPED_ARRAY_SUPPORT) {
      Buffer2.prototype.__proto__ = Uint8Array.prototype;
      Buffer2.__proto__ = Uint8Array;
      if (typeof Symbol !== "undefined" && Symbol.species && Buffer2[Symbol.species] === Buffer2) {
        Object.defineProperty(Buffer2, Symbol.species, {
          value: null,
          configurable: true,
          enumerable: false,
          writable: false
        });
      }
    }
    function checked(length2) {
      if (length2 >= K_MAX_LENGTH) {
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
      }
      return length2 | 0;
    }
    function isnan(val) {
      return val !== val;
    }
    function createBuffer(that, length2) {
      var buf;
      if (Buffer2.TYPED_ARRAY_SUPPORT) {
        buf = new Uint8Array(length2);
        buf.__proto__ = Buffer2.prototype;
      } else {
        buf = that;
        if (buf === null) {
          buf = new Buffer2(length2);
        }
        buf.length = length2;
      }
      return buf;
    }
    function allocUnsafe2(that, size) {
      var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
      if (!Buffer2.TYPED_ARRAY_SUPPORT) {
        for (var i6 = 0; i6 < size; ++i6) {
          buf[i6] = 0;
        }
      }
      return buf;
    }
    function fromString3(that, string2) {
      var length2 = byteLength(string2) | 0;
      var buf = createBuffer(that, length2);
      var actual = buf.write(string2);
      if (actual !== length2) {
        buf = buf.slice(0, actual);
      }
      return buf;
    }
    function fromArrayLike(that, array) {
      var length2 = array.length < 0 ? 0 : checked(array.length) | 0;
      var buf = createBuffer(that, length2);
      for (var i6 = 0; i6 < length2; i6 += 1) {
        buf[i6] = array[i6] & 255;
      }
      return buf;
    }
    function fromArrayBuffer(that, array, byteOffset, length2) {
      if (byteOffset < 0 || array.byteLength < byteOffset) {
        throw new RangeError("'offset' is out of bounds");
      }
      if (array.byteLength < byteOffset + (length2 || 0)) {
        throw new RangeError("'length' is out of bounds");
      }
      var buf;
      if (byteOffset === void 0 && length2 === void 0) {
        buf = new Uint8Array(array);
      } else if (length2 === void 0) {
        buf = new Uint8Array(array, byteOffset);
      } else {
        buf = new Uint8Array(array, byteOffset, length2);
      }
      if (Buffer2.TYPED_ARRAY_SUPPORT) {
        buf.__proto__ = Buffer2.prototype;
      } else {
        buf = fromArrayLike(that, buf);
      }
      return buf;
    }
    function fromObject(that, obj) {
      if (Buffer2.isBuffer(obj)) {
        var len = checked(obj.length) | 0;
        var buf = createBuffer(that, len);
        if (buf.length === 0) {
          return buf;
        }
        obj.copy(buf, 0, 0, len);
        return buf;
      }
      if (obj) {
        if (typeof ArrayBuffer !== "undefined" && obj.buffer instanceof ArrayBuffer || "length" in obj) {
          if (typeof obj.length !== "number" || isnan(obj.length)) {
            return createBuffer(that, 0);
          }
          return fromArrayLike(that, obj);
        }
        if (obj.type === "Buffer" && Array.isArray(obj.data)) {
          return fromArrayLike(that, obj.data);
        }
      }
      throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
    }
    function utf8ToBytes(string2, units) {
      units = units || Infinity;
      var codePoint;
      var length2 = string2.length;
      var leadSurrogate = null;
      var bytes = [];
      for (var i6 = 0; i6 < length2; ++i6) {
        codePoint = string2.charCodeAt(i6);
        if (codePoint > 55295 && codePoint < 57344) {
          if (!leadSurrogate) {
            if (codePoint > 56319) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              continue;
            } else if (i6 + 1 === length2) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              continue;
            }
            leadSurrogate = codePoint;
            continue;
          }
          if (codePoint < 56320) {
            if ((units -= 3) > -1) bytes.push(239, 191, 189);
            leadSurrogate = codePoint;
            continue;
          }
          codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
        } else if (leadSurrogate) {
          if ((units -= 3) > -1) bytes.push(239, 191, 189);
        }
        leadSurrogate = null;
        if (codePoint < 128) {
          if ((units -= 1) < 0) break;
          bytes.push(codePoint);
        } else if (codePoint < 2048) {
          if ((units -= 2) < 0) break;
          bytes.push(
            codePoint >> 6 | 192,
            codePoint & 63 | 128
          );
        } else if (codePoint < 65536) {
          if ((units -= 3) < 0) break;
          bytes.push(
            codePoint >> 12 | 224,
            codePoint >> 6 & 63 | 128,
            codePoint & 63 | 128
          );
        } else if (codePoint < 1114112) {
          if ((units -= 4) < 0) break;
          bytes.push(
            codePoint >> 18 | 240,
            codePoint >> 12 & 63 | 128,
            codePoint >> 6 & 63 | 128,
            codePoint & 63 | 128
          );
        } else {
          throw new Error("Invalid code point");
        }
      }
      return bytes;
    }
    function byteLength(string2) {
      if (Buffer2.isBuffer(string2)) {
        return string2.length;
      }
      if (typeof ArrayBuffer !== "undefined" && typeof ArrayBuffer.isView === "function" && (ArrayBuffer.isView(string2) || string2 instanceof ArrayBuffer)) {
        return string2.byteLength;
      }
      if (typeof string2 !== "string") {
        string2 = "" + string2;
      }
      var len = string2.length;
      if (len === 0) return 0;
      return utf8ToBytes(string2).length;
    }
    function blitBuffer(src2, dst, offset, length2) {
      for (var i6 = 0; i6 < length2; ++i6) {
        if (i6 + offset >= dst.length || i6 >= src2.length) break;
        dst[i6 + offset] = src2[i6];
      }
      return i6;
    }
    function utf8Write(buf, string2, offset, length2) {
      return blitBuffer(utf8ToBytes(string2, buf.length - offset), buf, offset, length2);
    }
    function from3(that, value, offset, length2) {
      if (typeof value === "number") {
        throw new TypeError('"value" argument must not be a number');
      }
      if (typeof ArrayBuffer !== "undefined" && value instanceof ArrayBuffer) {
        return fromArrayBuffer(that, value, offset, length2);
      }
      if (typeof value === "string") {
        return fromString3(that, value, offset);
      }
      return fromObject(that, value);
    }
    Buffer2.prototype.write = function write(string2, offset, length2) {
      if (offset === void 0) {
        length2 = this.length;
        offset = 0;
      } else if (length2 === void 0 && typeof offset === "string") {
        length2 = this.length;
        offset = 0;
      } else if (isFinite(offset)) {
        offset = offset | 0;
        if (isFinite(length2)) {
          length2 = length2 | 0;
        } else {
          length2 = void 0;
        }
      }
      var remaining = this.length - offset;
      if (length2 === void 0 || length2 > remaining) length2 = remaining;
      if (string2.length > 0 && (length2 < 0 || offset < 0) || offset > this.length) {
        throw new RangeError("Attempt to write outside buffer bounds");
      }
      return utf8Write(this, string2, offset, length2);
    };
    Buffer2.prototype.slice = function slice(start, end) {
      var len = this.length;
      start = ~~start;
      end = end === void 0 ? len : ~~end;
      if (start < 0) {
        start += len;
        if (start < 0) start = 0;
      } else if (start > len) {
        start = len;
      }
      if (end < 0) {
        end += len;
        if (end < 0) end = 0;
      } else if (end > len) {
        end = len;
      }
      if (end < start) end = start;
      var newBuf;
      if (Buffer2.TYPED_ARRAY_SUPPORT) {
        newBuf = this.subarray(start, end);
        newBuf.__proto__ = Buffer2.prototype;
      } else {
        var sliceLen = end - start;
        newBuf = new Buffer2(sliceLen, void 0);
        for (var i6 = 0; i6 < sliceLen; ++i6) {
          newBuf[i6] = this[i6 + start];
        }
      }
      return newBuf;
    };
    Buffer2.prototype.copy = function copy(target, targetStart, start, end) {
      if (!start) start = 0;
      if (!end && end !== 0) end = this.length;
      if (targetStart >= target.length) targetStart = target.length;
      if (!targetStart) targetStart = 0;
      if (end > 0 && end < start) end = start;
      if (end === start) return 0;
      if (target.length === 0 || this.length === 0) return 0;
      if (targetStart < 0) {
        throw new RangeError("targetStart out of bounds");
      }
      if (start < 0 || start >= this.length) throw new RangeError("sourceStart out of bounds");
      if (end < 0) throw new RangeError("sourceEnd out of bounds");
      if (end > this.length) end = this.length;
      if (target.length - targetStart < end - start) {
        end = target.length - targetStart + start;
      }
      var len = end - start;
      var i6;
      if (this === target && start < targetStart && targetStart < end) {
        for (i6 = len - 1; i6 >= 0; --i6) {
          target[i6 + targetStart] = this[i6 + start];
        }
      } else if (len < 1e3 || !Buffer2.TYPED_ARRAY_SUPPORT) {
        for (i6 = 0; i6 < len; ++i6) {
          target[i6 + targetStart] = this[i6 + start];
        }
      } else {
        Uint8Array.prototype.set.call(
          target,
          this.subarray(start, start + len),
          targetStart
        );
      }
      return len;
    };
    Buffer2.prototype.fill = function fill(val, start, end) {
      if (typeof val === "string") {
        if (typeof start === "string") {
          start = 0;
          end = this.length;
        } else if (typeof end === "string") {
          end = this.length;
        }
        if (val.length === 1) {
          var code2 = val.charCodeAt(0);
          if (code2 < 256) {
            val = code2;
          }
        }
      } else if (typeof val === "number") {
        val = val & 255;
      }
      if (start < 0 || this.length < start || this.length < end) {
        throw new RangeError("Out of range index");
      }
      if (end <= start) {
        return this;
      }
      start = start >>> 0;
      end = end === void 0 ? this.length : end >>> 0;
      if (!val) val = 0;
      var i6;
      if (typeof val === "number") {
        for (i6 = start; i6 < end; ++i6) {
          this[i6] = val;
        }
      } else {
        var bytes = Buffer2.isBuffer(val) ? val : new Buffer2(val);
        var len = bytes.length;
        for (i6 = 0; i6 < end - start; ++i6) {
          this[i6 + start] = bytes[i6 % len];
        }
      }
      return this;
    };
    Buffer2.concat = function concat2(list, length2) {
      if (!isArray(list)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }
      if (list.length === 0) {
        return createBuffer(null, 0);
      }
      var i6;
      if (length2 === void 0) {
        length2 = 0;
        for (i6 = 0; i6 < list.length; ++i6) {
          length2 += list[i6].length;
        }
      }
      var buffer = allocUnsafe2(null, length2);
      var pos = 0;
      for (i6 = 0; i6 < list.length; ++i6) {
        var buf = list[i6];
        if (!Buffer2.isBuffer(buf)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        }
        buf.copy(buffer, pos);
        pos += buf.length;
      }
      return buffer;
    };
    Buffer2.byteLength = byteLength;
    Buffer2.prototype._isBuffer = true;
    Buffer2.isBuffer = function isBuffer(b5) {
      return !!(b5 != null && b5._isBuffer);
    };
    module.exports.alloc = function(size) {
      var buffer = new Buffer2(size);
      buffer.fill(0);
      return buffer;
    };
    module.exports.from = function(data) {
      return new Buffer2(data);
    };
  }
});

// node_modules/qrcode/lib/core/utils.js
var require_utils = __commonJS({
  "node_modules/qrcode/lib/core/utils.js"(exports) {
    var toSJISFunction;
    var CODEWORDS_COUNT = [
      0,
      // Not used
      26,
      44,
      70,
      100,
      134,
      172,
      196,
      242,
      292,
      346,
      404,
      466,
      532,
      581,
      655,
      733,
      815,
      901,
      991,
      1085,
      1156,
      1258,
      1364,
      1474,
      1588,
      1706,
      1828,
      1921,
      2051,
      2185,
      2323,
      2465,
      2611,
      2761,
      2876,
      3034,
      3196,
      3362,
      3532,
      3706
    ];
    exports.getSymbolSize = function getSymbolSize(version2) {
      if (!version2) throw new Error('"version" cannot be null or undefined');
      if (version2 < 1 || version2 > 40) throw new Error('"version" should be in range from 1 to 40');
      return version2 * 4 + 17;
    };
    exports.getSymbolTotalCodewords = function getSymbolTotalCodewords(version2) {
      return CODEWORDS_COUNT[version2];
    };
    exports.getBCHDigit = function(data) {
      var digit = 0;
      while (data !== 0) {
        digit++;
        data >>>= 1;
      }
      return digit;
    };
    exports.setToSJISFunction = function setToSJISFunction(f6) {
      if (typeof f6 !== "function") {
        throw new Error('"toSJISFunc" is not a valid function.');
      }
      toSJISFunction = f6;
    };
    exports.isKanjiModeEnabled = function() {
      return typeof toSJISFunction !== "undefined";
    };
    exports.toSJIS = function toSJIS(kanji) {
      return toSJISFunction(kanji);
    };
  }
});

// node_modules/qrcode/lib/core/error-correction-level.js
var require_error_correction_level = __commonJS({
  "node_modules/qrcode/lib/core/error-correction-level.js"(exports) {
    exports.L = { bit: 1 };
    exports.M = { bit: 0 };
    exports.Q = { bit: 3 };
    exports.H = { bit: 2 };
    function fromString3(string2) {
      if (typeof string2 !== "string") {
        throw new Error("Param is not a string");
      }
      var lcStr = string2.toLowerCase();
      switch (lcStr) {
        case "l":
        case "low":
          return exports.L;
        case "m":
        case "medium":
          return exports.M;
        case "q":
        case "quartile":
          return exports.Q;
        case "h":
        case "high":
          return exports.H;
        default:
          throw new Error("Unknown EC Level: " + string2);
      }
    }
    exports.isValid = function isValid(level) {
      return level && typeof level.bit !== "undefined" && level.bit >= 0 && level.bit < 4;
    };
    exports.from = function from3(value, defaultValue) {
      if (exports.isValid(value)) {
        return value;
      }
      try {
        return fromString3(value);
      } catch (e4) {
        return defaultValue;
      }
    };
  }
});

// node_modules/qrcode/lib/core/bit-buffer.js
var require_bit_buffer = __commonJS({
  "node_modules/qrcode/lib/core/bit-buffer.js"(exports, module) {
    function BitBuffer() {
      this.buffer = [];
      this.length = 0;
    }
    BitBuffer.prototype = {
      get: function(index) {
        var bufIndex = Math.floor(index / 8);
        return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) === 1;
      },
      put: function(num, length2) {
        for (var i6 = 0; i6 < length2; i6++) {
          this.putBit((num >>> length2 - i6 - 1 & 1) === 1);
        }
      },
      getLengthInBits: function() {
        return this.length;
      },
      putBit: function(bit) {
        var bufIndex = Math.floor(this.length / 8);
        if (this.buffer.length <= bufIndex) {
          this.buffer.push(0);
        }
        if (bit) {
          this.buffer[bufIndex] |= 128 >>> this.length % 8;
        }
        this.length++;
      }
    };
    module.exports = BitBuffer;
  }
});

// node_modules/qrcode/lib/core/bit-matrix.js
var require_bit_matrix = __commonJS({
  "node_modules/qrcode/lib/core/bit-matrix.js"(exports, module) {
    var BufferUtil = require_typedarray_buffer();
    function BitMatrix(size) {
      if (!size || size < 1) {
        throw new Error("BitMatrix size must be defined and greater than 0");
      }
      this.size = size;
      this.data = BufferUtil.alloc(size * size);
      this.reservedBit = BufferUtil.alloc(size * size);
    }
    BitMatrix.prototype.set = function(row, col, value, reserved) {
      var index = row * this.size + col;
      this.data[index] = value;
      if (reserved) this.reservedBit[index] = true;
    };
    BitMatrix.prototype.get = function(row, col) {
      return this.data[row * this.size + col];
    };
    BitMatrix.prototype.xor = function(row, col, value) {
      this.data[row * this.size + col] ^= value;
    };
    BitMatrix.prototype.isReserved = function(row, col) {
      return this.reservedBit[row * this.size + col];
    };
    module.exports = BitMatrix;
  }
});

// node_modules/qrcode/lib/core/alignment-pattern.js
var require_alignment_pattern = __commonJS({
  "node_modules/qrcode/lib/core/alignment-pattern.js"(exports) {
    var getSymbolSize = require_utils().getSymbolSize;
    exports.getRowColCoords = function getRowColCoords(version2) {
      if (version2 === 1) return [];
      var posCount = Math.floor(version2 / 7) + 2;
      var size = getSymbolSize(version2);
      var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;
      var positions = [size - 7];
      for (var i6 = 1; i6 < posCount - 1; i6++) {
        positions[i6] = positions[i6 - 1] - intervals;
      }
      positions.push(6);
      return positions.reverse();
    };
    exports.getPositions = function getPositions(version2) {
      var coords = [];
      var pos = exports.getRowColCoords(version2);
      var posLength = pos.length;
      for (var i6 = 0; i6 < posLength; i6++) {
        for (var j6 = 0; j6 < posLength; j6++) {
          if (i6 === 0 && j6 === 0 || // top-left
          i6 === 0 && j6 === posLength - 1 || // bottom-left
          i6 === posLength - 1 && j6 === 0) {
            continue;
          }
          coords.push([pos[i6], pos[j6]]);
        }
      }
      return coords;
    };
  }
});

// node_modules/qrcode/lib/core/finder-pattern.js
var require_finder_pattern = __commonJS({
  "node_modules/qrcode/lib/core/finder-pattern.js"(exports) {
    var getSymbolSize = require_utils().getSymbolSize;
    var FINDER_PATTERN_SIZE = 7;
    exports.getPositions = function getPositions(version2) {
      var size = getSymbolSize(version2);
      return [
        // top-left
        [0, 0],
        // top-right
        [size - FINDER_PATTERN_SIZE, 0],
        // bottom-left
        [0, size - FINDER_PATTERN_SIZE]
      ];
    };
  }
});

// node_modules/qrcode/lib/core/mask-pattern.js
var require_mask_pattern = __commonJS({
  "node_modules/qrcode/lib/core/mask-pattern.js"(exports) {
    exports.Patterns = {
      PATTERN000: 0,
      PATTERN001: 1,
      PATTERN010: 2,
      PATTERN011: 3,
      PATTERN100: 4,
      PATTERN101: 5,
      PATTERN110: 6,
      PATTERN111: 7
    };
    var PenaltyScores = {
      N1: 3,
      N2: 3,
      N3: 40,
      N4: 10
    };
    exports.isValid = function isValid(mask) {
      return mask != null && mask !== "" && !isNaN(mask) && mask >= 0 && mask <= 7;
    };
    exports.from = function from3(value) {
      return exports.isValid(value) ? parseInt(value, 10) : void 0;
    };
    exports.getPenaltyN1 = function getPenaltyN1(data) {
      var size = data.size;
      var points = 0;
      var sameCountCol = 0;
      var sameCountRow = 0;
      var lastCol = null;
      var lastRow = null;
      for (var row = 0; row < size; row++) {
        sameCountCol = sameCountRow = 0;
        lastCol = lastRow = null;
        for (var col = 0; col < size; col++) {
          var module2 = data.get(row, col);
          if (module2 === lastCol) {
            sameCountCol++;
          } else {
            if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);
            lastCol = module2;
            sameCountCol = 1;
          }
          module2 = data.get(col, row);
          if (module2 === lastRow) {
            sameCountRow++;
          } else {
            if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);
            lastRow = module2;
            sameCountRow = 1;
          }
        }
        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);
        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);
      }
      return points;
    };
    exports.getPenaltyN2 = function getPenaltyN2(data) {
      var size = data.size;
      var points = 0;
      for (var row = 0; row < size - 1; row++) {
        for (var col = 0; col < size - 1; col++) {
          var last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);
          if (last === 4 || last === 0) points++;
        }
      }
      return points * PenaltyScores.N2;
    };
    exports.getPenaltyN3 = function getPenaltyN3(data) {
      var size = data.size;
      var points = 0;
      var bitsCol = 0;
      var bitsRow = 0;
      for (var row = 0; row < size; row++) {
        bitsCol = bitsRow = 0;
        for (var col = 0; col < size; col++) {
          bitsCol = bitsCol << 1 & 2047 | data.get(row, col);
          if (col >= 10 && (bitsCol === 1488 || bitsCol === 93)) points++;
          bitsRow = bitsRow << 1 & 2047 | data.get(col, row);
          if (col >= 10 && (bitsRow === 1488 || bitsRow === 93)) points++;
        }
      }
      return points * PenaltyScores.N3;
    };
    exports.getPenaltyN4 = function getPenaltyN4(data) {
      var darkCount = 0;
      var modulesCount = data.data.length;
      for (var i6 = 0; i6 < modulesCount; i6++) darkCount += data.data[i6];
      var k5 = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);
      return k5 * PenaltyScores.N4;
    };
    function getMaskAt(maskPattern, i6, j6) {
      switch (maskPattern) {
        case exports.Patterns.PATTERN000:
          return (i6 + j6) % 2 === 0;
        case exports.Patterns.PATTERN001:
          return i6 % 2 === 0;
        case exports.Patterns.PATTERN010:
          return j6 % 3 === 0;
        case exports.Patterns.PATTERN011:
          return (i6 + j6) % 3 === 0;
        case exports.Patterns.PATTERN100:
          return (Math.floor(i6 / 2) + Math.floor(j6 / 3)) % 2 === 0;
        case exports.Patterns.PATTERN101:
          return i6 * j6 % 2 + i6 * j6 % 3 === 0;
        case exports.Patterns.PATTERN110:
          return (i6 * j6 % 2 + i6 * j6 % 3) % 2 === 0;
        case exports.Patterns.PATTERN111:
          return (i6 * j6 % 3 + (i6 + j6) % 2) % 2 === 0;
        default:
          throw new Error("bad maskPattern:" + maskPattern);
      }
    }
    exports.applyMask = function applyMask(pattern, data) {
      var size = data.size;
      for (var col = 0; col < size; col++) {
        for (var row = 0; row < size; row++) {
          if (data.isReserved(row, col)) continue;
          data.xor(row, col, getMaskAt(pattern, row, col));
        }
      }
    };
    exports.getBestMask = function getBestMask(data, setupFormatFunc) {
      var numPatterns = Object.keys(exports.Patterns).length;
      var bestPattern = 0;
      var lowerPenalty = Infinity;
      for (var p5 = 0; p5 < numPatterns; p5++) {
        setupFormatFunc(p5);
        exports.applyMask(p5, data);
        var penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data);
        exports.applyMask(p5, data);
        if (penalty < lowerPenalty) {
          lowerPenalty = penalty;
          bestPattern = p5;
        }
      }
      return bestPattern;
    };
  }
});

// node_modules/qrcode/lib/core/error-correction-code.js
var require_error_correction_code = __commonJS({
  "node_modules/qrcode/lib/core/error-correction-code.js"(exports) {
    var ECLevel = require_error_correction_level();
    var EC_BLOCKS_TABLE = [
      // L  M  Q  H
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      2,
      2,
      1,
      2,
      2,
      4,
      1,
      2,
      4,
      4,
      2,
      4,
      4,
      4,
      2,
      4,
      6,
      5,
      2,
      4,
      6,
      6,
      2,
      5,
      8,
      8,
      4,
      5,
      8,
      8,
      4,
      5,
      8,
      11,
      4,
      8,
      10,
      11,
      4,
      9,
      12,
      16,
      4,
      9,
      16,
      16,
      6,
      10,
      12,
      18,
      6,
      10,
      17,
      16,
      6,
      11,
      16,
      19,
      6,
      13,
      18,
      21,
      7,
      14,
      21,
      25,
      8,
      16,
      20,
      25,
      8,
      17,
      23,
      25,
      9,
      17,
      23,
      34,
      9,
      18,
      25,
      30,
      10,
      20,
      27,
      32,
      12,
      21,
      29,
      35,
      12,
      23,
      34,
      37,
      12,
      25,
      34,
      40,
      13,
      26,
      35,
      42,
      14,
      28,
      38,
      45,
      15,
      29,
      40,
      48,
      16,
      31,
      43,
      51,
      17,
      33,
      45,
      54,
      18,
      35,
      48,
      57,
      19,
      37,
      51,
      60,
      19,
      38,
      53,
      63,
      20,
      40,
      56,
      66,
      21,
      43,
      59,
      70,
      22,
      45,
      62,
      74,
      24,
      47,
      65,
      77,
      25,
      49,
      68,
      81
    ];
    var EC_CODEWORDS_TABLE = [
      // L  M  Q  H
      7,
      10,
      13,
      17,
      10,
      16,
      22,
      28,
      15,
      26,
      36,
      44,
      20,
      36,
      52,
      64,
      26,
      48,
      72,
      88,
      36,
      64,
      96,
      112,
      40,
      72,
      108,
      130,
      48,
      88,
      132,
      156,
      60,
      110,
      160,
      192,
      72,
      130,
      192,
      224,
      80,
      150,
      224,
      264,
      96,
      176,
      260,
      308,
      104,
      198,
      288,
      352,
      120,
      216,
      320,
      384,
      132,
      240,
      360,
      432,
      144,
      280,
      408,
      480,
      168,
      308,
      448,
      532,
      180,
      338,
      504,
      588,
      196,
      364,
      546,
      650,
      224,
      416,
      600,
      700,
      224,
      442,
      644,
      750,
      252,
      476,
      690,
      816,
      270,
      504,
      750,
      900,
      300,
      560,
      810,
      960,
      312,
      588,
      870,
      1050,
      336,
      644,
      952,
      1110,
      360,
      700,
      1020,
      1200,
      390,
      728,
      1050,
      1260,
      420,
      784,
      1140,
      1350,
      450,
      812,
      1200,
      1440,
      480,
      868,
      1290,
      1530,
      510,
      924,
      1350,
      1620,
      540,
      980,
      1440,
      1710,
      570,
      1036,
      1530,
      1800,
      570,
      1064,
      1590,
      1890,
      600,
      1120,
      1680,
      1980,
      630,
      1204,
      1770,
      2100,
      660,
      1260,
      1860,
      2220,
      720,
      1316,
      1950,
      2310,
      750,
      1372,
      2040,
      2430
    ];
    exports.getBlocksCount = function getBlocksCount(version2, errorCorrectionLevel) {
      switch (errorCorrectionLevel) {
        case ECLevel.L:
          return EC_BLOCKS_TABLE[(version2 - 1) * 4 + 0];
        case ECLevel.M:
          return EC_BLOCKS_TABLE[(version2 - 1) * 4 + 1];
        case ECLevel.Q:
          return EC_BLOCKS_TABLE[(version2 - 1) * 4 + 2];
        case ECLevel.H:
          return EC_BLOCKS_TABLE[(version2 - 1) * 4 + 3];
        default:
          return void 0;
      }
    };
    exports.getTotalCodewordsCount = function getTotalCodewordsCount(version2, errorCorrectionLevel) {
      switch (errorCorrectionLevel) {
        case ECLevel.L:
          return EC_CODEWORDS_TABLE[(version2 - 1) * 4 + 0];
        case ECLevel.M:
          return EC_CODEWORDS_TABLE[(version2 - 1) * 4 + 1];
        case ECLevel.Q:
          return EC_CODEWORDS_TABLE[(version2 - 1) * 4 + 2];
        case ECLevel.H:
          return EC_CODEWORDS_TABLE[(version2 - 1) * 4 + 3];
        default:
          return void 0;
      }
    };
  }
});

// node_modules/qrcode/lib/core/galois-field.js
var require_galois_field = __commonJS({
  "node_modules/qrcode/lib/core/galois-field.js"(exports) {
    var BufferUtil = require_typedarray_buffer();
    var EXP_TABLE = BufferUtil.alloc(512);
    var LOG_TABLE = BufferUtil.alloc(256);
    (function initTables() {
      var x5 = 1;
      for (var i6 = 0; i6 < 255; i6++) {
        EXP_TABLE[i6] = x5;
        LOG_TABLE[x5] = i6;
        x5 <<= 1;
        if (x5 & 256) {
          x5 ^= 285;
        }
      }
      for (i6 = 255; i6 < 512; i6++) {
        EXP_TABLE[i6] = EXP_TABLE[i6 - 255];
      }
    })();
    exports.log = function log(n6) {
      if (n6 < 1) throw new Error("log(" + n6 + ")");
      return LOG_TABLE[n6];
    };
    exports.exp = function exp(n6) {
      return EXP_TABLE[n6];
    };
    exports.mul = function mul(x5, y8) {
      if (x5 === 0 || y8 === 0) return 0;
      return EXP_TABLE[LOG_TABLE[x5] + LOG_TABLE[y8]];
    };
  }
});

// node_modules/qrcode/lib/core/polynomial.js
var require_polynomial = __commonJS({
  "node_modules/qrcode/lib/core/polynomial.js"(exports) {
    var BufferUtil = require_typedarray_buffer();
    var GF = require_galois_field();
    exports.mul = function mul(p1, p22) {
      var coeff = BufferUtil.alloc(p1.length + p22.length - 1);
      for (var i6 = 0; i6 < p1.length; i6++) {
        for (var j6 = 0; j6 < p22.length; j6++) {
          coeff[i6 + j6] ^= GF.mul(p1[i6], p22[j6]);
        }
      }
      return coeff;
    };
    exports.mod = function mod(divident, divisor) {
      var result = BufferUtil.from(divident);
      while (result.length - divisor.length >= 0) {
        var coeff = result[0];
        for (var i6 = 0; i6 < divisor.length; i6++) {
          result[i6] ^= GF.mul(divisor[i6], coeff);
        }
        var offset = 0;
        while (offset < result.length && result[offset] === 0) offset++;
        result = result.slice(offset);
      }
      return result;
    };
    exports.generateECPolynomial = function generateECPolynomial(degree) {
      var poly = BufferUtil.from([1]);
      for (var i6 = 0; i6 < degree; i6++) {
        poly = exports.mul(poly, [1, GF.exp(i6)]);
      }
      return poly;
    };
  }
});

// node_modules/qrcode/node_modules/buffer/index.js
var require_buffer = __commonJS({
  "node_modules/qrcode/node_modules/buffer/index.js"(exports) {
    "use strict";
    var base642 = require_base64_js();
    var ieee754 = require_ieee754();
    var customInspectSymbol = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
    exports.Buffer = Buffer2;
    exports.SlowBuffer = SlowBuffer;
    exports.INSPECT_MAX_BYTES = 50;
    var K_MAX_LENGTH = 2147483647;
    exports.kMaxLength = K_MAX_LENGTH;
    Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();
    if (!Buffer2.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
      console.error(
        "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
      );
    }
    function typedArraySupport() {
      try {
        var arr = new Uint8Array(1);
        var proto = { foo: function() {
          return 42;
        } };
        Object.setPrototypeOf(proto, Uint8Array.prototype);
        Object.setPrototypeOf(arr, proto);
        return arr.foo() === 42;
      } catch (e4) {
        return false;
      }
    }
    Object.defineProperty(Buffer2.prototype, "parent", {
      enumerable: true,
      get: function() {
        if (!Buffer2.isBuffer(this)) return void 0;
        return this.buffer;
      }
    });
    Object.defineProperty(Buffer2.prototype, "offset", {
      enumerable: true,
      get: function() {
        if (!Buffer2.isBuffer(this)) return void 0;
        return this.byteOffset;
      }
    });
    function createBuffer(length2) {
      if (length2 > K_MAX_LENGTH) {
        throw new RangeError('The value "' + length2 + '" is invalid for option "size"');
      }
      var buf = new Uint8Array(length2);
      Object.setPrototypeOf(buf, Buffer2.prototype);
      return buf;
    }
    function Buffer2(arg, encodingOrOffset, length2) {
      if (typeof arg === "number") {
        if (typeof encodingOrOffset === "string") {
          throw new TypeError(
            'The "string" argument must be of type string. Received type number'
          );
        }
        return allocUnsafe2(arg);
      }
      return from3(arg, encodingOrOffset, length2);
    }
    Buffer2.poolSize = 8192;
    function from3(value, encodingOrOffset, length2) {
      if (typeof value === "string") {
        return fromString3(value, encodingOrOffset);
      }
      if (ArrayBuffer.isView(value)) {
        return fromArrayView(value);
      }
      if (value == null) {
        throw new TypeError(
          "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
        );
      }
      if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
        return fromArrayBuffer(value, encodingOrOffset, length2);
      }
      if (typeof SharedArrayBuffer !== "undefined" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {
        return fromArrayBuffer(value, encodingOrOffset, length2);
      }
      if (typeof value === "number") {
        throw new TypeError(
          'The "value" argument must not be of type number. Received type number'
        );
      }
      var valueOf = value.valueOf && value.valueOf();
      if (valueOf != null && valueOf !== value) {
        return Buffer2.from(valueOf, encodingOrOffset, length2);
      }
      var b5 = fromObject(value);
      if (b5) return b5;
      if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === "function") {
        return Buffer2.from(
          value[Symbol.toPrimitive]("string"),
          encodingOrOffset,
          length2
        );
      }
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
      );
    }
    Buffer2.from = function(value, encodingOrOffset, length2) {
      return from3(value, encodingOrOffset, length2);
    };
    Object.setPrototypeOf(Buffer2.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(Buffer2, Uint8Array);
    function assertSize(size) {
      if (typeof size !== "number") {
        throw new TypeError('"size" argument must be of type number');
      } else if (size < 0) {
        throw new RangeError('The value "' + size + '" is invalid for option "size"');
      }
    }
    function alloc(size, fill, encoding) {
      assertSize(size);
      if (size <= 0) {
        return createBuffer(size);
      }
      if (fill !== void 0) {
        return typeof encoding === "string" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
      }
      return createBuffer(size);
    }
    Buffer2.alloc = function(size, fill, encoding) {
      return alloc(size, fill, encoding);
    };
    function allocUnsafe2(size) {
      assertSize(size);
      return createBuffer(size < 0 ? 0 : checked(size) | 0);
    }
    Buffer2.allocUnsafe = function(size) {
      return allocUnsafe2(size);
    };
    Buffer2.allocUnsafeSlow = function(size) {
      return allocUnsafe2(size);
    };
    function fromString3(string2, encoding) {
      if (typeof encoding !== "string" || encoding === "") {
        encoding = "utf8";
      }
      if (!Buffer2.isEncoding(encoding)) {
        throw new TypeError("Unknown encoding: " + encoding);
      }
      var length2 = byteLength(string2, encoding) | 0;
      var buf = createBuffer(length2);
      var actual = buf.write(string2, encoding);
      if (actual !== length2) {
        buf = buf.slice(0, actual);
      }
      return buf;
    }
    function fromArrayLike(array) {
      var length2 = array.length < 0 ? 0 : checked(array.length) | 0;
      var buf = createBuffer(length2);
      for (var i6 = 0; i6 < length2; i6 += 1) {
        buf[i6] = array[i6] & 255;
      }
      return buf;
    }
    function fromArrayView(arrayView) {
      if (isInstance(arrayView, Uint8Array)) {
        var copy = new Uint8Array(arrayView);
        return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
      }
      return fromArrayLike(arrayView);
    }
    function fromArrayBuffer(array, byteOffset, length2) {
      if (byteOffset < 0 || array.byteLength < byteOffset) {
        throw new RangeError('"offset" is outside of buffer bounds');
      }
      if (array.byteLength < byteOffset + (length2 || 0)) {
        throw new RangeError('"length" is outside of buffer bounds');
      }
      var buf;
      if (byteOffset === void 0 && length2 === void 0) {
        buf = new Uint8Array(array);
      } else if (length2 === void 0) {
        buf = new Uint8Array(array, byteOffset);
      } else {
        buf = new Uint8Array(array, byteOffset, length2);
      }
      Object.setPrototypeOf(buf, Buffer2.prototype);
      return buf;
    }
    function fromObject(obj) {
      if (Buffer2.isBuffer(obj)) {
        var len = checked(obj.length) | 0;
        var buf = createBuffer(len);
        if (buf.length === 0) {
          return buf;
        }
        obj.copy(buf, 0, 0, len);
        return buf;
      }
      if (obj.length !== void 0) {
        if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
          return createBuffer(0);
        }
        return fromArrayLike(obj);
      }
      if (obj.type === "Buffer" && Array.isArray(obj.data)) {
        return fromArrayLike(obj.data);
      }
    }
    function checked(length2) {
      if (length2 >= K_MAX_LENGTH) {
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
      }
      return length2 | 0;
    }
    function SlowBuffer(length2) {
      if (+length2 != length2) {
        length2 = 0;
      }
      return Buffer2.alloc(+length2);
    }
    Buffer2.isBuffer = function isBuffer(b5) {
      return b5 != null && b5._isBuffer === true && b5 !== Buffer2.prototype;
    };
    Buffer2.compare = function compare2(a6, b5) {
      if (isInstance(a6, Uint8Array)) a6 = Buffer2.from(a6, a6.offset, a6.byteLength);
      if (isInstance(b5, Uint8Array)) b5 = Buffer2.from(b5, b5.offset, b5.byteLength);
      if (!Buffer2.isBuffer(a6) || !Buffer2.isBuffer(b5)) {
        throw new TypeError(
          'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
        );
      }
      if (a6 === b5) return 0;
      var x5 = a6.length;
      var y8 = b5.length;
      for (var i6 = 0, len = Math.min(x5, y8); i6 < len; ++i6) {
        if (a6[i6] !== b5[i6]) {
          x5 = a6[i6];
          y8 = b5[i6];
          break;
        }
      }
      if (x5 < y8) return -1;
      if (y8 < x5) return 1;
      return 0;
    };
    Buffer2.isEncoding = function isEncoding(encoding) {
      switch (String(encoding).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    Buffer2.concat = function concat2(list, length2) {
      if (!Array.isArray(list)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }
      if (list.length === 0) {
        return Buffer2.alloc(0);
      }
      var i6;
      if (length2 === void 0) {
        length2 = 0;
        for (i6 = 0; i6 < list.length; ++i6) {
          length2 += list[i6].length;
        }
      }
      var buffer = Buffer2.allocUnsafe(length2);
      var pos = 0;
      for (i6 = 0; i6 < list.length; ++i6) {
        var buf = list[i6];
        if (isInstance(buf, Uint8Array)) {
          if (pos + buf.length > buffer.length) {
            Buffer2.from(buf).copy(buffer, pos);
          } else {
            Uint8Array.prototype.set.call(
              buffer,
              buf,
              pos
            );
          }
        } else if (!Buffer2.isBuffer(buf)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        } else {
          buf.copy(buffer, pos);
        }
        pos += buf.length;
      }
      return buffer;
    };
    function byteLength(string2, encoding) {
      if (Buffer2.isBuffer(string2)) {
        return string2.length;
      }
      if (ArrayBuffer.isView(string2) || isInstance(string2, ArrayBuffer)) {
        return string2.byteLength;
      }
      if (typeof string2 !== "string") {
        throw new TypeError(
          'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string2
        );
      }
      var len = string2.length;
      var mustMatch = arguments.length > 2 && arguments[2] === true;
      if (!mustMatch && len === 0) return 0;
      var loweredCase = false;
      for (; ; ) {
        switch (encoding) {
          case "ascii":
          case "latin1":
          case "binary":
            return len;
          case "utf8":
          case "utf-8":
            return utf8ToBytes(string2).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return len * 2;
          case "hex":
            return len >>> 1;
          case "base64":
            return base64ToBytes(string2).length;
          default:
            if (loweredCase) {
              return mustMatch ? -1 : utf8ToBytes(string2).length;
            }
            encoding = ("" + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    }
    Buffer2.byteLength = byteLength;
    function slowToString(encoding, start, end) {
      var loweredCase = false;
      if (start === void 0 || start < 0) {
        start = 0;
      }
      if (start > this.length) {
        return "";
      }
      if (end === void 0 || end > this.length) {
        end = this.length;
      }
      if (end <= 0) {
        return "";
      }
      end >>>= 0;
      start >>>= 0;
      if (end <= start) {
        return "";
      }
      if (!encoding) encoding = "utf8";
      while (true) {
        switch (encoding) {
          case "hex":
            return hexSlice(this, start, end);
          case "utf8":
          case "utf-8":
            return utf8Slice(this, start, end);
          case "ascii":
            return asciiSlice(this, start, end);
          case "latin1":
          case "binary":
            return latin1Slice(this, start, end);
          case "base64":
            return base64Slice(this, start, end);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return utf16leSlice(this, start, end);
          default:
            if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
            encoding = (encoding + "").toLowerCase();
            loweredCase = true;
        }
      }
    }
    Buffer2.prototype._isBuffer = true;
    function swap(b5, n6, m5) {
      var i6 = b5[n6];
      b5[n6] = b5[m5];
      b5[m5] = i6;
    }
    Buffer2.prototype.swap16 = function swap16() {
      var len = this.length;
      if (len % 2 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      }
      for (var i6 = 0; i6 < len; i6 += 2) {
        swap(this, i6, i6 + 1);
      }
      return this;
    };
    Buffer2.prototype.swap32 = function swap32() {
      var len = this.length;
      if (len % 4 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      }
      for (var i6 = 0; i6 < len; i6 += 4) {
        swap(this, i6, i6 + 3);
        swap(this, i6 + 1, i6 + 2);
      }
      return this;
    };
    Buffer2.prototype.swap64 = function swap64() {
      var len = this.length;
      if (len % 8 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      }
      for (var i6 = 0; i6 < len; i6 += 8) {
        swap(this, i6, i6 + 7);
        swap(this, i6 + 1, i6 + 6);
        swap(this, i6 + 2, i6 + 5);
        swap(this, i6 + 3, i6 + 4);
      }
      return this;
    };
    Buffer2.prototype.toString = function toString3() {
      var length2 = this.length;
      if (length2 === 0) return "";
      if (arguments.length === 0) return utf8Slice(this, 0, length2);
      return slowToString.apply(this, arguments);
    };
    Buffer2.prototype.toLocaleString = Buffer2.prototype.toString;
    Buffer2.prototype.equals = function equals4(b5) {
      if (!Buffer2.isBuffer(b5)) throw new TypeError("Argument must be a Buffer");
      if (this === b5) return true;
      return Buffer2.compare(this, b5) === 0;
    };
    Buffer2.prototype.inspect = function inspect() {
      var str = "";
      var max = exports.INSPECT_MAX_BYTES;
      str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
      if (this.length > max) str += " ... ";
      return "<Buffer " + str + ">";
    };
    if (customInspectSymbol) {
      Buffer2.prototype[customInspectSymbol] = Buffer2.prototype.inspect;
    }
    Buffer2.prototype.compare = function compare2(target, start, end, thisStart, thisEnd) {
      if (isInstance(target, Uint8Array)) {
        target = Buffer2.from(target, target.offset, target.byteLength);
      }
      if (!Buffer2.isBuffer(target)) {
        throw new TypeError(
          'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target
        );
      }
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = target ? target.length : 0;
      }
      if (thisStart === void 0) {
        thisStart = 0;
      }
      if (thisEnd === void 0) {
        thisEnd = this.length;
      }
      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
        throw new RangeError("out of range index");
      }
      if (thisStart >= thisEnd && start >= end) {
        return 0;
      }
      if (thisStart >= thisEnd) {
        return -1;
      }
      if (start >= end) {
        return 1;
      }
      start >>>= 0;
      end >>>= 0;
      thisStart >>>= 0;
      thisEnd >>>= 0;
      if (this === target) return 0;
      var x5 = thisEnd - thisStart;
      var y8 = end - start;
      var len = Math.min(x5, y8);
      var thisCopy = this.slice(thisStart, thisEnd);
      var targetCopy = target.slice(start, end);
      for (var i6 = 0; i6 < len; ++i6) {
        if (thisCopy[i6] !== targetCopy[i6]) {
          x5 = thisCopy[i6];
          y8 = targetCopy[i6];
          break;
        }
      }
      if (x5 < y8) return -1;
      if (y8 < x5) return 1;
      return 0;
    };
    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
      if (buffer.length === 0) return -1;
      if (typeof byteOffset === "string") {
        encoding = byteOffset;
        byteOffset = 0;
      } else if (byteOffset > 2147483647) {
        byteOffset = 2147483647;
      } else if (byteOffset < -2147483648) {
        byteOffset = -2147483648;
      }
      byteOffset = +byteOffset;
      if (numberIsNaN(byteOffset)) {
        byteOffset = dir ? 0 : buffer.length - 1;
      }
      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
      if (byteOffset >= buffer.length) {
        if (dir) return -1;
        else byteOffset = buffer.length - 1;
      } else if (byteOffset < 0) {
        if (dir) byteOffset = 0;
        else return -1;
      }
      if (typeof val === "string") {
        val = Buffer2.from(val, encoding);
      }
      if (Buffer2.isBuffer(val)) {
        if (val.length === 0) {
          return -1;
        }
        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
      } else if (typeof val === "number") {
        val = val & 255;
        if (typeof Uint8Array.prototype.indexOf === "function") {
          if (dir) {
            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
          } else {
            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
          }
        }
        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
      }
      throw new TypeError("val must be string, number or Buffer");
    }
    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
      var indexSize = 1;
      var arrLength = arr.length;
      var valLength = val.length;
      if (encoding !== void 0) {
        encoding = String(encoding).toLowerCase();
        if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
          if (arr.length < 2 || val.length < 2) {
            return -1;
          }
          indexSize = 2;
          arrLength /= 2;
          valLength /= 2;
          byteOffset /= 2;
        }
      }
      function read2(buf, i7) {
        if (indexSize === 1) {
          return buf[i7];
        } else {
          return buf.readUInt16BE(i7 * indexSize);
        }
      }
      var i6;
      if (dir) {
        var foundIndex = -1;
        for (i6 = byteOffset; i6 < arrLength; i6++) {
          if (read2(arr, i6) === read2(val, foundIndex === -1 ? 0 : i6 - foundIndex)) {
            if (foundIndex === -1) foundIndex = i6;
            if (i6 - foundIndex + 1 === valLength) return foundIndex * indexSize;
          } else {
            if (foundIndex !== -1) i6 -= i6 - foundIndex;
            foundIndex = -1;
          }
        }
      } else {
        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
        for (i6 = byteOffset; i6 >= 0; i6--) {
          var found = true;
          for (var j6 = 0; j6 < valLength; j6++) {
            if (read2(arr, i6 + j6) !== read2(val, j6)) {
              found = false;
              break;
            }
          }
          if (found) return i6;
        }
      }
      return -1;
    }
    Buffer2.prototype.includes = function includes(val, byteOffset, encoding) {
      return this.indexOf(val, byteOffset, encoding) !== -1;
    };
    Buffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
    };
    Buffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
    };
    function hexWrite(buf, string2, offset, length2) {
      offset = Number(offset) || 0;
      var remaining = buf.length - offset;
      if (!length2) {
        length2 = remaining;
      } else {
        length2 = Number(length2);
        if (length2 > remaining) {
          length2 = remaining;
        }
      }
      var strLen = string2.length;
      if (length2 > strLen / 2) {
        length2 = strLen / 2;
      }
      for (var i6 = 0; i6 < length2; ++i6) {
        var parsed = parseInt(string2.substr(i6 * 2, 2), 16);
        if (numberIsNaN(parsed)) return i6;
        buf[offset + i6] = parsed;
      }
      return i6;
    }
    function utf8Write(buf, string2, offset, length2) {
      return blitBuffer(utf8ToBytes(string2, buf.length - offset), buf, offset, length2);
    }
    function asciiWrite(buf, string2, offset, length2) {
      return blitBuffer(asciiToBytes(string2), buf, offset, length2);
    }
    function base64Write(buf, string2, offset, length2) {
      return blitBuffer(base64ToBytes(string2), buf, offset, length2);
    }
    function ucs2Write(buf, string2, offset, length2) {
      return blitBuffer(utf16leToBytes(string2, buf.length - offset), buf, offset, length2);
    }
    Buffer2.prototype.write = function write(string2, offset, length2, encoding) {
      if (offset === void 0) {
        encoding = "utf8";
        length2 = this.length;
        offset = 0;
      } else if (length2 === void 0 && typeof offset === "string") {
        encoding = offset;
        length2 = this.length;
        offset = 0;
      } else if (isFinite(offset)) {
        offset = offset >>> 0;
        if (isFinite(length2)) {
          length2 = length2 >>> 0;
          if (encoding === void 0) encoding = "utf8";
        } else {
          encoding = length2;
          length2 = void 0;
        }
      } else {
        throw new Error(
          "Buffer.write(string, encoding, offset[, length]) is no longer supported"
        );
      }
      var remaining = this.length - offset;
      if (length2 === void 0 || length2 > remaining) length2 = remaining;
      if (string2.length > 0 && (length2 < 0 || offset < 0) || offset > this.length) {
        throw new RangeError("Attempt to write outside buffer bounds");
      }
      if (!encoding) encoding = "utf8";
      var loweredCase = false;
      for (; ; ) {
        switch (encoding) {
          case "hex":
            return hexWrite(this, string2, offset, length2);
          case "utf8":
          case "utf-8":
            return utf8Write(this, string2, offset, length2);
          case "ascii":
          case "latin1":
          case "binary":
            return asciiWrite(this, string2, offset, length2);
          case "base64":
            return base64Write(this, string2, offset, length2);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return ucs2Write(this, string2, offset, length2);
          default:
            if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
            encoding = ("" + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    };
    Buffer2.prototype.toJSON = function toJSON() {
      return {
        type: "Buffer",
        data: Array.prototype.slice.call(this._arr || this, 0)
      };
    };
    function base64Slice(buf, start, end) {
      if (start === 0 && end === buf.length) {
        return base642.fromByteArray(buf);
      } else {
        return base642.fromByteArray(buf.slice(start, end));
      }
    }
    function utf8Slice(buf, start, end) {
      end = Math.min(buf.length, end);
      var res = [];
      var i6 = start;
      while (i6 < end) {
        var firstByte = buf[i6];
        var codePoint = null;
        var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
        if (i6 + bytesPerSequence <= end) {
          var secondByte, thirdByte, fourthByte, tempCodePoint;
          switch (bytesPerSequence) {
            case 1:
              if (firstByte < 128) {
                codePoint = firstByte;
              }
              break;
            case 2:
              secondByte = buf[i6 + 1];
              if ((secondByte & 192) === 128) {
                tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                if (tempCodePoint > 127) {
                  codePoint = tempCodePoint;
                }
              }
              break;
            case 3:
              secondByte = buf[i6 + 1];
              thirdByte = buf[i6 + 2];
              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                  codePoint = tempCodePoint;
                }
              }
              break;
            case 4:
              secondByte = buf[i6 + 1];
              thirdByte = buf[i6 + 2];
              fourthByte = buf[i6 + 3];
              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                  codePoint = tempCodePoint;
                }
              }
          }
        }
        if (codePoint === null) {
          codePoint = 65533;
          bytesPerSequence = 1;
        } else if (codePoint > 65535) {
          codePoint -= 65536;
          res.push(codePoint >>> 10 & 1023 | 55296);
          codePoint = 56320 | codePoint & 1023;
        }
        res.push(codePoint);
        i6 += bytesPerSequence;
      }
      return decodeCodePointsArray(res);
    }
    var MAX_ARGUMENTS_LENGTH = 4096;
    function decodeCodePointsArray(codePoints) {
      var len = codePoints.length;
      if (len <= MAX_ARGUMENTS_LENGTH) {
        return String.fromCharCode.apply(String, codePoints);
      }
      var res = "";
      var i6 = 0;
      while (i6 < len) {
        res += String.fromCharCode.apply(
          String,
          codePoints.slice(i6, i6 += MAX_ARGUMENTS_LENGTH)
        );
      }
      return res;
    }
    function asciiSlice(buf, start, end) {
      var ret = "";
      end = Math.min(buf.length, end);
      for (var i6 = start; i6 < end; ++i6) {
        ret += String.fromCharCode(buf[i6] & 127);
      }
      return ret;
    }
    function latin1Slice(buf, start, end) {
      var ret = "";
      end = Math.min(buf.length, end);
      for (var i6 = start; i6 < end; ++i6) {
        ret += String.fromCharCode(buf[i6]);
      }
      return ret;
    }
    function hexSlice(buf, start, end) {
      var len = buf.length;
      if (!start || start < 0) start = 0;
      if (!end || end < 0 || end > len) end = len;
      var out = "";
      for (var i6 = start; i6 < end; ++i6) {
        out += hexSliceLookupTable[buf[i6]];
      }
      return out;
    }
    function utf16leSlice(buf, start, end) {
      var bytes = buf.slice(start, end);
      var res = "";
      for (var i6 = 0; i6 < bytes.length - 1; i6 += 2) {
        res += String.fromCharCode(bytes[i6] + bytes[i6 + 1] * 256);
      }
      return res;
    }
    Buffer2.prototype.slice = function slice(start, end) {
      var len = this.length;
      start = ~~start;
      end = end === void 0 ? len : ~~end;
      if (start < 0) {
        start += len;
        if (start < 0) start = 0;
      } else if (start > len) {
        start = len;
      }
      if (end < 0) {
        end += len;
        if (end < 0) end = 0;
      } else if (end > len) {
        end = len;
      }
      if (end < start) end = start;
      var newBuf = this.subarray(start, end);
      Object.setPrototypeOf(newBuf, Buffer2.prototype);
      return newBuf;
    };
    function checkOffset(offset, ext, length2) {
      if (offset % 1 !== 0 || offset < 0) throw new RangeError("offset is not uint");
      if (offset + ext > length2) throw new RangeError("Trying to access beyond buffer length");
    }
    Buffer2.prototype.readUintLE = Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) checkOffset(offset, byteLength2, this.length);
      var val = this[offset];
      var mul = 1;
      var i6 = 0;
      while (++i6 < byteLength2 && (mul *= 256)) {
        val += this[offset + i6] * mul;
      }
      return val;
    };
    Buffer2.prototype.readUintBE = Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        checkOffset(offset, byteLength2, this.length);
      }
      var val = this[offset + --byteLength2];
      var mul = 1;
      while (byteLength2 > 0 && (mul *= 256)) {
        val += this[offset + --byteLength2] * mul;
      }
      return val;
    };
    Buffer2.prototype.readUint8 = Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 1, this.length);
      return this[offset];
    };
    Buffer2.prototype.readUint16LE = Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      return this[offset] | this[offset + 1] << 8;
    };
    Buffer2.prototype.readUint16BE = Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      return this[offset] << 8 | this[offset + 1];
    };
    Buffer2.prototype.readUint32LE = Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
    };
    Buffer2.prototype.readUint32BE = Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
    };
    Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) checkOffset(offset, byteLength2, this.length);
      var val = this[offset];
      var mul = 1;
      var i6 = 0;
      while (++i6 < byteLength2 && (mul *= 256)) {
        val += this[offset + i6] * mul;
      }
      mul *= 128;
      if (val >= mul) val -= Math.pow(2, 8 * byteLength2);
      return val;
    };
    Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) checkOffset(offset, byteLength2, this.length);
      var i6 = byteLength2;
      var mul = 1;
      var val = this[offset + --i6];
      while (i6 > 0 && (mul *= 256)) {
        val += this[offset + --i6] * mul;
      }
      mul *= 128;
      if (val >= mul) val -= Math.pow(2, 8 * byteLength2);
      return val;
    };
    Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 1, this.length);
      if (!(this[offset] & 128)) return this[offset];
      return (255 - this[offset] + 1) * -1;
    };
    Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      var val = this[offset] | this[offset + 1] << 8;
      return val & 32768 ? val | 4294901760 : val;
    };
    Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      var val = this[offset + 1] | this[offset] << 8;
      return val & 32768 ? val | 4294901760 : val;
    };
    Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
    };
    Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
    };
    Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return ieee754.read(this, offset, true, 23, 4);
    };
    Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return ieee754.read(this, offset, false, 23, 4);
    };
    Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 8, this.length);
      return ieee754.read(this, offset, true, 52, 8);
    };
    Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 8, this.length);
      return ieee754.read(this, offset, false, 52, 8);
    };
    function checkInt(buf, value, offset, ext, max, min) {
      if (!Buffer2.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
      if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
      if (offset + ext > buf.length) throw new RangeError("Index out of range");
    }
    Buffer2.prototype.writeUintLE = Buffer2.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength2) - 1;
        checkInt(this, value, offset, byteLength2, maxBytes, 0);
      }
      var mul = 1;
      var i6 = 0;
      this[offset] = value & 255;
      while (++i6 < byteLength2 && (mul *= 256)) {
        this[offset + i6] = value / mul & 255;
      }
      return offset + byteLength2;
    };
    Buffer2.prototype.writeUintBE = Buffer2.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength2) - 1;
        checkInt(this, value, offset, byteLength2, maxBytes, 0);
      }
      var i6 = byteLength2 - 1;
      var mul = 1;
      this[offset + i6] = value & 255;
      while (--i6 >= 0 && (mul *= 256)) {
        this[offset + i6] = value / mul & 255;
      }
      return offset + byteLength2;
    };
    Buffer2.prototype.writeUint8 = Buffer2.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 1, 255, 0);
      this[offset] = value & 255;
      return offset + 1;
    };
    Buffer2.prototype.writeUint16LE = Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      return offset + 2;
    };
    Buffer2.prototype.writeUint16BE = Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);
      this[offset] = value >>> 8;
      this[offset + 1] = value & 255;
      return offset + 2;
    };
    Buffer2.prototype.writeUint32LE = Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);
      this[offset + 3] = value >>> 24;
      this[offset + 2] = value >>> 16;
      this[offset + 1] = value >>> 8;
      this[offset] = value & 255;
      return offset + 4;
    };
    Buffer2.prototype.writeUint32BE = Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);
      this[offset] = value >>> 24;
      this[offset + 1] = value >>> 16;
      this[offset + 2] = value >>> 8;
      this[offset + 3] = value & 255;
      return offset + 4;
    };
    Buffer2.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength2 - 1);
        checkInt(this, value, offset, byteLength2, limit - 1, -limit);
      }
      var i6 = 0;
      var mul = 1;
      var sub = 0;
      this[offset] = value & 255;
      while (++i6 < byteLength2 && (mul *= 256)) {
        if (value < 0 && sub === 0 && this[offset + i6 - 1] !== 0) {
          sub = 1;
        }
        this[offset + i6] = (value / mul >> 0) - sub & 255;
      }
      return offset + byteLength2;
    };
    Buffer2.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength2 - 1);
        checkInt(this, value, offset, byteLength2, limit - 1, -limit);
      }
      var i6 = byteLength2 - 1;
      var mul = 1;
      var sub = 0;
      this[offset + i6] = value & 255;
      while (--i6 >= 0 && (mul *= 256)) {
        if (value < 0 && sub === 0 && this[offset + i6 + 1] !== 0) {
          sub = 1;
        }
        this[offset + i6] = (value / mul >> 0) - sub & 255;
      }
      return offset + byteLength2;
    };
    Buffer2.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 1, 127, -128);
      if (value < 0) value = 255 + value + 1;
      this[offset] = value & 255;
      return offset + 1;
    };
    Buffer2.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      return offset + 2;
    };
    Buffer2.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);
      this[offset] = value >>> 8;
      this[offset + 1] = value & 255;
      return offset + 2;
    };
    Buffer2.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      this[offset + 2] = value >>> 16;
      this[offset + 3] = value >>> 24;
      return offset + 4;
    };
    Buffer2.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);
      if (value < 0) value = 4294967295 + value + 1;
      this[offset] = value >>> 24;
      this[offset + 1] = value >>> 16;
      this[offset + 2] = value >>> 8;
      this[offset + 3] = value & 255;
      return offset + 4;
    };
    function checkIEEE754(buf, value, offset, ext, max, min) {
      if (offset + ext > buf.length) throw new RangeError("Index out of range");
      if (offset < 0) throw new RangeError("Index out of range");
    }
    function writeFloat(buf, value, offset, littleEndian, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);
      }
      ieee754.write(buf, value, offset, littleEndian, 23, 4);
      return offset + 4;
    }
    Buffer2.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
      return writeFloat(this, value, offset, true, noAssert);
    };
    Buffer2.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
      return writeFloat(this, value, offset, false, noAssert);
    };
    function writeDouble(buf, value, offset, littleEndian, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);
      }
      ieee754.write(buf, value, offset, littleEndian, 52, 8);
      return offset + 8;
    }
    Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
      return writeDouble(this, value, offset, true, noAssert);
    };
    Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
      return writeDouble(this, value, offset, false, noAssert);
    };
    Buffer2.prototype.copy = function copy(target, targetStart, start, end) {
      if (!Buffer2.isBuffer(target)) throw new TypeError("argument should be a Buffer");
      if (!start) start = 0;
      if (!end && end !== 0) end = this.length;
      if (targetStart >= target.length) targetStart = target.length;
      if (!targetStart) targetStart = 0;
      if (end > 0 && end < start) end = start;
      if (end === start) return 0;
      if (target.length === 0 || this.length === 0) return 0;
      if (targetStart < 0) {
        throw new RangeError("targetStart out of bounds");
      }
      if (start < 0 || start >= this.length) throw new RangeError("Index out of range");
      if (end < 0) throw new RangeError("sourceEnd out of bounds");
      if (end > this.length) end = this.length;
      if (target.length - targetStart < end - start) {
        end = target.length - targetStart + start;
      }
      var len = end - start;
      if (this === target && typeof Uint8Array.prototype.copyWithin === "function") {
        this.copyWithin(targetStart, start, end);
      } else {
        Uint8Array.prototype.set.call(
          target,
          this.subarray(start, end),
          targetStart
        );
      }
      return len;
    };
    Buffer2.prototype.fill = function fill(val, start, end, encoding) {
      if (typeof val === "string") {
        if (typeof start === "string") {
          encoding = start;
          start = 0;
          end = this.length;
        } else if (typeof end === "string") {
          encoding = end;
          end = this.length;
        }
        if (encoding !== void 0 && typeof encoding !== "string") {
          throw new TypeError("encoding must be a string");
        }
        if (typeof encoding === "string" && !Buffer2.isEncoding(encoding)) {
          throw new TypeError("Unknown encoding: " + encoding);
        }
        if (val.length === 1) {
          var code2 = val.charCodeAt(0);
          if (encoding === "utf8" && code2 < 128 || encoding === "latin1") {
            val = code2;
          }
        }
      } else if (typeof val === "number") {
        val = val & 255;
      } else if (typeof val === "boolean") {
        val = Number(val);
      }
      if (start < 0 || this.length < start || this.length < end) {
        throw new RangeError("Out of range index");
      }
      if (end <= start) {
        return this;
      }
      start = start >>> 0;
      end = end === void 0 ? this.length : end >>> 0;
      if (!val) val = 0;
      var i6;
      if (typeof val === "number") {
        for (i6 = start; i6 < end; ++i6) {
          this[i6] = val;
        }
      } else {
        var bytes = Buffer2.isBuffer(val) ? val : Buffer2.from(val, encoding);
        var len = bytes.length;
        if (len === 0) {
          throw new TypeError('The value "' + val + '" is invalid for argument "value"');
        }
        for (i6 = 0; i6 < end - start; ++i6) {
          this[i6 + start] = bytes[i6 % len];
        }
      }
      return this;
    };
    var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
    function base64clean(str) {
      str = str.split("=")[0];
      str = str.trim().replace(INVALID_BASE64_RE, "");
      if (str.length < 2) return "";
      while (str.length % 4 !== 0) {
        str = str + "=";
      }
      return str;
    }
    function utf8ToBytes(string2, units) {
      units = units || Infinity;
      var codePoint;
      var length2 = string2.length;
      var leadSurrogate = null;
      var bytes = [];
      for (var i6 = 0; i6 < length2; ++i6) {
        codePoint = string2.charCodeAt(i6);
        if (codePoint > 55295 && codePoint < 57344) {
          if (!leadSurrogate) {
            if (codePoint > 56319) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              continue;
            } else if (i6 + 1 === length2) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              continue;
            }
            leadSurrogate = codePoint;
            continue;
          }
          if (codePoint < 56320) {
            if ((units -= 3) > -1) bytes.push(239, 191, 189);
            leadSurrogate = codePoint;
            continue;
          }
          codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
        } else if (leadSurrogate) {
          if ((units -= 3) > -1) bytes.push(239, 191, 189);
        }
        leadSurrogate = null;
        if (codePoint < 128) {
          if ((units -= 1) < 0) break;
          bytes.push(codePoint);
        } else if (codePoint < 2048) {
          if ((units -= 2) < 0) break;
          bytes.push(
            codePoint >> 6 | 192,
            codePoint & 63 | 128
          );
        } else if (codePoint < 65536) {
          if ((units -= 3) < 0) break;
          bytes.push(
            codePoint >> 12 | 224,
            codePoint >> 6 & 63 | 128,
            codePoint & 63 | 128
          );
        } else if (codePoint < 1114112) {
          if ((units -= 4) < 0) break;
          bytes.push(
            codePoint >> 18 | 240,
            codePoint >> 12 & 63 | 128,
            codePoint >> 6 & 63 | 128,
            codePoint & 63 | 128
          );
        } else {
          throw new Error("Invalid code point");
        }
      }
      return bytes;
    }
    function asciiToBytes(str) {
      var byteArray = [];
      for (var i6 = 0; i6 < str.length; ++i6) {
        byteArray.push(str.charCodeAt(i6) & 255);
      }
      return byteArray;
    }
    function utf16leToBytes(str, units) {
      var c7, hi2, lo2;
      var byteArray = [];
      for (var i6 = 0; i6 < str.length; ++i6) {
        if ((units -= 2) < 0) break;
        c7 = str.charCodeAt(i6);
        hi2 = c7 >> 8;
        lo2 = c7 % 256;
        byteArray.push(lo2);
        byteArray.push(hi2);
      }
      return byteArray;
    }
    function base64ToBytes(str) {
      return base642.toByteArray(base64clean(str));
    }
    function blitBuffer(src2, dst, offset, length2) {
      for (var i6 = 0; i6 < length2; ++i6) {
        if (i6 + offset >= dst.length || i6 >= src2.length) break;
        dst[i6 + offset] = src2[i6];
      }
      return i6;
    }
    function isInstance(obj, type) {
      return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
    }
    function numberIsNaN(obj) {
      return obj !== obj;
    }
    var hexSliceLookupTable = function() {
      var alphabet2 = "0123456789abcdef";
      var table = new Array(256);
      for (var i6 = 0; i6 < 16; ++i6) {
        var i16 = i6 * 16;
        for (var j6 = 0; j6 < 16; ++j6) {
          table[i16 + j6] = alphabet2[i6] + alphabet2[j6];
        }
      }
      return table;
    }();
  }
});

// node_modules/qrcode/lib/core/reed-solomon-encoder.js
var require_reed_solomon_encoder = __commonJS({
  "node_modules/qrcode/lib/core/reed-solomon-encoder.js"(exports, module) {
    var BufferUtil = require_typedarray_buffer();
    var Polynomial = require_polynomial();
    var Buffer2 = require_buffer().Buffer;
    function ReedSolomonEncoder(degree) {
      this.genPoly = void 0;
      this.degree = degree;
      if (this.degree) this.initialize(this.degree);
    }
    ReedSolomonEncoder.prototype.initialize = function initialize(degree) {
      this.degree = degree;
      this.genPoly = Polynomial.generateECPolynomial(this.degree);
    };
    ReedSolomonEncoder.prototype.encode = function encode5(data) {
      if (!this.genPoly) {
        throw new Error("Encoder not initialized");
      }
      var pad = BufferUtil.alloc(this.degree);
      var paddedData = Buffer2.concat([data, pad], data.length + this.degree);
      var remainder = Polynomial.mod(paddedData, this.genPoly);
      var start = this.degree - remainder.length;
      if (start > 0) {
        var buff = BufferUtil.alloc(this.degree);
        remainder.copy(buff, start);
        return buff;
      }
      return remainder;
    };
    module.exports = ReedSolomonEncoder;
  }
});

// node_modules/qrcode/lib/core/version-check.js
var require_version_check = __commonJS({
  "node_modules/qrcode/lib/core/version-check.js"(exports) {
    exports.isValid = function isValid(version2) {
      return !isNaN(version2) && version2 >= 1 && version2 <= 40;
    };
  }
});

// node_modules/qrcode/lib/core/regex.js
var require_regex = __commonJS({
  "node_modules/qrcode/lib/core/regex.js"(exports) {
    var numeric = "[0-9]+";
    var alphanumeric = "[A-Z $%*+\\-./:]+";
    var kanji = "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";
    kanji = kanji.replace(/u/g, "\\u");
    var byte = "(?:(?![A-Z0-9 $%*+\\-./:]|" + kanji + ")(?:.|[\r\n]))+";
    exports.KANJI = new RegExp(kanji, "g");
    exports.BYTE_KANJI = new RegExp("[^A-Z0-9 $%*+\\-./:]+", "g");
    exports.BYTE = new RegExp(byte, "g");
    exports.NUMERIC = new RegExp(numeric, "g");
    exports.ALPHANUMERIC = new RegExp(alphanumeric, "g");
    var TEST_KANJI = new RegExp("^" + kanji + "$");
    var TEST_NUMERIC = new RegExp("^" + numeric + "$");
    var TEST_ALPHANUMERIC = new RegExp("^[A-Z0-9 $%*+\\-./:]+$");
    exports.testKanji = function testKanji(str) {
      return TEST_KANJI.test(str);
    };
    exports.testNumeric = function testNumeric(str) {
      return TEST_NUMERIC.test(str);
    };
    exports.testAlphanumeric = function testAlphanumeric(str) {
      return TEST_ALPHANUMERIC.test(str);
    };
  }
});

// node_modules/qrcode/lib/core/mode.js
var require_mode = __commonJS({
  "node_modules/qrcode/lib/core/mode.js"(exports) {
    var VersionCheck = require_version_check();
    var Regex = require_regex();
    exports.NUMERIC = {
      id: "Numeric",
      bit: 1 << 0,
      ccBits: [10, 12, 14]
    };
    exports.ALPHANUMERIC = {
      id: "Alphanumeric",
      bit: 1 << 1,
      ccBits: [9, 11, 13]
    };
    exports.BYTE = {
      id: "Byte",
      bit: 1 << 2,
      ccBits: [8, 16, 16]
    };
    exports.KANJI = {
      id: "Kanji",
      bit: 1 << 3,
      ccBits: [8, 10, 12]
    };
    exports.MIXED = {
      bit: -1
    };
    exports.getCharCountIndicator = function getCharCountIndicator(mode, version2) {
      if (!mode.ccBits) throw new Error("Invalid mode: " + mode);
      if (!VersionCheck.isValid(version2)) {
        throw new Error("Invalid version: " + version2);
      }
      if (version2 >= 1 && version2 < 10) return mode.ccBits[0];
      else if (version2 < 27) return mode.ccBits[1];
      return mode.ccBits[2];
    };
    exports.getBestModeForData = function getBestModeForData(dataStr) {
      if (Regex.testNumeric(dataStr)) return exports.NUMERIC;
      else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC;
      else if (Regex.testKanji(dataStr)) return exports.KANJI;
      else return exports.BYTE;
    };
    exports.toString = function toString3(mode) {
      if (mode && mode.id) return mode.id;
      throw new Error("Invalid mode");
    };
    exports.isValid = function isValid(mode) {
      return mode && mode.bit && mode.ccBits;
    };
    function fromString3(string2) {
      if (typeof string2 !== "string") {
        throw new Error("Param is not a string");
      }
      var lcStr = string2.toLowerCase();
      switch (lcStr) {
        case "numeric":
          return exports.NUMERIC;
        case "alphanumeric":
          return exports.ALPHANUMERIC;
        case "kanji":
          return exports.KANJI;
        case "byte":
          return exports.BYTE;
        default:
          throw new Error("Unknown mode: " + string2);
      }
    }
    exports.from = function from3(value, defaultValue) {
      if (exports.isValid(value)) {
        return value;
      }
      try {
        return fromString3(value);
      } catch (e4) {
        return defaultValue;
      }
    };
  }
});

// node_modules/qrcode/lib/core/version.js
var require_version = __commonJS({
  "node_modules/qrcode/lib/core/version.js"(exports) {
    var Utils = require_utils();
    var ECCode = require_error_correction_code();
    var ECLevel = require_error_correction_level();
    var Mode = require_mode();
    var VersionCheck = require_version_check();
    var isArray = require_isarray();
    var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;
    var G18_BCH = Utils.getBCHDigit(G18);
    function getBestVersionForDataLength(mode, length2, errorCorrectionLevel) {
      for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {
        if (length2 <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {
          return currentVersion;
        }
      }
      return void 0;
    }
    function getReservedBitsCount(mode, version2) {
      return Mode.getCharCountIndicator(mode, version2) + 4;
    }
    function getTotalBitsFromDataArray(segments, version2) {
      var totalBits = 0;
      segments.forEach(function(data) {
        var reservedBits = getReservedBitsCount(data.mode, version2);
        totalBits += reservedBits + data.getBitsLength();
      });
      return totalBits;
    }
    function getBestVersionForMixedData(segments, errorCorrectionLevel) {
      for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {
        var length2 = getTotalBitsFromDataArray(segments, currentVersion);
        if (length2 <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {
          return currentVersion;
        }
      }
      return void 0;
    }
    exports.from = function from3(value, defaultValue) {
      if (VersionCheck.isValid(value)) {
        return parseInt(value, 10);
      }
      return defaultValue;
    };
    exports.getCapacity = function getCapacity(version2, errorCorrectionLevel, mode) {
      if (!VersionCheck.isValid(version2)) {
        throw new Error("Invalid QR Code version");
      }
      if (typeof mode === "undefined") mode = Mode.BYTE;
      var totalCodewords = Utils.getSymbolTotalCodewords(version2);
      var ecTotalCodewords = ECCode.getTotalCodewordsCount(version2, errorCorrectionLevel);
      var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;
      if (mode === Mode.MIXED) return dataTotalCodewordsBits;
      var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version2);
      switch (mode) {
        case Mode.NUMERIC:
          return Math.floor(usableBits / 10 * 3);
        case Mode.ALPHANUMERIC:
          return Math.floor(usableBits / 11 * 2);
        case Mode.KANJI:
          return Math.floor(usableBits / 13);
        case Mode.BYTE:
        default:
          return Math.floor(usableBits / 8);
      }
    };
    exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel) {
      var seg;
      var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M);
      if (isArray(data)) {
        if (data.length > 1) {
          return getBestVersionForMixedData(data, ecl);
        }
        if (data.length === 0) {
          return 1;
        }
        seg = data[0];
      } else {
        seg = data;
      }
      return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);
    };
    exports.getEncodedBits = function getEncodedBits(version2) {
      if (!VersionCheck.isValid(version2) || version2 < 7) {
        throw new Error("Invalid QR Code version");
      }
      var d5 = version2 << 12;
      while (Utils.getBCHDigit(d5) - G18_BCH >= 0) {
        d5 ^= G18 << Utils.getBCHDigit(d5) - G18_BCH;
      }
      return version2 << 12 | d5;
    };
  }
});

// node_modules/qrcode/lib/core/format-info.js
var require_format_info = __commonJS({
  "node_modules/qrcode/lib/core/format-info.js"(exports) {
    var Utils = require_utils();
    var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;
    var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;
    var G15_BCH = Utils.getBCHDigit(G15);
    exports.getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {
      var data = errorCorrectionLevel.bit << 3 | mask;
      var d5 = data << 10;
      while (Utils.getBCHDigit(d5) - G15_BCH >= 0) {
        d5 ^= G15 << Utils.getBCHDigit(d5) - G15_BCH;
      }
      return (data << 10 | d5) ^ G15_MASK;
    };
  }
});

// node_modules/qrcode/lib/core/numeric-data.js
var require_numeric_data = __commonJS({
  "node_modules/qrcode/lib/core/numeric-data.js"(exports, module) {
    var Mode = require_mode();
    function NumericData(data) {
      this.mode = Mode.NUMERIC;
      this.data = data.toString();
    }
    NumericData.getBitsLength = function getBitsLength(length2) {
      return 10 * Math.floor(length2 / 3) + (length2 % 3 ? length2 % 3 * 3 + 1 : 0);
    };
    NumericData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    NumericData.prototype.getBitsLength = function getBitsLength() {
      return NumericData.getBitsLength(this.data.length);
    };
    NumericData.prototype.write = function write(bitBuffer) {
      var i6, group, value;
      for (i6 = 0; i6 + 3 <= this.data.length; i6 += 3) {
        group = this.data.substr(i6, 3);
        value = parseInt(group, 10);
        bitBuffer.put(value, 10);
      }
      var remainingNum = this.data.length - i6;
      if (remainingNum > 0) {
        group = this.data.substr(i6);
        value = parseInt(group, 10);
        bitBuffer.put(value, remainingNum * 3 + 1);
      }
    };
    module.exports = NumericData;
  }
});

// node_modules/qrcode/lib/core/alphanumeric-data.js
var require_alphanumeric_data = __commonJS({
  "node_modules/qrcode/lib/core/alphanumeric-data.js"(exports, module) {
    var Mode = require_mode();
    var ALPHA_NUM_CHARS = [
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "A",
      "B",
      "C",
      "D",
      "E",
      "F",
      "G",
      "H",
      "I",
      "J",
      "K",
      "L",
      "M",
      "N",
      "O",
      "P",
      "Q",
      "R",
      "S",
      "T",
      "U",
      "V",
      "W",
      "X",
      "Y",
      "Z",
      " ",
      "$",
      "%",
      "*",
      "+",
      "-",
      ".",
      "/",
      ":"
    ];
    function AlphanumericData(data) {
      this.mode = Mode.ALPHANUMERIC;
      this.data = data;
    }
    AlphanumericData.getBitsLength = function getBitsLength(length2) {
      return 11 * Math.floor(length2 / 2) + 6 * (length2 % 2);
    };
    AlphanumericData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    AlphanumericData.prototype.getBitsLength = function getBitsLength() {
      return AlphanumericData.getBitsLength(this.data.length);
    };
    AlphanumericData.prototype.write = function write(bitBuffer) {
      var i6;
      for (i6 = 0; i6 + 2 <= this.data.length; i6 += 2) {
        var value = ALPHA_NUM_CHARS.indexOf(this.data[i6]) * 45;
        value += ALPHA_NUM_CHARS.indexOf(this.data[i6 + 1]);
        bitBuffer.put(value, 11);
      }
      if (this.data.length % 2) {
        bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i6]), 6);
      }
    };
    module.exports = AlphanumericData;
  }
});

// node_modules/qrcode/lib/core/byte-data.js
var require_byte_data = __commonJS({
  "node_modules/qrcode/lib/core/byte-data.js"(exports, module) {
    var BufferUtil = require_typedarray_buffer();
    var Mode = require_mode();
    function ByteData(data) {
      this.mode = Mode.BYTE;
      this.data = BufferUtil.from(data);
    }
    ByteData.getBitsLength = function getBitsLength(length2) {
      return length2 * 8;
    };
    ByteData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    ByteData.prototype.getBitsLength = function getBitsLength() {
      return ByteData.getBitsLength(this.data.length);
    };
    ByteData.prototype.write = function(bitBuffer) {
      for (var i6 = 0, l6 = this.data.length; i6 < l6; i6++) {
        bitBuffer.put(this.data[i6], 8);
      }
    };
    module.exports = ByteData;
  }
});

// node_modules/qrcode/lib/core/kanji-data.js
var require_kanji_data = __commonJS({
  "node_modules/qrcode/lib/core/kanji-data.js"(exports, module) {
    var Mode = require_mode();
    var Utils = require_utils();
    function KanjiData(data) {
      this.mode = Mode.KANJI;
      this.data = data;
    }
    KanjiData.getBitsLength = function getBitsLength(length2) {
      return length2 * 13;
    };
    KanjiData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    KanjiData.prototype.getBitsLength = function getBitsLength() {
      return KanjiData.getBitsLength(this.data.length);
    };
    KanjiData.prototype.write = function(bitBuffer) {
      var i6;
      for (i6 = 0; i6 < this.data.length; i6++) {
        var value = Utils.toSJIS(this.data[i6]);
        if (value >= 33088 && value <= 40956) {
          value -= 33088;
        } else if (value >= 57408 && value <= 60351) {
          value -= 49472;
        } else {
          throw new Error(
            "Invalid SJIS character: " + this.data[i6] + "\nMake sure your charset is UTF-8"
          );
        }
        value = (value >>> 8 & 255) * 192 + (value & 255);
        bitBuffer.put(value, 13);
      }
    };
    module.exports = KanjiData;
  }
});

// node_modules/dijkstrajs/dijkstra.js
var require_dijkstra = __commonJS({
  "node_modules/dijkstrajs/dijkstra.js"(exports, module) {
    "use strict";
    var dijkstra = {
      single_source_shortest_paths: function(graph, s5, d5) {
        var predecessors = {};
        var costs = {};
        costs[s5] = 0;
        var open = dijkstra.PriorityQueue.make();
        open.push(s5, 0);
        var closest, u5, v5, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;
        while (!open.empty()) {
          closest = open.pop();
          u5 = closest.value;
          cost_of_s_to_u = closest.cost;
          adjacent_nodes = graph[u5] || {};
          for (v5 in adjacent_nodes) {
            if (adjacent_nodes.hasOwnProperty(v5)) {
              cost_of_e = adjacent_nodes[v5];
              cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;
              cost_of_s_to_v = costs[v5];
              first_visit = typeof costs[v5] === "undefined";
              if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {
                costs[v5] = cost_of_s_to_u_plus_cost_of_e;
                open.push(v5, cost_of_s_to_u_plus_cost_of_e);
                predecessors[v5] = u5;
              }
            }
          }
        }
        if (typeof d5 !== "undefined" && typeof costs[d5] === "undefined") {
          var msg = ["Could not find a path from ", s5, " to ", d5, "."].join("");
          throw new Error(msg);
        }
        return predecessors;
      },
      extract_shortest_path_from_predecessor_list: function(predecessors, d5) {
        var nodes = [];
        var u5 = d5;
        var predecessor;
        while (u5) {
          nodes.push(u5);
          predecessor = predecessors[u5];
          u5 = predecessors[u5];
        }
        nodes.reverse();
        return nodes;
      },
      find_path: function(graph, s5, d5) {
        var predecessors = dijkstra.single_source_shortest_paths(graph, s5, d5);
        return dijkstra.extract_shortest_path_from_predecessor_list(
          predecessors,
          d5
        );
      },
      /**
       * A very naive priority queue implementation.
       */
      PriorityQueue: {
        make: function(opts) {
          var T5 = dijkstra.PriorityQueue, t3 = {}, key;
          opts = opts || {};
          for (key in T5) {
            if (T5.hasOwnProperty(key)) {
              t3[key] = T5[key];
            }
          }
          t3.queue = [];
          t3.sorter = opts.sorter || T5.default_sorter;
          return t3;
        },
        default_sorter: function(a6, b5) {
          return a6.cost - b5.cost;
        },
        /**
         * Add a new item to the queue and ensure the highest priority element
         * is at the front of the queue.
         */
        push: function(value, cost) {
          var item = { value, cost };
          this.queue.push(item);
          this.queue.sort(this.sorter);
        },
        /**
         * Return the highest priority element in the queue.
         */
        pop: function() {
          return this.queue.shift();
        },
        empty: function() {
          return this.queue.length === 0;
        }
      }
    };
    if (typeof module !== "undefined") {
      module.exports = dijkstra;
    }
  }
});

// node_modules/qrcode/lib/core/segments.js
var require_segments = __commonJS({
  "node_modules/qrcode/lib/core/segments.js"(exports) {
    var Mode = require_mode();
    var NumericData = require_numeric_data();
    var AlphanumericData = require_alphanumeric_data();
    var ByteData = require_byte_data();
    var KanjiData = require_kanji_data();
    var Regex = require_regex();
    var Utils = require_utils();
    var dijkstra = require_dijkstra();
    function getStringByteLength(str) {
      return unescape(encodeURIComponent(str)).length;
    }
    function getSegments(regex, mode, str) {
      var segments = [];
      var result;
      while ((result = regex.exec(str)) !== null) {
        segments.push({
          data: result[0],
          index: result.index,
          mode,
          length: result[0].length
        });
      }
      return segments;
    }
    function getSegmentsFromString(dataStr) {
      var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr);
      var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr);
      var byteSegs;
      var kanjiSegs;
      if (Utils.isKanjiModeEnabled()) {
        byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr);
        kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr);
      } else {
        byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr);
        kanjiSegs = [];
      }
      var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);
      return segs.sort(function(s1, s22) {
        return s1.index - s22.index;
      }).map(function(obj) {
        return {
          data: obj.data,
          mode: obj.mode,
          length: obj.length
        };
      });
    }
    function getSegmentBitsLength(length2, mode) {
      switch (mode) {
        case Mode.NUMERIC:
          return NumericData.getBitsLength(length2);
        case Mode.ALPHANUMERIC:
          return AlphanumericData.getBitsLength(length2);
        case Mode.KANJI:
          return KanjiData.getBitsLength(length2);
        case Mode.BYTE:
          return ByteData.getBitsLength(length2);
      }
    }
    function mergeSegments(segs) {
      return segs.reduce(function(acc, curr) {
        var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;
        if (prevSeg && prevSeg.mode === curr.mode) {
          acc[acc.length - 1].data += curr.data;
          return acc;
        }
        acc.push(curr);
        return acc;
      }, []);
    }
    function buildNodes(segs) {
      var nodes = [];
      for (var i6 = 0; i6 < segs.length; i6++) {
        var seg = segs[i6];
        switch (seg.mode) {
          case Mode.NUMERIC:
            nodes.push([
              seg,
              { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },
              { data: seg.data, mode: Mode.BYTE, length: seg.length }
            ]);
            break;
          case Mode.ALPHANUMERIC:
            nodes.push([
              seg,
              { data: seg.data, mode: Mode.BYTE, length: seg.length }
            ]);
            break;
          case Mode.KANJI:
            nodes.push([
              seg,
              { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }
            ]);
            break;
          case Mode.BYTE:
            nodes.push([
              { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }
            ]);
        }
      }
      return nodes;
    }
    function buildGraph(nodes, version2) {
      var table = {};
      var graph = { "start": {} };
      var prevNodeIds = ["start"];
      for (var i6 = 0; i6 < nodes.length; i6++) {
        var nodeGroup = nodes[i6];
        var currentNodeIds = [];
        for (var j6 = 0; j6 < nodeGroup.length; j6++) {
          var node = nodeGroup[j6];
          var key = "" + i6 + j6;
          currentNodeIds.push(key);
          table[key] = { node, lastCount: 0 };
          graph[key] = {};
          for (var n6 = 0; n6 < prevNodeIds.length; n6++) {
            var prevNodeId = prevNodeIds[n6];
            if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {
              graph[prevNodeId][key] = getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);
              table[prevNodeId].lastCount += node.length;
            } else {
              if (table[prevNodeId]) table[prevNodeId].lastCount = node.length;
              graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) + 4 + Mode.getCharCountIndicator(node.mode, version2);
            }
          }
        }
        prevNodeIds = currentNodeIds;
      }
      for (n6 = 0; n6 < prevNodeIds.length; n6++) {
        graph[prevNodeIds[n6]]["end"] = 0;
      }
      return { map: graph, table };
    }
    function buildSingleSegment(data, modesHint) {
      var mode;
      var bestMode = Mode.getBestModeForData(data);
      mode = Mode.from(modesHint, bestMode);
      if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {
        throw new Error('"' + data + '" cannot be encoded with mode ' + Mode.toString(mode) + ".\n Suggested mode is: " + Mode.toString(bestMode));
      }
      if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {
        mode = Mode.BYTE;
      }
      switch (mode) {
        case Mode.NUMERIC:
          return new NumericData(data);
        case Mode.ALPHANUMERIC:
          return new AlphanumericData(data);
        case Mode.KANJI:
          return new KanjiData(data);
        case Mode.BYTE:
          return new ByteData(data);
      }
    }
    exports.fromArray = function fromArray(array) {
      return array.reduce(function(acc, seg) {
        if (typeof seg === "string") {
          acc.push(buildSingleSegment(seg, null));
        } else if (seg.data) {
          acc.push(buildSingleSegment(seg.data, seg.mode));
        }
        return acc;
      }, []);
    };
    exports.fromString = function fromString3(data, version2) {
      var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled());
      var nodes = buildNodes(segs);
      var graph = buildGraph(nodes, version2);
      var path = dijkstra.find_path(graph.map, "start", "end");
      var optimizedSegs = [];
      for (var i6 = 1; i6 < path.length - 1; i6++) {
        optimizedSegs.push(graph.table[path[i6]].node);
      }
      return exports.fromArray(mergeSegments(optimizedSegs));
    };
    exports.rawSplit = function rawSplit(data) {
      return exports.fromArray(
        getSegmentsFromString(data, Utils.isKanjiModeEnabled())
      );
    };
  }
});

// node_modules/qrcode/lib/core/qrcode.js
var require_qrcode = __commonJS({
  "node_modules/qrcode/lib/core/qrcode.js"(exports) {
    var BufferUtil = require_typedarray_buffer();
    var Utils = require_utils();
    var ECLevel = require_error_correction_level();
    var BitBuffer = require_bit_buffer();
    var BitMatrix = require_bit_matrix();
    var AlignmentPattern = require_alignment_pattern();
    var FinderPattern = require_finder_pattern();
    var MaskPattern = require_mask_pattern();
    var ECCode = require_error_correction_code();
    var ReedSolomonEncoder = require_reed_solomon_encoder();
    var Version = require_version();
    var FormatInfo = require_format_info();
    var Mode = require_mode();
    var Segments = require_segments();
    var isArray = require_isarray();
    function setupFinderPattern(matrix, version2) {
      var size = matrix.size;
      var pos = FinderPattern.getPositions(version2);
      for (var i6 = 0; i6 < pos.length; i6++) {
        var row = pos[i6][0];
        var col = pos[i6][1];
        for (var r5 = -1; r5 <= 7; r5++) {
          if (row + r5 <= -1 || size <= row + r5) continue;
          for (var c7 = -1; c7 <= 7; c7++) {
            if (col + c7 <= -1 || size <= col + c7) continue;
            if (r5 >= 0 && r5 <= 6 && (c7 === 0 || c7 === 6) || c7 >= 0 && c7 <= 6 && (r5 === 0 || r5 === 6) || r5 >= 2 && r5 <= 4 && c7 >= 2 && c7 <= 4) {
              matrix.set(row + r5, col + c7, true, true);
            } else {
              matrix.set(row + r5, col + c7, false, true);
            }
          }
        }
      }
    }
    function setupTimingPattern(matrix) {
      var size = matrix.size;
      for (var r5 = 8; r5 < size - 8; r5++) {
        var value = r5 % 2 === 0;
        matrix.set(r5, 6, value, true);
        matrix.set(6, r5, value, true);
      }
    }
    function setupAlignmentPattern(matrix, version2) {
      var pos = AlignmentPattern.getPositions(version2);
      for (var i6 = 0; i6 < pos.length; i6++) {
        var row = pos[i6][0];
        var col = pos[i6][1];
        for (var r5 = -2; r5 <= 2; r5++) {
          for (var c7 = -2; c7 <= 2; c7++) {
            if (r5 === -2 || r5 === 2 || c7 === -2 || c7 === 2 || r5 === 0 && c7 === 0) {
              matrix.set(row + r5, col + c7, true, true);
            } else {
              matrix.set(row + r5, col + c7, false, true);
            }
          }
        }
      }
    }
    function setupVersionInfo(matrix, version2) {
      var size = matrix.size;
      var bits = Version.getEncodedBits(version2);
      var row, col, mod;
      for (var i6 = 0; i6 < 18; i6++) {
        row = Math.floor(i6 / 3);
        col = i6 % 3 + size - 8 - 3;
        mod = (bits >> i6 & 1) === 1;
        matrix.set(row, col, mod, true);
        matrix.set(col, row, mod, true);
      }
    }
    function setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {
      var size = matrix.size;
      var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);
      var i6, mod;
      for (i6 = 0; i6 < 15; i6++) {
        mod = (bits >> i6 & 1) === 1;
        if (i6 < 6) {
          matrix.set(i6, 8, mod, true);
        } else if (i6 < 8) {
          matrix.set(i6 + 1, 8, mod, true);
        } else {
          matrix.set(size - 15 + i6, 8, mod, true);
        }
        if (i6 < 8) {
          matrix.set(8, size - i6 - 1, mod, true);
        } else if (i6 < 9) {
          matrix.set(8, 15 - i6 - 1 + 1, mod, true);
        } else {
          matrix.set(8, 15 - i6 - 1, mod, true);
        }
      }
      matrix.set(size - 8, 8, 1, true);
    }
    function setupData(matrix, data) {
      var size = matrix.size;
      var inc = -1;
      var row = size - 1;
      var bitIndex = 7;
      var byteIndex = 0;
      for (var col = size - 1; col > 0; col -= 2) {
        if (col === 6) col--;
        while (true) {
          for (var c7 = 0; c7 < 2; c7++) {
            if (!matrix.isReserved(row, col - c7)) {
              var dark = false;
              if (byteIndex < data.length) {
                dark = (data[byteIndex] >>> bitIndex & 1) === 1;
              }
              matrix.set(row, col - c7, dark);
              bitIndex--;
              if (bitIndex === -1) {
                byteIndex++;
                bitIndex = 7;
              }
            }
          }
          row += inc;
          if (row < 0 || size <= row) {
            row -= inc;
            inc = -inc;
            break;
          }
        }
      }
    }
    function createData(version2, errorCorrectionLevel, segments) {
      var buffer = new BitBuffer();
      segments.forEach(function(data) {
        buffer.put(data.mode.bit, 4);
        buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version2));
        data.write(buffer);
      });
      var totalCodewords = Utils.getSymbolTotalCodewords(version2);
      var ecTotalCodewords = ECCode.getTotalCodewordsCount(version2, errorCorrectionLevel);
      var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;
      if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {
        buffer.put(0, 4);
      }
      while (buffer.getLengthInBits() % 8 !== 0) {
        buffer.putBit(0);
      }
      var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;
      for (var i6 = 0; i6 < remainingByte; i6++) {
        buffer.put(i6 % 2 ? 17 : 236, 8);
      }
      return createCodewords(buffer, version2, errorCorrectionLevel);
    }
    function createCodewords(bitBuffer, version2, errorCorrectionLevel) {
      var totalCodewords = Utils.getSymbolTotalCodewords(version2);
      var ecTotalCodewords = ECCode.getTotalCodewordsCount(version2, errorCorrectionLevel);
      var dataTotalCodewords = totalCodewords - ecTotalCodewords;
      var ecTotalBlocks = ECCode.getBlocksCount(version2, errorCorrectionLevel);
      var blocksInGroup2 = totalCodewords % ecTotalBlocks;
      var blocksInGroup1 = ecTotalBlocks - blocksInGroup2;
      var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);
      var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);
      var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;
      var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;
      var rs4 = new ReedSolomonEncoder(ecCount);
      var offset = 0;
      var dcData = new Array(ecTotalBlocks);
      var ecData = new Array(ecTotalBlocks);
      var maxDataSize = 0;
      var buffer = BufferUtil.from(bitBuffer.buffer);
      for (var b5 = 0; b5 < ecTotalBlocks; b5++) {
        var dataSize = b5 < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;
        dcData[b5] = buffer.slice(offset, offset + dataSize);
        ecData[b5] = rs4.encode(dcData[b5]);
        offset += dataSize;
        maxDataSize = Math.max(maxDataSize, dataSize);
      }
      var data = BufferUtil.alloc(totalCodewords);
      var index = 0;
      var i6, r5;
      for (i6 = 0; i6 < maxDataSize; i6++) {
        for (r5 = 0; r5 < ecTotalBlocks; r5++) {
          if (i6 < dcData[r5].length) {
            data[index++] = dcData[r5][i6];
          }
        }
      }
      for (i6 = 0; i6 < ecCount; i6++) {
        for (r5 = 0; r5 < ecTotalBlocks; r5++) {
          data[index++] = ecData[r5][i6];
        }
      }
      return data;
    }
    function createSymbol(data, version2, errorCorrectionLevel, maskPattern) {
      var segments;
      if (isArray(data)) {
        segments = Segments.fromArray(data);
      } else if (typeof data === "string") {
        var estimatedVersion = version2;
        if (!estimatedVersion) {
          var rawSegments = Segments.rawSplit(data);
          estimatedVersion = Version.getBestVersionForData(
            rawSegments,
            errorCorrectionLevel
          );
        }
        segments = Segments.fromString(data, estimatedVersion || 40);
      } else {
        throw new Error("Invalid data");
      }
      var bestVersion = Version.getBestVersionForData(
        segments,
        errorCorrectionLevel
      );
      if (!bestVersion) {
        throw new Error("The amount of data is too big to be stored in a QR Code");
      }
      if (!version2) {
        version2 = bestVersion;
      } else if (version2 < bestVersion) {
        throw new Error(
          "\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " + bestVersion + ".\n"
        );
      }
      var dataBits = createData(version2, errorCorrectionLevel, segments);
      var moduleCount = Utils.getSymbolSize(version2);
      var modules = new BitMatrix(moduleCount);
      setupFinderPattern(modules, version2);
      setupTimingPattern(modules);
      setupAlignmentPattern(modules, version2);
      setupFormatInfo(modules, errorCorrectionLevel, 0);
      if (version2 >= 7) {
        setupVersionInfo(modules, version2);
      }
      setupData(modules, dataBits);
      if (isNaN(maskPattern)) {
        maskPattern = MaskPattern.getBestMask(
          modules,
          setupFormatInfo.bind(null, modules, errorCorrectionLevel)
        );
      }
      MaskPattern.applyMask(maskPattern, modules);
      setupFormatInfo(modules, errorCorrectionLevel, maskPattern);
      return {
        modules,
        version: version2,
        errorCorrectionLevel,
        maskPattern,
        segments
      };
    }
    exports.create = function create2(data, options) {
      if (typeof data === "undefined" || data === "") {
        throw new Error("No input text");
      }
      var errorCorrectionLevel = ECLevel.M;
      var version2;
      var mask;
      if (typeof options !== "undefined") {
        errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M);
        version2 = Version.from(options.version);
        mask = MaskPattern.from(options.maskPattern);
        if (options.toSJISFunc) {
          Utils.setToSJISFunction(options.toSJISFunc);
        }
      }
      return createSymbol(data, version2, errorCorrectionLevel, mask);
    };
  }
});

// node_modules/qrcode/lib/renderer/utils.js
var require_utils2 = __commonJS({
  "node_modules/qrcode/lib/renderer/utils.js"(exports) {
    function hex2rgba(hex) {
      if (typeof hex === "number") {
        hex = hex.toString();
      }
      if (typeof hex !== "string") {
        throw new Error("Color should be defined as hex string");
      }
      var hexCode = hex.slice().replace("#", "").split("");
      if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {
        throw new Error("Invalid hex color: " + hex);
      }
      if (hexCode.length === 3 || hexCode.length === 4) {
        hexCode = Array.prototype.concat.apply([], hexCode.map(function(c7) {
          return [c7, c7];
        }));
      }
      if (hexCode.length === 6) hexCode.push("F", "F");
      var hexValue = parseInt(hexCode.join(""), 16);
      return {
        r: hexValue >> 24 & 255,
        g: hexValue >> 16 & 255,
        b: hexValue >> 8 & 255,
        a: hexValue & 255,
        hex: "#" + hexCode.slice(0, 6).join("")
      };
    }
    exports.getOptions = function getOptions(options) {
      if (!options) options = {};
      if (!options.color) options.color = {};
      var margin = typeof options.margin === "undefined" || options.margin === null || options.margin < 0 ? 4 : options.margin;
      var width = options.width && options.width >= 21 ? options.width : void 0;
      var scale = options.scale || 4;
      return {
        width,
        scale: width ? 4 : scale,
        margin,
        color: {
          dark: hex2rgba(options.color.dark || "#000000ff"),
          light: hex2rgba(options.color.light || "#ffffffff")
        },
        type: options.type,
        rendererOpts: options.rendererOpts || {}
      };
    };
    exports.getScale = function getScale(qrSize, opts) {
      return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;
    };
    exports.getImageWidth = function getImageWidth(qrSize, opts) {
      var scale = exports.getScale(qrSize, opts);
      return Math.floor((qrSize + opts.margin * 2) * scale);
    };
    exports.qrToImageData = function qrToImageData(imgData, qr2, opts) {
      var size = qr2.modules.size;
      var data = qr2.modules.data;
      var scale = exports.getScale(size, opts);
      var symbolSize = Math.floor((size + opts.margin * 2) * scale);
      var scaledMargin = opts.margin * scale;
      var palette = [opts.color.light, opts.color.dark];
      for (var i6 = 0; i6 < symbolSize; i6++) {
        for (var j6 = 0; j6 < symbolSize; j6++) {
          var posDst = (i6 * symbolSize + j6) * 4;
          var pxColor = opts.color.light;
          if (i6 >= scaledMargin && j6 >= scaledMargin && i6 < symbolSize - scaledMargin && j6 < symbolSize - scaledMargin) {
            var iSrc = Math.floor((i6 - scaledMargin) / scale);
            var jSrc = Math.floor((j6 - scaledMargin) / scale);
            pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];
          }
          imgData[posDst++] = pxColor.r;
          imgData[posDst++] = pxColor.g;
          imgData[posDst++] = pxColor.b;
          imgData[posDst] = pxColor.a;
        }
      }
    };
  }
});

// node_modules/qrcode/lib/renderer/canvas.js
var require_canvas = __commonJS({
  "node_modules/qrcode/lib/renderer/canvas.js"(exports) {
    var Utils = require_utils2();
    function clearCanvas(ctx, canvas, size) {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      if (!canvas.style) canvas.style = {};
      canvas.height = size;
      canvas.width = size;
      canvas.style.height = size + "px";
      canvas.style.width = size + "px";
    }
    function getCanvasElement() {
      try {
        return document.createElement("canvas");
      } catch (e4) {
        throw new Error("You need to specify a canvas element");
      }
    }
    exports.render = function render(qrData, canvas, options) {
      var opts = options;
      var canvasEl = canvas;
      if (typeof opts === "undefined" && (!canvas || !canvas.getContext)) {
        opts = canvas;
        canvas = void 0;
      }
      if (!canvas) {
        canvasEl = getCanvasElement();
      }
      opts = Utils.getOptions(opts);
      var size = Utils.getImageWidth(qrData.modules.size, opts);
      var ctx = canvasEl.getContext("2d");
      var image = ctx.createImageData(size, size);
      Utils.qrToImageData(image.data, qrData, opts);
      clearCanvas(ctx, canvasEl, size);
      ctx.putImageData(image, 0, 0);
      return canvasEl;
    };
    exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {
      var opts = options;
      if (typeof opts === "undefined" && (!canvas || !canvas.getContext)) {
        opts = canvas;
        canvas = void 0;
      }
      if (!opts) opts = {};
      var canvasEl = exports.render(qrData, canvas, opts);
      var type = opts.type || "image/png";
      var rendererOpts = opts.rendererOpts || {};
      return canvasEl.toDataURL(type, rendererOpts.quality);
    };
  }
});

// node_modules/qrcode/lib/renderer/svg-tag.js
var require_svg_tag = __commonJS({
  "node_modules/qrcode/lib/renderer/svg-tag.js"(exports) {
    var Utils = require_utils2();
    function getColorAttrib(color, attrib) {
      var alpha = color.a / 255;
      var str = attrib + '="' + color.hex + '"';
      return alpha < 1 ? str + " " + attrib + '-opacity="' + alpha.toFixed(2).slice(1) + '"' : str;
    }
    function svgCmd(cmd, x5, y8) {
      var str = cmd + x5;
      if (typeof y8 !== "undefined") str += " " + y8;
      return str;
    }
    function qrToPath(data, size, margin) {
      var path = "";
      var moveBy = 0;
      var newRow = false;
      var lineLength = 0;
      for (var i6 = 0; i6 < data.length; i6++) {
        var col = Math.floor(i6 % size);
        var row = Math.floor(i6 / size);
        if (!col && !newRow) newRow = true;
        if (data[i6]) {
          lineLength++;
          if (!(i6 > 0 && col > 0 && data[i6 - 1])) {
            path += newRow ? svgCmd("M", col + margin, 0.5 + row + margin) : svgCmd("m", moveBy, 0);
            moveBy = 0;
            newRow = false;
          }
          if (!(col + 1 < size && data[i6 + 1])) {
            path += svgCmd("h", lineLength);
            lineLength = 0;
          }
        } else {
          moveBy++;
        }
      }
      return path;
    }
    exports.render = function render(qrData, options, cb) {
      var opts = Utils.getOptions(options);
      var size = qrData.modules.size;
      var data = qrData.modules.data;
      var qrcodesize = size + opts.margin * 2;
      var bg = !opts.color.light.a ? "" : "<path " + getColorAttrib(opts.color.light, "fill") + ' d="M0 0h' + qrcodesize + "v" + qrcodesize + 'H0z"/>';
      var path = "<path " + getColorAttrib(opts.color.dark, "stroke") + ' d="' + qrToPath(data, size, opts.margin) + '"/>';
      var viewBox = 'viewBox="0 0 ' + qrcodesize + " " + qrcodesize + '"';
      var width = !opts.width ? "" : 'width="' + opts.width + '" height="' + opts.width + '" ';
      var svgTag = '<svg xmlns="http://www.w3.org/2000/svg" ' + width + viewBox + ' shape-rendering="crispEdges">' + bg + path + "</svg>\n";
      if (typeof cb === "function") {
        cb(null, svgTag);
      }
      return svgTag;
    };
  }
});

// node_modules/qrcode/lib/browser.js
var require_browser = __commonJS({
  "node_modules/qrcode/lib/browser.js"(exports) {
    var canPromise = require_can_promise();
    var QRCode = require_qrcode();
    var CanvasRenderer = require_canvas();
    var SvgRenderer = require_svg_tag();
    function renderCanvas(renderFunc, canvas, text, opts, cb) {
      var args = [].slice.call(arguments, 1);
      var argsNum = args.length;
      var isLastArgCb = typeof args[argsNum - 1] === "function";
      if (!isLastArgCb && !canPromise()) {
        throw new Error("Callback required as last argument");
      }
      if (isLastArgCb) {
        if (argsNum < 2) {
          throw new Error("Too few arguments provided");
        }
        if (argsNum === 2) {
          cb = text;
          text = canvas;
          canvas = opts = void 0;
        } else if (argsNum === 3) {
          if (canvas.getContext && typeof cb === "undefined") {
            cb = opts;
            opts = void 0;
          } else {
            cb = opts;
            opts = text;
            text = canvas;
            canvas = void 0;
          }
        }
      } else {
        if (argsNum < 1) {
          throw new Error("Too few arguments provided");
        }
        if (argsNum === 1) {
          text = canvas;
          canvas = opts = void 0;
        } else if (argsNum === 2 && !canvas.getContext) {
          opts = text;
          text = canvas;
          canvas = void 0;
        }
        return new Promise(function(resolve, reject) {
          try {
            var data2 = QRCode.create(text, opts);
            resolve(renderFunc(data2, canvas, opts));
          } catch (e4) {
            reject(e4);
          }
        });
      }
      try {
        var data = QRCode.create(text, opts);
        cb(null, renderFunc(data, canvas, opts));
      } catch (e4) {
        cb(e4);
      }
    }
    exports.create = QRCode.create;
    exports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render);
    exports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL);
    exports.toString = renderCanvas.bind(null, function(data, _6, opts) {
      return SvgRenderer.render(data, opts);
    });
  }
});

// node_modules/toggle-selection/index.js
var require_toggle_selection = __commonJS({
  "node_modules/toggle-selection/index.js"(exports, module) {
    module.exports = function() {
      var selection = document.getSelection();
      if (!selection.rangeCount) {
        return function() {
        };
      }
      var active = document.activeElement;
      var ranges = [];
      for (var i6 = 0; i6 < selection.rangeCount; i6++) {
        ranges.push(selection.getRangeAt(i6));
      }
      switch (active.tagName.toUpperCase()) {
        case "INPUT":
        case "TEXTAREA":
          active.blur();
          break;
        default:
          active = null;
          break;
      }
      selection.removeAllRanges();
      return function() {
        selection.type === "Caret" && selection.removeAllRanges();
        if (!selection.rangeCount) {
          ranges.forEach(function(range) {
            selection.addRange(range);
          });
        }
        active && active.focus();
      };
    };
  }
});

// node_modules/copy-to-clipboard/index.js
var require_copy_to_clipboard = __commonJS({
  "node_modules/copy-to-clipboard/index.js"(exports, module) {
    "use strict";
    var deselectCurrent = require_toggle_selection();
    var clipboardToIE11Formatting = {
      "text/plain": "Text",
      "text/html": "Url",
      "default": "Text"
    };
    var defaultMessage = "Copy to clipboard: #{key}, Enter";
    function format(message) {
      var copyKey = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
      return message.replace(/#{\s*key\s*}/g, copyKey);
    }
    function copy(text, options) {
      var debug, message, reselectPrevious, range, selection, mark, success = false;
      if (!options) {
        options = {};
      }
      debug = options.debug || false;
      try {
        reselectPrevious = deselectCurrent();
        range = document.createRange();
        selection = document.getSelection();
        mark = document.createElement("span");
        mark.textContent = text;
        mark.ariaHidden = "true";
        mark.style.all = "unset";
        mark.style.position = "fixed";
        mark.style.top = 0;
        mark.style.clip = "rect(0, 0, 0, 0)";
        mark.style.whiteSpace = "pre";
        mark.style.webkitUserSelect = "text";
        mark.style.MozUserSelect = "text";
        mark.style.msUserSelect = "text";
        mark.style.userSelect = "text";
        mark.addEventListener("copy", function(e4) {
          e4.stopPropagation();
          if (options.format) {
            e4.preventDefault();
            if (typeof e4.clipboardData === "undefined") {
              debug && console.warn("unable to use e.clipboardData");
              debug && console.warn("trying IE specific stuff");
              window.clipboardData.clearData();
              var format2 = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting["default"];
              window.clipboardData.setData(format2, text);
            } else {
              e4.clipboardData.clearData();
              e4.clipboardData.setData(options.format, text);
            }
          }
          if (options.onCopy) {
            e4.preventDefault();
            options.onCopy(e4.clipboardData);
          }
        });
        document.body.appendChild(mark);
        range.selectNodeContents(mark);
        selection.addRange(range);
        var successful = document.execCommand("copy");
        if (!successful) {
          throw new Error("copy command was unsuccessful");
        }
        success = true;
      } catch (err) {
        debug && console.error("unable to copy using execCommand: ", err);
        debug && console.warn("trying IE specific stuff");
        try {
          window.clipboardData.setData(options.format || "text", text);
          options.onCopy && options.onCopy(window.clipboardData);
          success = true;
        } catch (err2) {
          debug && console.error("unable to copy using clipboardData: ", err2);
          debug && console.error("falling back to prompt");
          message = format("message" in options ? options.message : defaultMessage);
          window.prompt(message, text);
        }
      } finally {
        if (selection) {
          if (typeof selection.removeRange == "function") {
            selection.removeRange(range);
          } else {
            selection.removeAllRanges();
          }
        }
        if (mark) {
          document.body.removeChild(mark);
        }
        reselectPrevious();
      }
      return success;
    }
    module.exports = copy;
  }
});

// node_modules/preact/dist/preact.module.js
function a(n6, l6) {
  for (var u5 in l6) n6[u5] = l6[u5];
  return n6;
}
function v(n6) {
  var l6 = n6.parentNode;
  l6 && l6.removeChild(n6);
}
function h(n6, l6, u5) {
  var i6, t3 = arguments, r5 = {};
  for (i6 in l6) "key" !== i6 && "ref" !== i6 && (r5[i6] = l6[i6]);
  if (arguments.length > 3) for (u5 = [u5], i6 = 3; i6 < arguments.length; i6++) u5.push(t3[i6]);
  if (null != u5 && (r5.children = u5), "function" == typeof n6 && null != n6.defaultProps) for (i6 in n6.defaultProps) void 0 === r5[i6] && (r5[i6] = n6.defaultProps[i6]);
  return p(n6, r5, l6 && l6.key, l6 && l6.ref, null);
}
function p(l6, u5, i6, t3, r5) {
  var o6 = { type: l6, props: u5, key: i6, ref: t3, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, constructor: void 0, __v: r5 };
  return null == r5 && (o6.__v = o6), n.vnode && n.vnode(o6), o6;
}
function y() {
  return {};
}
function d(n6) {
  return n6.children;
}
function m(n6, l6) {
  this.props = n6, this.context = l6;
}
function w(n6, l6) {
  if (null == l6) return n6.__ ? w(n6.__, n6.__.__k.indexOf(n6) + 1) : null;
  for (var u5; l6 < n6.__k.length; l6++) if (null != (u5 = n6.__k[l6]) && null != u5.__e) return u5.__e;
  return "function" == typeof n6.type ? w(n6) : null;
}
function k(n6) {
  var l6, u5;
  if (null != (n6 = n6.__) && null != n6.__c) {
    for (n6.__e = n6.__c.base = null, l6 = 0; l6 < n6.__k.length; l6++) if (null != (u5 = n6.__k[l6]) && null != u5.__e) {
      n6.__e = n6.__c.base = u5.__e;
      break;
    }
    return k(n6);
  }
}
function g(l6) {
  (!l6.__d && (l6.__d = true) && u.push(l6) && !i++ || r !== n.debounceRendering) && ((r = n.debounceRendering) || t)(_);
}
function _() {
  for (var n6; i = u.length; ) n6 = u.sort(function(n7, l6) {
    return n7.__v.__b - l6.__v.__b;
  }), u = [], n6.some(function(n7) {
    var l6, u5, i6, t3, r5, o6, f6;
    n7.__d && (o6 = (r5 = (l6 = n7).__v).__e, (f6 = l6.__P) && (u5 = [], (i6 = a({}, r5)).__v = i6, t3 = A(f6, r5, i6, l6.__n, void 0 !== f6.ownerSVGElement, null, u5, null == o6 ? w(r5) : o6), T(u5, r5), t3 != o6 && k(r5)));
  });
}
function b(n6, l6, u5, i6, t3, r5, o6, f6, s5) {
  var a6, h7, p5, y8, d5, m5, k5, g5 = u5 && u5.__k || c, _6 = g5.length;
  if (f6 == e && (f6 = null != r5 ? r5[0] : _6 ? w(u5, 0) : null), a6 = 0, l6.__k = x(l6.__k, function(u6) {
    if (null != u6) {
      if (u6.__ = l6, u6.__b = l6.__b + 1, null === (p5 = g5[a6]) || p5 && u6.key == p5.key && u6.type === p5.type) g5[a6] = void 0;
      else for (h7 = 0; h7 < _6; h7++) {
        if ((p5 = g5[h7]) && u6.key == p5.key && u6.type === p5.type) {
          g5[h7] = void 0;
          break;
        }
        p5 = null;
      }
      if (y8 = A(n6, u6, p5 = p5 || e, i6, t3, r5, o6, f6, s5), (h7 = u6.ref) && p5.ref != h7 && (k5 || (k5 = []), p5.ref && k5.push(p5.ref, null, u6), k5.push(h7, u6.__c || y8, u6)), null != y8) {
        var c7;
        if (null == m5 && (m5 = y8), void 0 !== u6.__d) c7 = u6.__d, u6.__d = void 0;
        else if (r5 == p5 || y8 != f6 || null == y8.parentNode) {
          n: if (null == f6 || f6.parentNode !== n6) n6.appendChild(y8), c7 = null;
          else {
            for (d5 = f6, h7 = 0; (d5 = d5.nextSibling) && h7 < _6; h7 += 2) if (d5 == y8) break n;
            n6.insertBefore(y8, f6), c7 = f6;
          }
          "option" == l6.type && (n6.value = "");
        }
        f6 = void 0 !== c7 ? c7 : y8.nextSibling, "function" == typeof l6.type && (l6.__d = f6);
      } else f6 && p5.__e == f6 && f6.parentNode != n6 && (f6 = w(p5));
    }
    return a6++, u6;
  }), l6.__e = m5, null != r5 && "function" != typeof l6.type) for (a6 = r5.length; a6--; ) null != r5[a6] && v(r5[a6]);
  for (a6 = _6; a6--; ) null != g5[a6] && D(g5[a6], g5[a6]);
  if (k5) for (a6 = 0; a6 < k5.length; a6++) j(k5[a6], k5[++a6], k5[++a6]);
}
function x(n6, l6, u5) {
  if (null == u5 && (u5 = []), null == n6 || "boolean" == typeof n6) l6 && u5.push(l6(null));
  else if (Array.isArray(n6)) for (var i6 = 0; i6 < n6.length; i6++) x(n6[i6], l6, u5);
  else u5.push(l6 ? l6("string" == typeof n6 || "number" == typeof n6 ? p(null, n6, null, null, n6) : null != n6.__e || null != n6.__c ? p(n6.type, n6.props, n6.key, null, n6.__v) : n6) : n6);
  return u5;
}
function P(n6, l6, u5, i6, t3) {
  var r5;
  for (r5 in u5) "children" === r5 || "key" === r5 || r5 in l6 || N(n6, r5, null, u5[r5], i6);
  for (r5 in l6) t3 && "function" != typeof l6[r5] || "children" === r5 || "key" === r5 || "value" === r5 || "checked" === r5 || u5[r5] === l6[r5] || N(n6, r5, l6[r5], u5[r5], i6);
}
function C(n6, l6, u5) {
  "-" === l6[0] ? n6.setProperty(l6, u5) : n6[l6] = "number" == typeof u5 && false === s.test(l6) ? u5 + "px" : null == u5 ? "" : u5;
}
function N(n6, l6, u5, i6, t3) {
  var r5, o6, f6, e4, c7;
  if (t3 ? "className" === l6 && (l6 = "class") : "class" === l6 && (l6 = "className"), "style" === l6) if (r5 = n6.style, "string" == typeof u5) r5.cssText = u5;
  else {
    if ("string" == typeof i6 && (r5.cssText = "", i6 = null), i6) for (e4 in i6) u5 && e4 in u5 || C(r5, e4, "");
    if (u5) for (c7 in u5) i6 && u5[c7] === i6[c7] || C(r5, c7, u5[c7]);
  }
  else "o" === l6[0] && "n" === l6[1] ? (o6 = l6 !== (l6 = l6.replace(/Capture$/, "")), f6 = l6.toLowerCase(), l6 = (f6 in n6 ? f6 : l6).slice(2), u5 ? (i6 || n6.addEventListener(l6, z, o6), (n6.l || (n6.l = {}))[l6] = u5) : n6.removeEventListener(l6, z, o6)) : "list" !== l6 && "tagName" !== l6 && "form" !== l6 && "type" !== l6 && "size" !== l6 && !t3 && l6 in n6 ? n6[l6] = null == u5 ? "" : u5 : "function" != typeof u5 && "dangerouslySetInnerHTML" !== l6 && (l6 !== (l6 = l6.replace(/^xlink:?/, "")) ? null == u5 || false === u5 ? n6.removeAttributeNS("http://www.w3.org/1999/xlink", l6.toLowerCase()) : n6.setAttributeNS("http://www.w3.org/1999/xlink", l6.toLowerCase(), u5) : null == u5 || false === u5 && !/^ar/.test(l6) ? n6.removeAttribute(l6) : n6.setAttribute(l6, u5));
}
function z(l6) {
  this.l[l6.type](n.event ? n.event(l6) : l6);
}
function A(l6, u5, i6, t3, r5, o6, f6, e4, c7) {
  var s5, v5, h7, p5, y8, w7, k5, g5, _6, x5, P3 = u5.type;
  if (void 0 !== u5.constructor) return null;
  (s5 = n.__b) && s5(u5);
  try {
    n: if ("function" == typeof P3) {
      if (g5 = u5.props, _6 = (s5 = P3.contextType) && t3[s5.__c], x5 = s5 ? _6 ? _6.props.value : s5.__ : t3, i6.__c ? k5 = (v5 = u5.__c = i6.__c).__ = v5.__E : ("prototype" in P3 && P3.prototype.render ? u5.__c = v5 = new P3(g5, x5) : (u5.__c = v5 = new m(g5, x5), v5.constructor = P3, v5.render = E), _6 && _6.sub(v5), v5.props = g5, v5.state || (v5.state = {}), v5.context = x5, v5.__n = t3, h7 = v5.__d = true, v5.__h = []), null == v5.__s && (v5.__s = v5.state), null != P3.getDerivedStateFromProps && (v5.__s == v5.state && (v5.__s = a({}, v5.__s)), a(v5.__s, P3.getDerivedStateFromProps(g5, v5.__s))), p5 = v5.props, y8 = v5.state, h7) null == P3.getDerivedStateFromProps && null != v5.componentWillMount && v5.componentWillMount(), null != v5.componentDidMount && v5.__h.push(v5.componentDidMount);
      else {
        if (null == P3.getDerivedStateFromProps && g5 !== p5 && null != v5.componentWillReceiveProps && v5.componentWillReceiveProps(g5, x5), !v5.__e && null != v5.shouldComponentUpdate && false === v5.shouldComponentUpdate(g5, v5.__s, x5) || u5.__v === i6.__v && !v5.__) {
          for (v5.props = g5, v5.state = v5.__s, u5.__v !== i6.__v && (v5.__d = false), v5.__v = u5, u5.__e = i6.__e, u5.__k = i6.__k, v5.__h.length && f6.push(v5), s5 = 0; s5 < u5.__k.length; s5++) u5.__k[s5] && (u5.__k[s5].__ = u5);
          break n;
        }
        null != v5.componentWillUpdate && v5.componentWillUpdate(g5, v5.__s, x5), null != v5.componentDidUpdate && v5.__h.push(function() {
          v5.componentDidUpdate(p5, y8, w7);
        });
      }
      v5.context = x5, v5.props = g5, v5.state = v5.__s, (s5 = n.__r) && s5(u5), v5.__d = false, v5.__v = u5, v5.__P = l6, s5 = v5.render(v5.props, v5.state, v5.context), u5.__k = null != s5 && s5.type == d && null == s5.key ? s5.props.children : Array.isArray(s5) ? s5 : [s5], null != v5.getChildContext && (t3 = a(a({}, t3), v5.getChildContext())), h7 || null == v5.getSnapshotBeforeUpdate || (w7 = v5.getSnapshotBeforeUpdate(p5, y8)), b(l6, u5, i6, t3, r5, o6, f6, e4, c7), v5.base = u5.__e, v5.__h.length && f6.push(v5), k5 && (v5.__E = v5.__ = null), v5.__e = false;
    } else null == o6 && u5.__v === i6.__v ? (u5.__k = i6.__k, u5.__e = i6.__e) : u5.__e = $(i6.__e, u5, i6, t3, r5, o6, f6, c7);
    (s5 = n.diffed) && s5(u5);
  } catch (l7) {
    u5.__v = null, n.__e(l7, u5, i6);
  }
  return u5.__e;
}
function T(l6, u5) {
  n.__c && n.__c(u5, l6), l6.some(function(u6) {
    try {
      l6 = u6.__h, u6.__h = [], l6.some(function(n6) {
        n6.call(u6);
      });
    } catch (l7) {
      n.__e(l7, u6.__v);
    }
  });
}
function $(n6, l6, u5, i6, t3, r5, o6, f6) {
  var s5, a6, v5, h7, p5, y8 = u5.props, d5 = l6.props;
  if (t3 = "svg" === l6.type || t3, null != r5) {
    for (s5 = 0; s5 < r5.length; s5++) if (null != (a6 = r5[s5]) && ((null === l6.type ? 3 === a6.nodeType : a6.localName === l6.type) || n6 == a6)) {
      n6 = a6, r5[s5] = null;
      break;
    }
  }
  if (null == n6) {
    if (null === l6.type) return document.createTextNode(d5);
    n6 = t3 ? document.createElementNS("http://www.w3.org/2000/svg", l6.type) : document.createElement(l6.type, d5.is && { is: d5.is }), r5 = null, f6 = false;
  }
  if (null === l6.type) y8 !== d5 && n6.data != d5 && (n6.data = d5);
  else {
    if (null != r5 && (r5 = c.slice.call(n6.childNodes)), v5 = (y8 = u5.props || e).dangerouslySetInnerHTML, h7 = d5.dangerouslySetInnerHTML, !f6) {
      if (y8 === e) for (y8 = {}, p5 = 0; p5 < n6.attributes.length; p5++) y8[n6.attributes[p5].name] = n6.attributes[p5].value;
      (h7 || v5) && (h7 && v5 && h7.__html == v5.__html || (n6.innerHTML = h7 && h7.__html || ""));
    }
    P(n6, d5, y8, t3, f6), h7 ? l6.__k = [] : (l6.__k = l6.props.children, b(n6, l6, u5, i6, "foreignObject" !== l6.type && t3, r5, o6, e, f6)), f6 || ("value" in d5 && void 0 !== (s5 = d5.value) && s5 !== n6.value && N(n6, "value", s5, y8.value, false), "checked" in d5 && void 0 !== (s5 = d5.checked) && s5 !== n6.checked && N(n6, "checked", s5, y8.checked, false));
  }
  return n6;
}
function j(l6, u5, i6) {
  try {
    "function" == typeof l6 ? l6(u5) : l6.current = u5;
  } catch (l7) {
    n.__e(l7, i6);
  }
}
function D(l6, u5, i6) {
  var t3, r5, o6;
  if (n.unmount && n.unmount(l6), (t3 = l6.ref) && (t3.current && t3.current !== l6.__e || j(t3, null, u5)), i6 || "function" == typeof l6.type || (i6 = null != (r5 = l6.__e)), l6.__e = l6.__d = void 0, null != (t3 = l6.__c)) {
    if (t3.componentWillUnmount) try {
      t3.componentWillUnmount();
    } catch (l7) {
      n.__e(l7, u5);
    }
    t3.base = t3.__P = null;
  }
  if (t3 = l6.__k) for (o6 = 0; o6 < t3.length; o6++) t3[o6] && D(t3[o6], u5, i6);
  null != r5 && v(r5);
}
function E(n6, l6, u5) {
  return this.constructor(n6, u5);
}
function H(l6, u5, i6) {
  var t3, r5, f6;
  n.__ && n.__(l6, u5), r5 = (t3 = i6 === o) ? null : i6 && i6.__k || u5.__k, l6 = h(d, null, [l6]), f6 = [], A(u5, (t3 ? u5 : i6 || u5).__k = l6, r5 || e, e, void 0 !== u5.ownerSVGElement, i6 && !t3 ? [i6] : r5 ? null : c.slice.call(u5.childNodes), f6, i6 || e, t3), T(f6, l6);
}
function I(n6, l6) {
  H(n6, l6, o);
}
function L(n6, l6) {
  var u5, i6;
  for (i6 in l6 = a(a({}, n6.props), l6), arguments.length > 2 && (l6.children = c.slice.call(arguments, 2)), u5 = {}, l6) "key" !== i6 && "ref" !== i6 && (u5[i6] = l6[i6]);
  return p(n6.type, u5, l6.key || n6.key, l6.ref || n6.ref, null);
}
function M(n6) {
  var l6 = {}, u5 = { __c: "__cC" + f++, __: n6, Consumer: function(n7, l7) {
    return n7.children(l7);
  }, Provider: function(n7) {
    var i6, t3 = this;
    return this.getChildContext || (i6 = [], this.getChildContext = function() {
      return l6[u5.__c] = t3, l6;
    }, this.shouldComponentUpdate = function(n8) {
      t3.props.value !== n8.value && i6.some(function(l7) {
        l7.context = n8.value, g(l7);
      });
    }, this.sub = function(n8) {
      i6.push(n8);
      var l7 = n8.componentWillUnmount;
      n8.componentWillUnmount = function() {
        i6.splice(i6.indexOf(n8), 1), l7 && l7.call(n8);
      };
    }), n7.children;
  } };
  return u5.Consumer.contextType = u5, u5.Provider.__ = u5, u5;
}
var n, l, u, i, t, r, o, f, e, c, s;
var init_preact_module = __esm({
  "node_modules/preact/dist/preact.module.js"() {
    e = {};
    c = [];
    s = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;
    n = { __e: function(n6, l6) {
      for (var u5, i6; l6 = l6.__; ) if ((u5 = l6.__c) && !u5.__) try {
        if (u5.constructor && null != u5.constructor.getDerivedStateFromError && (i6 = true, u5.setState(u5.constructor.getDerivedStateFromError(n6))), null != u5.componentDidCatch && (i6 = true, u5.componentDidCatch(n6)), i6) return g(u5.__E = u5);
      } catch (l7) {
        n6 = l7;
      }
      throw n6;
    } }, l = function(n6) {
      return null != n6 && void 0 === n6.constructor;
    }, m.prototype.setState = function(n6, l6) {
      var u5;
      u5 = this.__s !== this.state ? this.__s : this.__s = a({}, this.state), "function" == typeof n6 && (n6 = n6(u5, this.props)), n6 && a(u5, n6), null != n6 && this.__v && (l6 && this.__h.push(l6), g(this));
    }, m.prototype.forceUpdate = function(n6) {
      this.__v && (this.__e = true, n6 && this.__h.push(n6), g(this));
    }, m.prototype.render = d, u = [], i = 0, t = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, o = e, f = 0;
  }
});

// node_modules/preact/hooks/dist/hooks.module.js
function v2(t3, r5) {
  n.__h && n.__h(u2, t3, i2 || r5), i2 = 0;
  var o6 = u2.__H || (u2.__H = { __: [], __h: [] });
  return t3 >= o6.__.length && o6.__.push({}), o6.__[t3];
}
function m2(n6) {
  return i2 = 1, p2(E2, n6);
}
function p2(n6, r5, i6) {
  var o6 = v2(t2++, 2);
  return o6.__c || (o6.__c = u2, o6.__ = [i6 ? i6(r5) : E2(void 0, r5), function(t3) {
    var u5 = n6(o6.__[0], t3);
    o6.__[0] !== u5 && (o6.__[0] = u5, o6.__c.setState({}));
  }]), o6.__;
}
function l2(r5, i6) {
  var o6 = v2(t2++, 3);
  !n.__s && x2(o6.__H, i6) && (o6.__ = r5, o6.__H = i6, u2.__H.__h.push(o6));
}
function y2(r5, i6) {
  var o6 = v2(t2++, 4);
  !n.__s && x2(o6.__H, i6) && (o6.__ = r5, o6.__H = i6, u2.__h.push(o6));
}
function d2(n6) {
  return i2 = 5, h2(function() {
    return { current: n6 };
  }, []);
}
function s2(n6, t3, u5) {
  i2 = 6, y2(function() {
    "function" == typeof n6 ? n6(t3()) : n6 && (n6.current = t3());
  }, null == u5 ? u5 : u5.concat(n6));
}
function h2(n6, u5) {
  var r5 = v2(t2++, 7);
  return x2(r5.__H, u5) ? (r5.__H = u5, r5.__h = n6, r5.__ = n6()) : r5.__;
}
function T2(n6, t3) {
  return i2 = 8, h2(function() {
    return n6;
  }, t3);
}
function w2(n6) {
  var r5 = u2.context[n6.__c], i6 = v2(t2++, 9);
  return i6.__c = n6, r5 ? (null == i6.__ && (i6.__ = true, r5.sub(u2)), r5.props.value) : n6.__;
}
function A2(t3, u5) {
  n.useDebugValue && n.useDebugValue(u5 ? u5(t3) : t3);
}
function F(n6) {
  var r5 = v2(t2++, 10), i6 = m2();
  return r5.__ = n6, u2.componentDidCatch || (u2.componentDidCatch = function(n7) {
    r5.__ && r5.__(n7), i6[1](n7);
  }), [i6[0], function() {
    i6[1](void 0);
  }];
}
function _2() {
  o2.some(function(t3) {
    if (t3.__P) try {
      t3.__H.__h.forEach(g2), t3.__H.__h.forEach(q), t3.__H.__h = [];
    } catch (u5) {
      return t3.__H.__h = [], n.__e(u5, t3.__v), true;
    }
  }), o2 = [];
}
function g2(n6) {
  n6.t && n6.t();
}
function q(n6) {
  var t3 = n6.__();
  "function" == typeof t3 && (n6.t = t3);
}
function x2(n6, t3) {
  return !n6 || t3.some(function(t4, u5) {
    return t4 !== n6[u5];
  });
}
function E2(n6, t3) {
  return "function" == typeof t3 ? t3(n6) : t3;
}
var t2, u2, r2, i2, o2, c2, f2, e2, a2;
var init_hooks_module = __esm({
  "node_modules/preact/hooks/dist/hooks.module.js"() {
    init_preact_module();
    i2 = 0;
    o2 = [];
    c2 = n.__r;
    f2 = n.diffed;
    e2 = n.__c;
    a2 = n.unmount;
    n.__r = function(n6) {
      c2 && c2(n6), t2 = 0, (u2 = n6.__c).__H && (u2.__H.__h.forEach(g2), u2.__H.__h.forEach(q), u2.__H.__h = []);
    }, n.diffed = function(t3) {
      f2 && f2(t3);
      var u5 = t3.__c;
      if (u5) {
        var i6 = u5.__H;
        i6 && i6.__h.length && (1 !== o2.push(u5) && r2 === n.requestAnimationFrame || ((r2 = n.requestAnimationFrame) || function(n6) {
          var t4, u6 = function() {
            clearTimeout(r5), cancelAnimationFrame(t4), setTimeout(n6);
          }, r5 = setTimeout(u6, 100);
          "undefined" != typeof window && (t4 = requestAnimationFrame(u6));
        })(_2));
      }
    }, n.__c = function(t3, u5) {
      u5.some(function(t4) {
        try {
          t4.__h.forEach(g2), t4.__h = t4.__h.filter(function(n6) {
            return !n6.__ || q(n6);
          });
        } catch (r5) {
          u5.some(function(n6) {
            n6.__h && (n6.__h = []);
          }), u5 = [], n.__e(r5, t4.__v);
        }
      }), e2 && e2(t3, u5);
    }, n.unmount = function(t3) {
      a2 && a2(t3);
      var u5 = t3.__c;
      if (u5) {
        var r5 = u5.__H;
        if (r5) try {
          r5.__.forEach(function(n6) {
            return n6.t && n6.t();
          });
        } catch (t4) {
          n.__e(t4, u5.__v);
        }
      }
    };
  }
});

// node_modules/preact/compat/dist/compat.module.js
var compat_module_exports = {};
__export(compat_module_exports, {
  Children: () => R,
  Component: () => m,
  Fragment: () => d,
  PureComponent: () => C2,
  Suspense: () => U,
  SuspenseList: () => O,
  cloneElement: () => K,
  createContext: () => M,
  createElement: () => h,
  createFactory: () => G,
  createPortal: () => z2,
  createRef: () => y,
  default: () => compat_module_default,
  findDOMNode: () => X,
  forwardRef: () => S,
  hydrate: () => V,
  isValidElement: () => J,
  lazy: () => L2,
  memo: () => _3,
  render: () => T3,
  unmountComponentAtNode: () => Q,
  unstable_batchedUpdates: () => Y,
  useCallback: () => T2,
  useContext: () => w2,
  useDebugValue: () => A2,
  useEffect: () => l2,
  useErrorBoundary: () => F,
  useImperativeHandle: () => s2,
  useLayoutEffect: () => y2,
  useMemo: () => h2,
  useReducer: () => p2,
  useRef: () => d2,
  useState: () => m2,
  version: () => B
});
function E3(n6, t3) {
  for (var e4 in t3) n6[e4] = t3[e4];
  return n6;
}
function w3(n6, t3) {
  for (var e4 in n6) if ("__source" !== e4 && !(e4 in t3)) return true;
  for (var r5 in t3) if ("__source" !== r5 && n6[r5] !== t3[r5]) return true;
  return false;
}
function _3(n6, t3) {
  function e4(n7) {
    var e5 = this.props.ref, r6 = e5 == n7.ref;
    return !r6 && e5 && (e5.call ? e5(null) : e5.current = null), t3 ? !t3(this.props, n7) || !r6 : w3(this.props, n7);
  }
  function r5(t4) {
    return this.shouldComponentUpdate = e4, h(n6, E3({}, t4));
  }
  return r5.prototype.isReactComponent = true, r5.displayName = "Memo(" + (n6.displayName || n6.name) + ")", r5.t = true, r5;
}
function S(n6) {
  function t3(t4) {
    var e4 = E3({}, t4);
    return delete e4.ref, n6(e4, t4.ref);
  }
  return t3.prototype.isReactComponent = t3.t = true, t3.displayName = "ForwardRef(" + (n6.displayName || n6.name) + ")", t3;
}
function N2(n6) {
  return n6 && ((n6 = E3({}, n6)).__c = null, n6.__k = n6.__k && n6.__k.map(N2)), n6;
}
function U() {
  this.__u = 0, this.o = null, this.__b = null;
}
function M2(n6) {
  var t3 = n6.__.__c;
  return t3 && t3.u && t3.u(n6);
}
function L2(n6) {
  var t3, e4, r5;
  function o6(o7) {
    if (t3 || (t3 = n6()).then(function(n7) {
      e4 = n7.default || n7;
    }, function(n7) {
      r5 = n7;
    }), r5) throw r5;
    if (!e4) throw t3;
    return h(e4, o7);
  }
  return o6.displayName = "Lazy", o6.t = true, o6;
}
function O() {
  this.i = null, this.l = null;
}
function j2(n6) {
  var t3 = this, e4 = n6.container, r5 = h(W, { context: t3.context }, n6.vnode);
  return t3.s && t3.s !== e4 && (t3.v.parentNode && t3.s.removeChild(t3.v), D(t3.h), t3.p = false), n6.vnode ? t3.p ? (e4.__k = t3.__k, H(r5, e4), t3.__k = e4.__k) : (t3.v = document.createTextNode(""), I("", e4), e4.appendChild(t3.v), t3.p = true, t3.s = e4, H(r5, e4, t3.v), t3.__k = t3.v.__k) : t3.p && (t3.v.parentNode && t3.s.removeChild(t3.v), D(t3.h)), t3.h = r5, t3.componentWillUnmount = function() {
    t3.v.parentNode && t3.s.removeChild(t3.v), D(t3.h);
  }, null;
}
function z2(n6, t3) {
  return h(j2, { vnode: n6, container: t3 });
}
function T3(n6, t3, e4) {
  if (null == t3.__k) for (; t3.firstChild; ) t3.removeChild(t3.firstChild);
  return H(n6, t3), "function" == typeof e4 && e4(), n6 ? n6.__c : null;
}
function V(n6, t3, e4) {
  return I(n6, t3), "function" == typeof e4 && e4(), n6 ? n6.__c : null;
}
function I2(n6, t3) {
  n6["UNSAFE_" + t3] && !n6[t3] && Object.defineProperty(n6, t3, { configurable: false, get: function() {
    return this["UNSAFE_" + t3];
  }, set: function(n7) {
    this["UNSAFE_" + t3] = n7;
  } });
}
function G(n6) {
  return h.bind(null, n6);
}
function J(n6) {
  return !!n6 && n6.$$typeof === H2;
}
function K(n6) {
  return J(n6) ? L.apply(null, arguments) : n6;
}
function Q(n6) {
  return !!n6.__k && (H(null, n6), true);
}
function X(n6) {
  return n6 && (n6.base || 1 === n6.nodeType && n6) || null;
}
var C2, A3, k2, R, F2, P2, W, D2, H2, Z, $2, q2, B, Y, compat_module_default;
var init_compat_module = __esm({
  "node_modules/preact/compat/dist/compat.module.js"() {
    init_hooks_module();
    init_hooks_module();
    init_preact_module();
    init_preact_module();
    C2 = function(n6) {
      var t3, e4;
      function r5(t4) {
        var e5;
        return (e5 = n6.call(this, t4) || this).isPureReactComponent = true, e5;
      }
      return e4 = n6, (t3 = r5).prototype = Object.create(e4.prototype), t3.prototype.constructor = t3, t3.__proto__ = e4, r5.prototype.shouldComponentUpdate = function(n7, t4) {
        return w3(this.props, n7) || w3(this.state, t4);
      }, r5;
    }(m);
    A3 = n.__b;
    n.__b = function(n6) {
      n6.type && n6.type.t && n6.ref && (n6.props.ref = n6.ref, n6.ref = null), A3 && A3(n6);
    };
    k2 = function(n6, t3) {
      return n6 ? x(n6).reduce(function(n7, e4, r5) {
        return n7.concat(t3(e4, r5));
      }, []) : null;
    };
    R = { map: k2, forEach: k2, count: function(n6) {
      return n6 ? x(n6).length : 0;
    }, only: function(n6) {
      if (1 !== (n6 = x(n6)).length) throw new Error("Children.only() expects only one child.");
      return n6[0];
    }, toArray: x };
    F2 = n.__e;
    n.__e = function(n6, t3, e4) {
      if (n6.then) {
        for (var r5, o6 = t3; o6 = o6.__; ) if ((r5 = o6.__c) && r5.__c) return r5.__c(n6, t3.__c);
      }
      F2(n6, t3, e4);
    }, (U.prototype = new m()).__c = function(n6, t3) {
      var e4 = this;
      null == e4.o && (e4.o = []), e4.o.push(t3);
      var r5 = M2(e4.__v), o6 = false, u5 = function() {
        o6 || (o6 = true, r5 ? r5(i6) : i6());
      };
      t3.__c = t3.componentWillUnmount, t3.componentWillUnmount = function() {
        u5(), t3.__c && t3.__c();
      };
      var i6 = function() {
        var n7;
        if (!--e4.__u) for (e4.__v.__k[0] = e4.state.u, e4.setState({ u: e4.__b = null }); n7 = e4.o.pop(); ) n7.forceUpdate();
      };
      e4.__u++ || e4.setState({ u: e4.__b = e4.__v.__k[0] }), n6.then(u5, u5);
    }, U.prototype.render = function(n6, t3) {
      return this.__b && (this.__v.__k[0] = N2(this.__b), this.__b = null), [h(m, null, t3.u ? null : n6.children), t3.u && n6.fallback];
    };
    P2 = function(n6, t3, e4) {
      if (++e4[1] === e4[0] && n6.l.delete(t3), n6.props.revealOrder && ("t" !== n6.props.revealOrder[0] || !n6.l.size)) for (e4 = n6.i; e4; ) {
        for (; e4.length > 3; ) e4.pop()();
        if (e4[1] < e4[0]) break;
        n6.i = e4 = e4[2];
      }
    };
    (O.prototype = new m()).u = function(n6) {
      var t3 = this, e4 = M2(t3.__v), r5 = t3.l.get(n6);
      return r5[0]++, function(o6) {
        var u5 = function() {
          t3.props.revealOrder ? (r5.push(o6), P2(t3, n6, r5)) : o6();
        };
        e4 ? e4(u5) : u5();
      };
    }, O.prototype.render = function(n6) {
      this.i = null, this.l = /* @__PURE__ */ new Map();
      var t3 = x(n6.children);
      n6.revealOrder && "b" === n6.revealOrder[0] && t3.reverse();
      for (var e4 = t3.length; e4--; ) this.l.set(t3[e4], this.i = [1, 0, this.i]);
      return n6.children;
    }, O.prototype.componentDidUpdate = O.prototype.componentDidMount = function() {
      var n6 = this;
      n6.l.forEach(function(t3, e4) {
        P2(n6, e4, t3);
      });
    };
    W = function() {
      function n6() {
      }
      var t3 = n6.prototype;
      return t3.getChildContext = function() {
        return this.props.context;
      }, t3.render = function(n7) {
        return n7.children;
      }, n6;
    }();
    D2 = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;
    m.prototype.isReactComponent = {};
    H2 = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
    Z = n.event;
    n.event = function(n6) {
      Z && (n6 = Z(n6)), n6.persist = function() {
      };
      var t3 = false, e4 = false, r5 = n6.stopPropagation;
      n6.stopPropagation = function() {
        r5.call(n6), t3 = true;
      };
      var o6 = n6.preventDefault;
      return n6.preventDefault = function() {
        o6.call(n6), e4 = true;
      }, n6.isPropagationStopped = function() {
        return t3;
      }, n6.isDefaultPrevented = function() {
        return e4;
      }, n6.nativeEvent = n6;
    };
    $2 = { configurable: true, get: function() {
      return this.class;
    } };
    q2 = n.vnode;
    n.vnode = function(n6) {
      n6.$$typeof = H2;
      var t3 = n6.type, e4 = n6.props;
      if (t3) {
        if (e4.class != e4.className && ($2.enumerable = "className" in e4, null != e4.className && (e4.class = e4.className), Object.defineProperty(e4, "className", $2)), "function" != typeof t3) {
          var r5, o6, u5;
          for (u5 in e4.defaultValue && void 0 !== e4.value && (e4.value || 0 === e4.value || (e4.value = e4.defaultValue), delete e4.defaultValue), Array.isArray(e4.value) && e4.multiple && "select" === t3 && (x(e4.children).forEach(function(n7) {
            -1 != e4.value.indexOf(n7.props.value) && (n7.props.selected = true);
          }), delete e4.value), e4) if (r5 = D2.test(u5)) break;
          if (r5) for (u5 in o6 = n6.props = {}, e4) o6[D2.test(u5) ? u5.replace(/[A-Z0-9]/, "-$&").toLowerCase() : u5] = e4[u5];
        }
        !function(t4) {
          var e5 = n6.type, r6 = n6.props;
          if (r6 && "string" == typeof e5) {
            var o7 = {};
            for (var u6 in r6) /^on(Ani|Tra|Tou)/.test(u6) && (r6[u6.toLowerCase()] = r6[u6], delete r6[u6]), o7[u6.toLowerCase()] = u6;
            if (o7.ondoubleclick && (r6.ondblclick = r6[o7.ondoubleclick], delete r6[o7.ondoubleclick]), o7.onbeforeinput && (r6.onbeforeinput = r6[o7.onbeforeinput], delete r6[o7.onbeforeinput]), o7.onchange && ("textarea" === e5 || "input" === e5.toLowerCase() && !/^fil|che|ra/i.test(r6.type))) {
              var i6 = o7.oninput || "oninput";
              r6[i6] || (r6[i6] = r6[o7.onchange], delete r6[o7.onchange]);
            }
          }
        }(), "function" == typeof t3 && !t3.m && t3.prototype && (I2(t3.prototype, "componentWillMount"), I2(t3.prototype, "componentWillReceiveProps"), I2(t3.prototype, "componentWillUpdate"), t3.m = true);
      }
      q2 && q2(n6);
    };
    B = "16.8.0";
    Y = function(n6, t3) {
      return n6(t3);
    };
    compat_module_default = { useState: m2, useReducer: p2, useEffect: l2, useLayoutEffect: y2, useRef: d2, useImperativeHandle: s2, useMemo: h2, useCallback: T2, useContext: w2, useDebugValue: A2, version: "16.8.0", Children: R, render: T3, hydrate: T3, unmountComponentAtNode: Q, createPortal: z2, createElement: h, createContext: M, createFactory: G, cloneElement: K, createRef: y, Fragment: d, isValidElement: J, findDOMNode: X, Component: m, PureComponent: C2, memo: _3, forwardRef: S, unstable_batchedUpdates: Y, Suspense: U, SuspenseList: O, lazy: L2 };
  }
});

// node_modules/@walletconnect/qrcode-modal/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/dist/cjs/index.js"(exports, module) {
    function _interopDefault(ex) {
      return ex && typeof ex === "object" && "default" in ex ? ex["default"] : ex;
    }
    var browserUtils = (init_esm2(), __toCommonJS(esm_exports2));
    var QRCode = _interopDefault(require_browser());
    var copy = _interopDefault(require_copy_to_clipboard());
    var React = (init_compat_module(), __toCommonJS(compat_module_exports));
    function open(uri) {
      QRCode.toString(uri, {
        type: "terminal"
      }).then(console.log);
    }
    var WALLETCONNECT_STYLE_SHEET = ':root {\n  --animation-duration: 300ms;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.animated {\n  animation-duration: var(--animation-duration);\n  animation-fill-mode: both;\n}\n\n.fadeIn {\n  animation-name: fadeIn;\n}\n\n.fadeOut {\n  animation-name: fadeOut;\n}\n\n#walletconnect-wrapper {\n  -webkit-user-select: none;\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  user-select: none;\n  width: 100%;\n  z-index: 99999999999999;\n}\n\n.walletconnect-modal__headerLogo {\n  height: 21px;\n}\n\n.walletconnect-modal__header p {\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n  align-items: flex-start;\n  display: flex;\n  flex: 1;\n  margin-left: 5px;\n}\n\n.walletconnect-modal__close__wrapper {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  z-index: 10000;\n  background: white;\n  border-radius: 26px;\n  padding: 6px;\n  box-sizing: border-box;\n  width: 26px;\n  height: 26px;\n  cursor: pointer;\n}\n\n.walletconnect-modal__close__icon {\n  position: relative;\n  top: 7px;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: rotate(45deg);\n}\n\n.walletconnect-modal__close__line1 {\n  position: absolute;\n  width: 100%;\n  border: 1px solid rgb(48, 52, 59);\n}\n\n.walletconnect-modal__close__line2 {\n  position: absolute;\n  width: 100%;\n  border: 1px solid rgb(48, 52, 59);\n  transform: rotate(90deg);\n}\n\n.walletconnect-qrcode__base {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  background: rgba(37, 41, 46, 0.95);\n  height: 100%;\n  left: 0;\n  pointer-events: auto;\n  position: fixed;\n  top: 0;\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\n  width: 100%;\n  will-change: opacity;\n  padding: 40px;\n  box-sizing: border-box;\n}\n\n.walletconnect-qrcode__text {\n  color: rgba(60, 66, 82, 0.6);\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: 0;\n  line-height: 1.1875em;\n  margin: 10px 0 20px 0;\n  text-align: center;\n  width: 100%;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-qrcode__text {\n    font-size: 4vw;\n  }\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-qrcode__text {\n    font-size: 14px;\n  }\n}\n\n.walletconnect-qrcode__image {\n  width: calc(100% - 30px);\n  box-sizing: border-box;\n  cursor: none;\n  margin: 0 auto;\n}\n\n.walletconnect-qrcode__notification {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  font-size: 16px;\n  padding: 16px 20px;\n  border-radius: 16px;\n  text-align: center;\n  transition: all 0.1s ease-in-out;\n  background: white;\n  color: black;\n  margin-bottom: -60px;\n  opacity: 0;\n}\n\n.walletconnect-qrcode__notification.notification__show {\n  opacity: 1;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-modal__header {\n    height: 130px;\n  }\n  .walletconnect-modal__base {\n    overflow: auto;\n  }\n}\n\n@media only screen and (min-device-width: 415px) and (max-width: 768px) {\n  #content {\n    max-width: 768px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (min-width: 375px) and (max-width: 415px) {\n  #content {\n    max-width: 414px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (min-width: 320px) and (max-width: 375px) {\n  #content {\n    max-width: 375px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (max-width: 320px) {\n  #content {\n    max-width: 320px;\n    box-sizing: border-box;\n  }\n}\n\n.walletconnect-modal__base {\n  -webkit-font-smoothing: antialiased;\n  background: #ffffff;\n  border-radius: 24px;\n  box-shadow: 0 10px 50px 5px rgba(0, 0, 0, 0.4);\n  font-family: ui-rounded, "SF Pro Rounded", "SF Pro Text", medium-content-sans-serif-font,\n    -apple-system, BlinkMacSystemFont, ui-sans-serif, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell,\n    "Open Sans", "Helvetica Neue", sans-serif;\n  margin-top: 41px;\n  padding: 24px 24px 22px;\n  pointer-events: auto;\n  position: relative;\n  text-align: center;\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\n  will-change: transform;\n  overflow: visible;\n  transform: translateY(-50%);\n  top: 50%;\n  max-width: 500px;\n  margin: auto;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-modal__base {\n    padding: 24px 12px;\n  }\n}\n\n.walletconnect-modal__base .hidden {\n  transform: translateY(150%);\n  transition: 0.125s cubic-bezier(0.4, 0, 1, 1);\n}\n\n.walletconnect-modal__header {\n  align-items: center;\n  display: flex;\n  height: 26px;\n  left: 0;\n  justify-content: space-between;\n  position: absolute;\n  top: -42px;\n  width: 100%;\n}\n\n.walletconnect-modal__base .wc-logo {\n  align-items: center;\n  display: flex;\n  height: 26px;\n  margin-top: 15px;\n  padding-bottom: 15px;\n  pointer-events: auto;\n}\n\n.walletconnect-modal__base .wc-logo div {\n  background-color: #3399ff;\n  height: 21px;\n  margin-right: 5px;\n  mask-image: url("images/wc-logo.svg") center no-repeat;\n  width: 32px;\n}\n\n.walletconnect-modal__base .wc-logo p {\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n}\n\n.walletconnect-modal__base h2 {\n  color: rgba(60, 66, 82, 0.6);\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: 0;\n  line-height: 1.1875em;\n  margin: 0 0 19px 0;\n  text-align: center;\n  width: 100%;\n}\n\n.walletconnect-modal__base__row {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  align-items: center;\n  border-radius: 20px;\n  cursor: pointer;\n  display: flex;\n  height: 56px;\n  justify-content: space-between;\n  padding: 0 15px;\n  position: relative;\n  margin: 0px 0px 8px;\n  text-align: left;\n  transition: 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  will-change: transform;\n  text-decoration: none;\n}\n\n.walletconnect-modal__base__row:hover {\n  background: rgba(60, 66, 82, 0.06);\n}\n\n.walletconnect-modal__base__row:active {\n  background: rgba(60, 66, 82, 0.06);\n  transform: scale(0.975);\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.walletconnect-modal__base__row__h3 {\n  color: #25292e;\n  font-size: 20px;\n  font-weight: 700;\n  margin: 0;\n  padding-bottom: 3px;\n}\n\n.walletconnect-modal__base__row__right {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\n\n.walletconnect-modal__base__row__right__app-icon {\n  border-radius: 8px;\n  height: 34px;\n  margin: 0 11px 2px 0;\n  width: 34px;\n  background-size: 100%;\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\n}\n\n.walletconnect-modal__base__row__right__caret {\n  height: 18px;\n  opacity: 0.3;\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  width: 8px;\n  will-change: opacity;\n}\n\n.walletconnect-modal__base__row:hover .caret,\n.walletconnect-modal__base__row:active .caret {\n  opacity: 0.6;\n}\n\n.walletconnect-modal__mobile__toggle {\n  width: 80%;\n  display: flex;\n  margin: 0 auto;\n  position: relative;\n  overflow: hidden;\n  border-radius: 8px;\n  margin-bottom: 18px;\n  background: #d4d5d9;\n}\n\n.walletconnect-modal__single_wallet {\n  display: flex;\n  justify-content: center;\n  margin-top: 7px;\n  margin-bottom: 18px;\n}\n\n.walletconnect-modal__single_wallet a {\n  cursor: pointer;\n  color: rgb(64, 153, 255);\n  font-size: 21px;\n  font-weight: 800;\n  text-decoration: none !important;\n  margin: 0 auto;\n}\n\n.walletconnect-modal__mobile__toggle_selector {\n  width: calc(50% - 8px);\n  background: white;\n  position: absolute;\n  border-radius: 5px;\n  height: calc(100% - 8px);\n  top: 4px;\n  transition: all 0.2s ease-in-out;\n  transform: translate3d(4px, 0, 0);\n}\n\n.walletconnect-modal__mobile__toggle.right__selected .walletconnect-modal__mobile__toggle_selector {\n  transform: translate3d(calc(100% + 12px), 0, 0);\n}\n\n.walletconnect-modal__mobile__toggle a {\n  font-size: 12px;\n  width: 50%;\n  text-align: center;\n  padding: 8px;\n  margin: 0;\n  font-weight: 600;\n  z-index: 1;\n}\n\n.walletconnect-modal__footer {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-modal__footer {\n    margin-top: 5vw;\n  }\n}\n\n.walletconnect-modal__footer a {\n  cursor: pointer;\n  color: #898d97;\n  font-size: 15px;\n  margin: 0 auto;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-modal__footer a {\n    font-size: 14px;\n  }\n}\n\n.walletconnect-connect__buttons__wrapper {\n  max-height: 44vh;\n}\n\n.walletconnect-connect__buttons__wrapper__android {\n  margin: 50% 0;\n}\n\n.walletconnect-connect__buttons__wrapper__wrap {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  margin: 10px 0;\n}\n\n@media only screen and (min-width: 768px) {\n  .walletconnect-connect__buttons__wrapper__wrap {\n    margin-top: 40px;\n  }\n}\n\n.walletconnect-connect__button {\n  background-color: rgb(64, 153, 255);\n  padding: 12px;\n  border-radius: 8px;\n  text-decoration: none;\n  color: rgb(255, 255, 255);\n  font-weight: 500;\n}\n\n.walletconnect-connect__button__icon_anchor {\n  cursor: pointer;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin: 8px;\n  width: 42px;\n  justify-self: center;\n  flex-direction: column;\n  text-decoration: none !important;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-connect__button__icon_anchor {\n    margin: 4px;\n  }\n}\n\n.walletconnect-connect__button__icon {\n  border-radius: 10px;\n  height: 42px;\n  margin: 0;\n  width: 42px;\n  background-size: cover !important;\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\n}\n\n.walletconnect-connect__button__text {\n  color: #424952;\n  font-size: 2.7vw;\n  text-decoration: none !important;\n  padding: 0;\n  margin-top: 1.8vw;\n  font-weight: 600;\n}\n\n@media only screen and (min-width: 768px) {\n  .walletconnect-connect__button__text {\n    font-size: 16px;\n    margin-top: 12px;\n  }\n}\n\n.walletconnect-search__input {\n  border: none;\n  background: #d4d5d9;\n  border-style: none;\n  padding: 8px 16px;\n  outline: none;\n  font-style: normal;\n  font-stretch: normal;\n  font-size: 16px;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n  border-radius: 8px;\n  width: calc(100% - 16px);\n  margin: 0;\n  margin-bottom: 8px;\n}\n';
    var _iteratorSymbol = typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
    var _asyncIteratorSymbol = typeof Symbol !== "undefined" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol("Symbol.asyncIterator")) : "@@asyncIterator";
    function _catch(body, recover) {
      try {
        var result = body();
      } catch (e4) {
        return recover(e4);
      }
      if (result && result.then) {
        return result.then(void 0, recover);
      }
      return result;
    }
    var WALLETCONNECT_LOGO_SVG_URL = "data:image/svg+xml,%3Csvg height='185' viewBox='0 0 300 185' width='300' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m61.4385429 36.2562612c48.9112241-47.8881663 128.2119871-47.8881663 177.1232091 0l5.886545 5.7634174c2.445561 2.3944081 2.445561 6.2765112 0 8.6709204l-20.136695 19.715503c-1.222781 1.1972051-3.2053 1.1972051-4.428081 0l-8.100584-7.9311479c-34.121692-33.4079817-89.443886-33.4079817-123.5655788 0l-8.6750562 8.4936051c-1.2227816 1.1972041-3.205301 1.1972041-4.4280806 0l-20.1366949-19.7155031c-2.4455612-2.3944092-2.4455612-6.2765122 0-8.6709204zm218.7677961 40.7737449 17.921697 17.546897c2.445549 2.3943969 2.445563 6.2764769.000031 8.6708899l-80.810171 79.121134c-2.445544 2.394426-6.410582 2.394453-8.85616.000062-.00001-.00001-.000022-.000022-.000032-.000032l-57.354143-56.154572c-.61139-.598602-1.60265-.598602-2.21404 0-.000004.000004-.000007.000008-.000011.000011l-57.3529212 56.154531c-2.4455368 2.394432-6.4105755 2.394472-8.8561612.000087-.0000143-.000014-.0000296-.000028-.0000449-.000044l-80.81241943-79.122185c-2.44556021-2.394408-2.44556021-6.2765115 0-8.6709197l17.92172963-17.5468673c2.4455602-2.3944082 6.4105989-2.3944082 8.8561602 0l57.3549775 56.155357c.6113908.598602 1.602649.598602 2.2140398 0 .0000092-.000009.0000174-.000017.0000265-.000024l57.3521031-56.155333c2.445505-2.3944633 6.410544-2.3945531 8.856161-.0002.000034.0000336.000068.0000673.000101.000101l57.354902 56.155432c.61139.598601 1.60265.598601 2.21404 0l57.353975-56.1543249c2.445561-2.3944092 6.410599-2.3944092 8.85616 0z' fill='%233b99fc'/%3E%3C/svg%3E";
    var WALLETCONNECT_HEADER_TEXT = "WalletConnect";
    var ANIMATION_DURATION = 300;
    var DEFAULT_BUTTON_COLOR = "rgb(64, 153, 255)";
    var WALLETCONNECT_WRAPPER_ID = "walletconnect-wrapper";
    var WALLETCONNECT_STYLE_ID = "walletconnect-style-sheet";
    var WALLETCONNECT_MODAL_ID = "walletconnect-qrcode-modal";
    var WALLETCONNECT_CLOSE_BUTTON_ID = "walletconnect-qrcode-close";
    var WALLETCONNECT_CTA_TEXT_ID = "walletconnect-qrcode-text";
    var WALLETCONNECT_CONNECT_BUTTON_ID = "walletconnect-connect-button";
    function Header(props) {
      return React.createElement("div", {
        className: "walletconnect-modal__header"
      }, React.createElement("img", {
        src: WALLETCONNECT_LOGO_SVG_URL,
        className: "walletconnect-modal__headerLogo"
      }), React.createElement("p", null, WALLETCONNECT_HEADER_TEXT), React.createElement("div", {
        className: "walletconnect-modal__close__wrapper",
        onClick: props.onClose
      }, React.createElement("div", {
        id: WALLETCONNECT_CLOSE_BUTTON_ID,
        className: "walletconnect-modal__close__icon"
      }, React.createElement("div", {
        className: "walletconnect-modal__close__line1"
      }), React.createElement("div", {
        className: "walletconnect-modal__close__line2"
      }))));
    }
    function ConnectButton(props) {
      return React.createElement("a", {
        className: "walletconnect-connect__button",
        href: props.href,
        id: WALLETCONNECT_CONNECT_BUTTON_ID + "-" + props.name,
        onClick: props.onClick,
        rel: "noopener noreferrer",
        style: {
          backgroundColor: props.color
        },
        target: "_blank"
      }, props.name);
    }
    var CARET_SVG_URL = "data:image/svg+xml,%3Csvg fill='none' height='18' viewBox='0 0 8 18' width='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath clip-rule='evenodd' d='m.586301.213898c-.435947.33907-.5144813.967342-.175411 1.403292l4.87831 6.27212c.28087.36111.28087.86677 0 1.22788l-4.878311 6.27211c-.33907.436-.260536 1.0642.175412 1.4033.435949.3391 1.064219.2605 1.403289-.1754l4.87832-6.2721c.84259-1.08336.84259-2.60034 0-3.68367l-4.87832-6.27212c-.33907-.4359474-.96734-.514482-1.403289-.175412z' fill='%233c4252' fill-rule='evenodd'/%3E%3C/svg%3E";
    function WalletButton(props) {
      var color = props.color;
      var href = props.href;
      var name2 = props.name;
      var logo = props.logo;
      var onClick = props.onClick;
      return React.createElement("a", {
        className: "walletconnect-modal__base__row",
        href,
        onClick,
        rel: "noopener noreferrer",
        target: "_blank"
      }, React.createElement("h3", {
        className: "walletconnect-modal__base__row__h3"
      }, name2), React.createElement("div", {
        className: "walletconnect-modal__base__row__right"
      }, React.createElement("div", {
        className: "walletconnect-modal__base__row__right__app-icon",
        style: {
          background: "url('" + logo + "') " + color,
          backgroundSize: "100%"
        }
      }), React.createElement("img", {
        src: CARET_SVG_URL,
        className: "walletconnect-modal__base__row__right__caret"
      })));
    }
    function WalletIcon(props) {
      var color = props.color;
      var href = props.href;
      var name2 = props.name;
      var logo = props.logo;
      var onClick = props.onClick;
      var fontSize = window.innerWidth < 768 ? (name2.length > 8 ? 2.5 : 2.7) + "vw" : "inherit";
      return React.createElement("a", {
        className: "walletconnect-connect__button__icon_anchor",
        href,
        onClick,
        rel: "noopener noreferrer",
        target: "_blank"
      }, React.createElement("div", {
        className: "walletconnect-connect__button__icon",
        style: {
          background: "url('" + logo + "') " + color,
          backgroundSize: "100%"
        }
      }), React.createElement("div", {
        style: {
          fontSize
        },
        className: "walletconnect-connect__button__text"
      }, name2));
    }
    var GRID_MIN_COUNT = 5;
    var LINKS_PER_PAGE = 12;
    function LinkDisplay(props) {
      var android = browserUtils.isAndroid();
      var ref = React.useState("");
      var input = ref[0];
      var setInput = ref[1];
      var ref$1 = React.useState("");
      var filter = ref$1[0];
      var setFilter = ref$1[1];
      var ref$2 = React.useState(1);
      var page = ref$2[0];
      var setPage = ref$2[1];
      var links = filter ? props.links.filter(function(link) {
        return link.name.toLowerCase().includes(filter.toLowerCase());
      }) : props.links;
      var errorMessage = props.errorMessage;
      var grid = filter || links.length > GRID_MIN_COUNT;
      var pages = Math.ceil(links.length / LINKS_PER_PAGE);
      var range = [(page - 1) * LINKS_PER_PAGE + 1, page * LINKS_PER_PAGE];
      var pageLinks = links.length ? links.filter(function(_6, index2) {
        return index2 + 1 >= range[0] && index2 + 1 <= range[1];
      }) : [];
      var hasPaging = !!(!android && pages > 1);
      var filterTimeout = void 0;
      function handleInput(e4) {
        setInput(e4.target.value);
        clearTimeout(filterTimeout);
        if (e4.target.value) {
          filterTimeout = setTimeout(function() {
            setFilter(e4.target.value);
            setPage(1);
          }, 1e3);
        } else {
          setInput("");
          setFilter("");
          setPage(1);
        }
      }
      return React.createElement("div", null, React.createElement("p", {
        id: WALLETCONNECT_CTA_TEXT_ID,
        className: "walletconnect-qrcode__text"
      }, android ? props.text.connect_mobile_wallet : props.text.choose_preferred_wallet), !android && React.createElement("input", {
        className: "walletconnect-search__input",
        placeholder: "Search",
        value: input,
        onChange: handleInput
      }), React.createElement("div", {
        className: "walletconnect-connect__buttons__wrapper" + (android ? "__android" : grid && links.length ? "__wrap" : "")
      }, !android ? pageLinks.length ? pageLinks.map(function(entry) {
        var color = entry.color;
        var name2 = entry.name;
        var shortName = entry.shortName;
        var logo = entry.logo;
        var href = browserUtils.formatIOSMobile(props.uri, entry);
        var handleClickIOS = React.useCallback(function() {
          browserUtils.saveMobileLinkInfo({
            name: name2,
            href
          });
        }, [pageLinks]);
        return !grid ? React.createElement(WalletButton, {
          color,
          href,
          name: name2,
          logo,
          onClick: handleClickIOS
        }) : React.createElement(WalletIcon, {
          color,
          href,
          name: shortName || name2,
          logo,
          onClick: handleClickIOS
        });
      }) : React.createElement(React.Fragment, null, React.createElement("p", null, errorMessage.length ? props.errorMessage : !!props.links.length && !links.length ? props.text.no_wallets_found : props.text.loading)) : React.createElement(ConnectButton, {
        name: props.text.connect,
        color: DEFAULT_BUTTON_COLOR,
        href: props.uri,
        onClick: React.useCallback(function() {
          browserUtils.saveMobileLinkInfo({
            name: "Unknown",
            href: props.uri
          });
        }, [])
      })), hasPaging && React.createElement("div", {
        className: "walletconnect-modal__footer"
      }, Array(pages).fill(0).map(function(_6, index2) {
        var pageNumber = index2 + 1;
        var selected = page === pageNumber;
        return React.createElement("a", {
          style: {
            margin: "auto 10px",
            fontWeight: selected ? "bold" : "normal"
          },
          onClick: function() {
            return setPage(pageNumber);
          }
        }, pageNumber);
      })));
    }
    function Notification(props) {
      var show = !!props.message.trim();
      return React.createElement("div", {
        className: "walletconnect-qrcode__notification" + (show ? " notification__show" : "")
      }, props.message);
    }
    var formatQRCodeImage = function(data) {
      try {
        var result = "";
        return Promise.resolve(QRCode.toString(data, {
          margin: 0,
          type: "svg"
        })).then(function(dataString) {
          if (typeof dataString === "string") {
            result = dataString.replace("<svg", '<svg class="walletconnect-qrcode__image"');
          }
          return result;
        });
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    function QRCodeDisplay(props) {
      var ref = React.useState("");
      var notification = ref[0];
      var setNotification = ref[1];
      var ref$1 = React.useState("");
      var svg = ref$1[0];
      var setSvg = ref$1[1];
      React.useEffect(function() {
        try {
          return Promise.resolve(formatQRCodeImage(props.uri)).then(function(_formatQRCodeImage) {
            setSvg(_formatQRCodeImage);
          });
        } catch (e4) {
          Promise.reject(e4);
        }
      }, []);
      var copyToClipboard = function() {
        var success = copy(props.uri);
        if (success) {
          setNotification(props.text.copied_to_clipboard);
          setInterval(function() {
            return setNotification("");
          }, 1200);
        } else {
          setNotification("Error");
          setInterval(function() {
            return setNotification("");
          }, 1200);
        }
      };
      return React.createElement("div", null, React.createElement("p", {
        id: WALLETCONNECT_CTA_TEXT_ID,
        className: "walletconnect-qrcode__text"
      }, props.text.scan_qrcode_with_wallet), React.createElement("div", {
        dangerouslySetInnerHTML: {
          __html: svg
        }
      }), React.createElement("div", {
        className: "walletconnect-modal__footer"
      }, React.createElement("a", {
        onClick: copyToClipboard
      }, props.text.copy_to_clipboard)), React.createElement(Notification, {
        message: notification
      }));
    }
    function Modal(props) {
      var android = browserUtils.isAndroid();
      var mobile = browserUtils.isMobile();
      var whitelist = mobile ? props.qrcodeModalOptions && props.qrcodeModalOptions.mobileLinks ? props.qrcodeModalOptions.mobileLinks : void 0 : props.qrcodeModalOptions && props.qrcodeModalOptions.desktopLinks ? props.qrcodeModalOptions.desktopLinks : void 0;
      var ref = React.useState(false);
      var loading = ref[0];
      var setLoading = ref[1];
      var ref$1 = React.useState(false);
      var fetched = ref$1[0];
      var setFetched = ref$1[1];
      var ref$2 = React.useState(!mobile);
      var displayQRCode = ref$2[0];
      var setDisplayQRCode = ref$2[1];
      var displayProps = {
        mobile,
        text: props.text,
        uri: props.uri,
        qrcodeModalOptions: props.qrcodeModalOptions
      };
      var ref$3 = React.useState("");
      var singleLinkHref = ref$3[0];
      var setSingleLinkHref = ref$3[1];
      var ref$4 = React.useState(false);
      var hasSingleLink = ref$4[0];
      var setHasSingleLink = ref$4[1];
      var ref$5 = React.useState([]);
      var links = ref$5[0];
      var setLinks = ref$5[1];
      var ref$6 = React.useState("");
      var errorMessage = ref$6[0];
      var setErrorMessage = ref$6[1];
      var getLinksIfNeeded = function() {
        if (fetched || loading || whitelist && !whitelist.length || links.length > 0) {
          return;
        }
        React.useEffect(function() {
          var initLinks = function() {
            try {
              if (android) {
                return Promise.resolve();
              }
              setLoading(true);
              var _temp = _catch(function() {
                var url = props.qrcodeModalOptions && props.qrcodeModalOptions.registryUrl ? props.qrcodeModalOptions.registryUrl : browserUtils.getWalletRegistryUrl();
                return Promise.resolve(fetch(url)).then(function(registryResponse) {
                  return Promise.resolve(registryResponse.json()).then(function(_registryResponse$jso) {
                    var registry = _registryResponse$jso.listings;
                    var platform = mobile ? "mobile" : "desktop";
                    var _links = browserUtils.getMobileLinkRegistry(browserUtils.formatMobileRegistry(registry, platform), whitelist);
                    setLoading(false);
                    setFetched(true);
                    setErrorMessage(!_links.length ? props.text.no_supported_wallets : "");
                    setLinks(_links);
                    var hasSingleLink2 = _links.length === 1;
                    if (hasSingleLink2) {
                      setSingleLinkHref(browserUtils.formatIOSMobile(props.uri, _links[0]));
                      setDisplayQRCode(true);
                    }
                    setHasSingleLink(hasSingleLink2);
                  });
                });
              }, function(e4) {
                setLoading(false);
                setFetched(true);
                setErrorMessage(props.text.something_went_wrong);
                console.error(e4);
              });
              return Promise.resolve(_temp && _temp.then ? _temp.then(function() {
              }) : void 0);
            } catch (e4) {
              return Promise.reject(e4);
            }
          };
          initLinks();
        });
      };
      getLinksIfNeeded();
      var rightSelected = mobile ? displayQRCode : !displayQRCode;
      return React.createElement("div", {
        id: WALLETCONNECT_MODAL_ID,
        className: "walletconnect-qrcode__base animated fadeIn"
      }, React.createElement("div", {
        className: "walletconnect-modal__base"
      }, React.createElement(Header, {
        onClose: props.onClose
      }), hasSingleLink && displayQRCode ? React.createElement("div", {
        className: "walletconnect-modal__single_wallet"
      }, React.createElement("a", {
        onClick: function() {
          return browserUtils.saveMobileLinkInfo({
            name: links[0].name,
            href: singleLinkHref
          });
        },
        href: singleLinkHref,
        rel: "noopener noreferrer",
        target: "_blank"
      }, props.text.connect_with + " " + (hasSingleLink ? links[0].name : "") + " ›")) : android || loading || !loading && links.length ? React.createElement("div", {
        className: "walletconnect-modal__mobile__toggle" + (rightSelected ? " right__selected" : "")
      }, React.createElement("div", {
        className: "walletconnect-modal__mobile__toggle_selector"
      }), mobile ? React.createElement(React.Fragment, null, React.createElement("a", {
        onClick: function() {
          return setDisplayQRCode(false), getLinksIfNeeded();
        }
      }, props.text.mobile), React.createElement("a", {
        onClick: function() {
          return setDisplayQRCode(true);
        }
      }, props.text.qrcode)) : React.createElement(React.Fragment, null, React.createElement("a", {
        onClick: function() {
          return setDisplayQRCode(true);
        }
      }, props.text.qrcode), React.createElement("a", {
        onClick: function() {
          return setDisplayQRCode(false), getLinksIfNeeded();
        }
      }, props.text.desktop))) : null, React.createElement("div", null, displayQRCode || !android && !loading && !links.length ? React.createElement(QRCodeDisplay, Object.assign({}, displayProps)) : React.createElement(LinkDisplay, Object.assign(
        {},
        displayProps,
        {
          links,
          errorMessage
        }
      )))));
    }
    var de3 = {
      choose_preferred_wallet: "Wähle bevorzugte Wallet",
      connect_mobile_wallet: "Verbinde mit Mobile Wallet",
      scan_qrcode_with_wallet: "Scanne den QR-code mit einer WalletConnect kompatiblen Wallet",
      connect: "Verbinden",
      qrcode: "QR-Code",
      mobile: "Mobile",
      desktop: "Desktop",
      copy_to_clipboard: "In die Zwischenablage kopieren",
      copied_to_clipboard: "In die Zwischenablage kopiert!",
      connect_with: "Verbinden mit Hilfe von",
      loading: "Laden...",
      something_went_wrong: "Etwas ist schief gelaufen",
      no_supported_wallets: "Es gibt noch keine unterstützten Wallet",
      no_wallets_found: "keine Wallet gefunden"
    };
    var en2 = {
      choose_preferred_wallet: "Choose your preferred wallet",
      connect_mobile_wallet: "Connect to Mobile Wallet",
      scan_qrcode_with_wallet: "Scan QR code with a WalletConnect-compatible wallet",
      connect: "Connect",
      qrcode: "QR Code",
      mobile: "Mobile",
      desktop: "Desktop",
      copy_to_clipboard: "Copy to clipboard",
      copied_to_clipboard: "Copied to clipboard!",
      connect_with: "Connect with",
      loading: "Loading...",
      something_went_wrong: "Something went wrong",
      no_supported_wallets: "There are no supported wallets yet",
      no_wallets_found: "No wallets found"
    };
    var es4 = {
      choose_preferred_wallet: "Elige tu billetera preferida",
      connect_mobile_wallet: "Conectar a billetera móvil",
      scan_qrcode_with_wallet: "Escanea el código QR con una billetera compatible con WalletConnect",
      connect: "Conectar",
      qrcode: "Código QR",
      mobile: "Móvil",
      desktop: "Desktop",
      copy_to_clipboard: "Copiar",
      copied_to_clipboard: "Copiado!",
      connect_with: "Conectar mediante",
      loading: "Cargando...",
      something_went_wrong: "Algo salió mal",
      no_supported_wallets: "Todavía no hay billeteras compatibles",
      no_wallets_found: "No se encontraron billeteras"
    };
    var fr2 = {
      choose_preferred_wallet: "Choisissez votre portefeuille préféré",
      connect_mobile_wallet: "Se connecter au portefeuille mobile",
      scan_qrcode_with_wallet: "Scannez le QR code avec un portefeuille compatible WalletConnect",
      connect: "Se connecter",
      qrcode: "QR Code",
      mobile: "Mobile",
      desktop: "Desktop",
      copy_to_clipboard: "Copier",
      copied_to_clipboard: "Copié!",
      connect_with: "Connectez-vous à l'aide de",
      loading: "Chargement...",
      something_went_wrong: "Quelque chose a mal tourné",
      no_supported_wallets: "Il n'y a pas encore de portefeuilles pris en charge",
      no_wallets_found: "Aucun portefeuille trouvé"
    };
    var ko2 = {
      choose_preferred_wallet: "원하는 지갑을 선택하세요",
      connect_mobile_wallet: "모바일 지갑과 연결",
      scan_qrcode_with_wallet: "WalletConnect 지원 지갑에서 QR코드를 스캔하세요",
      connect: "연결",
      qrcode: "QR 코드",
      mobile: "모바일",
      desktop: "데스크탑",
      copy_to_clipboard: "클립보드에 복사",
      copied_to_clipboard: "클립보드에 복사되었습니다!",
      connect_with: "와 연결하다",
      loading: "로드 중...",
      something_went_wrong: "문제가 발생했습니다.",
      no_supported_wallets: "아직 지원되는 지갑이 없습니다",
      no_wallets_found: "지갑을 찾을 수 없습니다"
    };
    var pt2 = {
      choose_preferred_wallet: "Escolha sua carteira preferida",
      connect_mobile_wallet: "Conectar-se à carteira móvel",
      scan_qrcode_with_wallet: "Ler o código QR com uma carteira compatível com WalletConnect",
      connect: "Conectar",
      qrcode: "Código QR",
      mobile: "Móvel",
      desktop: "Desktop",
      copy_to_clipboard: "Copiar",
      copied_to_clipboard: "Copiado!",
      connect_with: "Ligar por meio de",
      loading: "Carregamento...",
      something_went_wrong: "Algo correu mal",
      no_supported_wallets: "Ainda não há carteiras suportadas",
      no_wallets_found: "Nenhuma carteira encontrada"
    };
    var zh = {
      choose_preferred_wallet: "选择你的钱包",
      connect_mobile_wallet: "连接至移动端钱包",
      scan_qrcode_with_wallet: "使用兼容 WalletConnect 的钱包扫描二维码",
      connect: "连接",
      qrcode: "二维码",
      mobile: "移动",
      desktop: "桌面",
      copy_to_clipboard: "复制到剪贴板",
      copied_to_clipboard: "复制到剪贴板成功！",
      connect_with: "通过以下方式连接",
      loading: "正在加载...",
      something_went_wrong: "出了问题",
      no_supported_wallets: "目前还没有支持的钱包",
      no_wallets_found: "没有找到钱包"
    };
    var fa2 = {
      choose_preferred_wallet: "کیف پول مورد نظر خود را انتخاب کنید",
      connect_mobile_wallet: "به کیف پول موبایل وصل شوید",
      scan_qrcode_with_wallet: "کد QR را با یک کیف پول سازگار با WalletConnect اسکن کنید",
      connect: "اتصال",
      qrcode: "کد QR",
      mobile: "سیار",
      desktop: "دسکتاپ",
      copy_to_clipboard: "کپی به کلیپ بورد",
      copied_to_clipboard: "در کلیپ بورد کپی شد!",
      connect_with: "ارتباط با",
      loading: "...بارگذاری",
      something_went_wrong: "مشکلی پیش آمد",
      no_supported_wallets: "هنوز هیچ کیف پول پشتیبانی شده ای وجود ندارد",
      no_wallets_found: "هیچ کیف پولی پیدا نشد"
    };
    var languages = {
      de: de3,
      en: en2,
      es: es4,
      fr: fr2,
      ko: ko2,
      pt: pt2,
      zh,
      fa: fa2
    };
    function injectStyleSheet() {
      var doc = browserUtils.getDocumentOrThrow();
      var prev = doc.getElementById(WALLETCONNECT_STYLE_ID);
      if (prev) {
        doc.head.removeChild(prev);
      }
      var style = doc.createElement("style");
      style.setAttribute("id", WALLETCONNECT_STYLE_ID);
      style.innerText = WALLETCONNECT_STYLE_SHEET;
      doc.head.appendChild(style);
    }
    function renderWrapper() {
      var doc = browserUtils.getDocumentOrThrow();
      var wrapper = doc.createElement("div");
      wrapper.setAttribute("id", WALLETCONNECT_WRAPPER_ID);
      doc.body.appendChild(wrapper);
      return wrapper;
    }
    function triggerCloseAnimation() {
      var doc = browserUtils.getDocumentOrThrow();
      var modal = doc.getElementById(WALLETCONNECT_MODAL_ID);
      if (modal) {
        modal.className = modal.className.replace("fadeIn", "fadeOut");
        setTimeout(function() {
          var wrapper = doc.getElementById(WALLETCONNECT_WRAPPER_ID);
          if (wrapper) {
            doc.body.removeChild(wrapper);
          }
        }, ANIMATION_DURATION);
      }
    }
    function getWrappedCallback(cb) {
      return function() {
        triggerCloseAnimation();
        if (cb) {
          cb();
        }
      };
    }
    function getText() {
      var lang = browserUtils.getNavigatorOrThrow().language.split("-")[0] || "en";
      return languages[lang] || languages["en"];
    }
    function open$1(uri, cb, qrcodeModalOptions) {
      injectStyleSheet();
      var wrapper = renderWrapper();
      React.render(React.createElement(Modal, {
        text: getText(),
        uri,
        onClose: getWrappedCallback(cb),
        qrcodeModalOptions
      }), wrapper);
    }
    function close$1() {
      triggerCloseAnimation();
    }
    var isNode3 = function() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    };
    function open$2(uri, cb, qrcodeModalOptions) {
      console.log(uri);
      if (isNode3()) {
        open(uri);
      } else {
        open$1(uri, cb, qrcodeModalOptions);
      }
    }
    function close$2() {
      if (isNode3()) ;
      else {
        close$1();
      }
    }
    var index = {
      open: open$2,
      close: close$2
    };
    module.exports = index;
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/delay.js
var require_delay = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/delay.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.delay = void 0;
    function delay(timeout) {
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve(true);
        }, timeout);
      });
    }
    exports.delay = delay;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/misc.js
var require_misc = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/misc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;
    exports.ONE_HUNDRED = 100;
    exports.ONE_THOUSAND = 1e3;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/time.js
var require_time = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;
    exports.ONE_SECOND = 1;
    exports.FIVE_SECONDS = 5;
    exports.TEN_SECONDS = 10;
    exports.THIRTY_SECONDS = 30;
    exports.SIXTY_SECONDS = 60;
    exports.ONE_MINUTE = exports.SIXTY_SECONDS;
    exports.FIVE_MINUTES = exports.ONE_MINUTE * 5;
    exports.TEN_MINUTES = exports.ONE_MINUTE * 10;
    exports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;
    exports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;
    exports.ONE_HOUR = exports.SIXTY_MINUTES;
    exports.THREE_HOURS = exports.ONE_HOUR * 3;
    exports.SIX_HOURS = exports.ONE_HOUR * 6;
    exports.TWELVE_HOURS = exports.ONE_HOUR * 12;
    exports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;
    exports.ONE_DAY = exports.TWENTY_FOUR_HOURS;
    exports.THREE_DAYS = exports.ONE_DAY * 3;
    exports.FIVE_DAYS = exports.ONE_DAY * 5;
    exports.SEVEN_DAYS = exports.ONE_DAY * 7;
    exports.THIRTY_DAYS = exports.ONE_DAY * 30;
    exports.ONE_WEEK = exports.SEVEN_DAYS;
    exports.TWO_WEEKS = exports.ONE_WEEK * 2;
    exports.THREE_WEEKS = exports.ONE_WEEK * 3;
    exports.FOUR_WEEKS = exports.ONE_WEEK * 4;
    exports.ONE_YEAR = exports.ONE_DAY * 365;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/index.js
var require_constants = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_misc(), exports);
    tslib_1.__exportStar(require_time(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/convert.js
var require_convert = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/convert.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromMiliseconds = exports.toMiliseconds = void 0;
    var constants_1 = require_constants();
    function toMiliseconds(seconds) {
      return seconds * constants_1.ONE_THOUSAND;
    }
    exports.toMiliseconds = toMiliseconds;
    function fromMiliseconds2(miliseconds) {
      return Math.floor(miliseconds / constants_1.ONE_THOUSAND);
    }
    exports.fromMiliseconds = fromMiliseconds2;
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/index.js
var require_utils3 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_delay(), exports);
    tslib_1.__exportStar(require_convert(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/watch.js
var require_watch = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Watch = void 0;
    var Watch = class {
      constructor() {
        this.timestamps = /* @__PURE__ */ new Map();
      }
      start(label) {
        if (this.timestamps.has(label)) {
          throw new Error(`Watch already started for label: ${label}`);
        }
        this.timestamps.set(label, { started: Date.now() });
      }
      stop(label) {
        const timestamp = this.get(label);
        if (typeof timestamp.elapsed !== "undefined") {
          throw new Error(`Watch already stopped for label: ${label}`);
        }
        const elapsed = Date.now() - timestamp.started;
        this.timestamps.set(label, { started: timestamp.started, elapsed });
      }
      get(label) {
        const timestamp = this.timestamps.get(label);
        if (typeof timestamp === "undefined") {
          throw new Error(`No timestamp found for label: ${label}`);
        }
        return timestamp;
      }
      elapsed(label) {
        const timestamp = this.get(label);
        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;
        return elapsed;
      }
    };
    exports.Watch = Watch;
    exports.default = Watch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/watch.js
var require_watch2 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IWatch = void 0;
    var IWatch = class {
    };
    exports.IWatch = IWatch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/index.js
var require_types = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_watch2(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/index.js
var require_cjs4 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_utils3(), exports);
    tslib_1.__exportStar(require_watch(), exports);
    tslib_1.__exportStar(require_types(), exports);
    tslib_1.__exportStar(require_constants(), exports);
  }
});

// node_modules/quick-format-unescaped/index.js
var require_quick_format_unescaped = __commonJS({
  "node_modules/quick-format-unescaped/index.js"(exports, module) {
    "use strict";
    function tryStringify(o6) {
      try {
        return JSON.stringify(o6);
      } catch (e4) {
        return '"[Circular]"';
      }
    }
    module.exports = format;
    function format(f6, args, opts) {
      var ss4 = opts && opts.stringify || tryStringify;
      var offset = 1;
      if (typeof f6 === "object" && f6 !== null) {
        var len = args.length + offset;
        if (len === 1) return f6;
        var objects = new Array(len);
        objects[0] = ss4(f6);
        for (var index = 1; index < len; index++) {
          objects[index] = ss4(args[index]);
        }
        return objects.join(" ");
      }
      if (typeof f6 !== "string") {
        return f6;
      }
      var argLen = args.length;
      if (argLen === 0) return f6;
      var str = "";
      var a6 = 1 - offset;
      var lastPos = -1;
      var flen = f6 && f6.length || 0;
      for (var i6 = 0; i6 < flen; ) {
        if (f6.charCodeAt(i6) === 37 && i6 + 1 < flen) {
          lastPos = lastPos > -1 ? lastPos : 0;
          switch (f6.charCodeAt(i6 + 1)) {
            case 100:
            case 102:
              if (a6 >= argLen)
                break;
              if (args[a6] == null) break;
              if (lastPos < i6)
                str += f6.slice(lastPos, i6);
              str += Number(args[a6]);
              lastPos = i6 + 2;
              i6++;
              break;
            case 105:
              if (a6 >= argLen)
                break;
              if (args[a6] == null) break;
              if (lastPos < i6)
                str += f6.slice(lastPos, i6);
              str += Math.floor(Number(args[a6]));
              lastPos = i6 + 2;
              i6++;
              break;
            case 79:
            case 111:
            case 106:
              if (a6 >= argLen)
                break;
              if (args[a6] === void 0) break;
              if (lastPos < i6)
                str += f6.slice(lastPos, i6);
              var type = typeof args[a6];
              if (type === "string") {
                str += "'" + args[a6] + "'";
                lastPos = i6 + 2;
                i6++;
                break;
              }
              if (type === "function") {
                str += args[a6].name || "<anonymous>";
                lastPos = i6 + 2;
                i6++;
                break;
              }
              str += ss4(args[a6]);
              lastPos = i6 + 2;
              i6++;
              break;
            case 115:
              if (a6 >= argLen)
                break;
              if (lastPos < i6)
                str += f6.slice(lastPos, i6);
              str += String(args[a6]);
              lastPos = i6 + 2;
              i6++;
              break;
            case 37:
              if (lastPos < i6)
                str += f6.slice(lastPos, i6);
              str += "%";
              lastPos = i6 + 2;
              i6++;
              a6--;
              break;
          }
          ++a6;
        }
        ++i6;
      }
      if (lastPos === -1)
        return f6;
      else if (lastPos < flen) {
        str += f6.slice(lastPos);
      }
      return str;
    }
  }
});

// node_modules/pino/browser.js
var require_browser2 = __commonJS({
  "node_modules/pino/browser.js"(exports, module) {
    "use strict";
    var format = require_quick_format_unescaped();
    module.exports = pino;
    var _console = pfGlobalThisOrFallback().console || {};
    var stdSerializers = {
      mapHttpRequest: mock,
      mapHttpResponse: mock,
      wrapRequestSerializer: passthrough,
      wrapResponseSerializer: passthrough,
      wrapErrorSerializer: passthrough,
      req: mock,
      res: mock,
      err: asErrValue
    };
    function shouldSerialize(serialize, serializers) {
      if (Array.isArray(serialize)) {
        const hasToFilter = serialize.filter(function(k5) {
          return k5 !== "!stdSerializers.err";
        });
        return hasToFilter;
      } else if (serialize === true) {
        return Object.keys(serializers);
      }
      return false;
    }
    function pino(opts) {
      opts = opts || {};
      opts.browser = opts.browser || {};
      const transmit2 = opts.browser.transmit;
      if (transmit2 && typeof transmit2.send !== "function") {
        throw Error("pino: transmit option must have a send function");
      }
      const proto = opts.browser.write || _console;
      if (opts.browser.write) opts.browser.asObject = true;
      const serializers = opts.serializers || {};
      const serialize = shouldSerialize(opts.browser.serialize, serializers);
      let stdErrSerialize = opts.browser.serialize;
      if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf("!stdSerializers.err") > -1) stdErrSerialize = false;
      const levels = ["error", "fatal", "warn", "info", "debug", "trace"];
      if (typeof proto === "function") {
        proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;
      }
      if (opts.enabled === false) opts.level = "silent";
      const level = opts.level || "info";
      const logger = Object.create(proto);
      if (!logger.log) logger.log = noop;
      Object.defineProperty(logger, "levelVal", {
        get: getLevelVal
      });
      Object.defineProperty(logger, "level", {
        get: getLevel,
        set: setLevel
      });
      const setOpts = {
        transmit: transmit2,
        serialize,
        asObject: opts.browser.asObject,
        levels,
        timestamp: getTimeFunction(opts)
      };
      logger.levels = pino.levels;
      logger.level = level;
      logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;
      logger.serializers = serializers;
      logger._serialize = serialize;
      logger._stdErrSerialize = stdErrSerialize;
      logger.child = child;
      if (transmit2) logger._logEvent = createLogEventShape();
      function getLevelVal() {
        return this.level === "silent" ? Infinity : this.levels.values[this.level];
      }
      function getLevel() {
        return this._level;
      }
      function setLevel(level2) {
        if (level2 !== "silent" && !this.levels.values[level2]) {
          throw Error("unknown level " + level2);
        }
        this._level = level2;
        set2(setOpts, logger, "error", "log");
        set2(setOpts, logger, "fatal", "error");
        set2(setOpts, logger, "warn", "error");
        set2(setOpts, logger, "info", "log");
        set2(setOpts, logger, "debug", "log");
        set2(setOpts, logger, "trace", "log");
      }
      function child(bindings, childOptions) {
        if (!bindings) {
          throw new Error("missing bindings for child Pino");
        }
        childOptions = childOptions || {};
        if (serialize && bindings.serializers) {
          childOptions.serializers = bindings.serializers;
        }
        const childOptionsSerializers = childOptions.serializers;
        if (serialize && childOptionsSerializers) {
          var childSerializers = Object.assign({}, serializers, childOptionsSerializers);
          var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;
          delete bindings.serializers;
          applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);
        }
        function Child(parent) {
          this._childLevel = (parent._childLevel | 0) + 1;
          this.error = bind(parent, bindings, "error");
          this.fatal = bind(parent, bindings, "fatal");
          this.warn = bind(parent, bindings, "warn");
          this.info = bind(parent, bindings, "info");
          this.debug = bind(parent, bindings, "debug");
          this.trace = bind(parent, bindings, "trace");
          if (childSerializers) {
            this.serializers = childSerializers;
            this._serialize = childSerialize;
          }
          if (transmit2) {
            this._logEvent = createLogEventShape(
              [].concat(parent._logEvent.bindings, bindings)
            );
          }
        }
        Child.prototype = this;
        return new Child(this);
      }
      return logger;
    }
    pino.levels = {
      values: {
        fatal: 60,
        error: 50,
        warn: 40,
        info: 30,
        debug: 20,
        trace: 10
      },
      labels: {
        10: "trace",
        20: "debug",
        30: "info",
        40: "warn",
        50: "error",
        60: "fatal"
      }
    };
    pino.stdSerializers = stdSerializers;
    pino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime });
    function set2(opts, logger, level, fallback) {
      const proto = Object.getPrototypeOf(logger);
      logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;
      wrap(opts, logger, level);
    }
    function wrap(opts, logger, level) {
      if (!opts.transmit && logger[level] === noop) return;
      logger[level] = /* @__PURE__ */ function(write) {
        return function LOG() {
          const ts4 = opts.timestamp();
          const args = new Array(arguments.length);
          const proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;
          for (var i6 = 0; i6 < args.length; i6++) args[i6] = arguments[i6];
          if (opts.serialize && !opts.asObject) {
            applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);
          }
          if (opts.asObject) write.call(proto, asObject(this, level, args, ts4));
          else write.apply(proto, args);
          if (opts.transmit) {
            const transmitLevel = opts.transmit.level || logger.level;
            const transmitValue = pino.levels.values[transmitLevel];
            const methodValue = pino.levels.values[level];
            if (methodValue < transmitValue) return;
            transmit(this, {
              ts: ts4,
              methodLevel: level,
              methodValue,
              transmitLevel,
              transmitValue: pino.levels.values[opts.transmit.level || logger.level],
              send: opts.transmit.send,
              val: logger.levelVal
            }, args);
          }
        };
      }(logger[level]);
    }
    function asObject(logger, level, args, ts4) {
      if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);
      const argsCloned = args.slice();
      let msg = argsCloned[0];
      const o6 = {};
      if (ts4) {
        o6.time = ts4;
      }
      o6.level = pino.levels.values[level];
      let lvl = (logger._childLevel | 0) + 1;
      if (lvl < 1) lvl = 1;
      if (msg !== null && typeof msg === "object") {
        while (lvl-- && typeof argsCloned[0] === "object") {
          Object.assign(o6, argsCloned.shift());
        }
        msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : void 0;
      } else if (typeof msg === "string") msg = format(argsCloned.shift(), argsCloned);
      if (msg !== void 0) o6.msg = msg;
      return o6;
    }
    function applySerializers(args, serialize, serializers, stdErrSerialize) {
      for (const i6 in args) {
        if (stdErrSerialize && args[i6] instanceof Error) {
          args[i6] = pino.stdSerializers.err(args[i6]);
        } else if (typeof args[i6] === "object" && !Array.isArray(args[i6])) {
          for (const k5 in args[i6]) {
            if (serialize && serialize.indexOf(k5) > -1 && k5 in serializers) {
              args[i6][k5] = serializers[k5](args[i6][k5]);
            }
          }
        }
      }
    }
    function bind(parent, bindings, level) {
      return function() {
        const args = new Array(1 + arguments.length);
        args[0] = bindings;
        for (var i6 = 1; i6 < args.length; i6++) {
          args[i6] = arguments[i6 - 1];
        }
        return parent[level].apply(this, args);
      };
    }
    function transmit(logger, opts, args) {
      const send = opts.send;
      const ts4 = opts.ts;
      const methodLevel = opts.methodLevel;
      const methodValue = opts.methodValue;
      const val = opts.val;
      const bindings = logger._logEvent.bindings;
      applySerializers(
        args,
        logger._serialize || Object.keys(logger.serializers),
        logger.serializers,
        logger._stdErrSerialize === void 0 ? true : logger._stdErrSerialize
      );
      logger._logEvent.ts = ts4;
      logger._logEvent.messages = args.filter(function(arg) {
        return bindings.indexOf(arg) === -1;
      });
      logger._logEvent.level.label = methodLevel;
      logger._logEvent.level.value = methodValue;
      send(methodLevel, logger._logEvent, val);
      logger._logEvent = createLogEventShape(bindings);
    }
    function createLogEventShape(bindings) {
      return {
        ts: 0,
        messages: [],
        bindings: bindings || [],
        level: { label: "", value: 0 }
      };
    }
    function asErrValue(err) {
      const obj = {
        type: err.constructor.name,
        msg: err.message,
        stack: err.stack
      };
      for (const key in err) {
        if (obj[key] === void 0) {
          obj[key] = err[key];
        }
      }
      return obj;
    }
    function getTimeFunction(opts) {
      if (typeof opts.timestamp === "function") {
        return opts.timestamp;
      }
      if (opts.timestamp === false) {
        return nullTime;
      }
      return epochTime;
    }
    function mock() {
      return {};
    }
    function passthrough(a6) {
      return a6;
    }
    function noop() {
    }
    function nullTime() {
      return false;
    }
    function epochTime() {
      return Date.now();
    }
    function unixTime() {
      return Math.round(Date.now() / 1e3);
    }
    function isoTime() {
      return new Date(Date.now()).toISOString();
    }
    function pfGlobalThisOrFallback() {
      function defd(o6) {
        return typeof o6 !== "undefined" && o6;
      }
      try {
        if (typeof globalThis !== "undefined") return globalThis;
        Object.defineProperty(Object.prototype, "globalThis", {
          get: function() {
            delete Object.prototype.globalThis;
            return this.globalThis = this;
          },
          configurable: true
        });
        return globalThis;
      } catch (e4) {
        return defd(self) || defd(window) || defd(this) || {};
      }
    }
  }
});

// node_modules/@stablelib/random/lib/source/browser.js
var require_browser3 = __commonJS({
  "node_modules/@stablelib/random/lib/source/browser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BrowserRandomSource = void 0;
    var QUOTA = 65536;
    var BrowserRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        const browserCrypto = typeof self !== "undefined" ? self.crypto || self.msCrypto : null;
        if (browserCrypto && browserCrypto.getRandomValues !== void 0) {
          this._crypto = browserCrypto;
          this.isAvailable = true;
          this.isInstantiated = true;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Browser random byte generator is not available.");
        }
        const out = new Uint8Array(length2);
        for (let i6 = 0; i6 < out.length; i6 += QUOTA) {
          this._crypto.getRandomValues(out.subarray(i6, i6 + Math.min(out.length - i6, QUOTA)));
        }
        return out;
      }
    };
    exports.BrowserRandomSource = BrowserRandomSource;
  }
});

// node_modules/@stablelib/wipe/lib/wipe.js
var require_wipe = __commonJS({
  "node_modules/@stablelib/wipe/lib/wipe.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function wipe(array) {
      for (var i6 = 0; i6 < array.length; i6++) {
        array[i6] = 0;
      }
      return array;
    }
    exports.wipe = wipe;
  }
});

// node_modules/@stablelib/random/lib/source/node.js
var require_node = __commonJS({
  "node_modules/@stablelib/random/lib/source/node.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NodeRandomSource = void 0;
    var wipe_1 = require_wipe();
    var NodeRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        if (typeof __require !== "undefined") {
          const nodeCrypto = require_crypto();
          if (nodeCrypto && nodeCrypto.randomBytes) {
            this._crypto = nodeCrypto;
            this.isAvailable = true;
            this.isInstantiated = true;
          }
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Node.js random byte generator is not available.");
        }
        let buffer = this._crypto.randomBytes(length2);
        if (buffer.length !== length2) {
          throw new Error("NodeRandomSource: got fewer bytes than requested");
        }
        const out = new Uint8Array(length2);
        for (let i6 = 0; i6 < out.length; i6++) {
          out[i6] = buffer[i6];
        }
        (0, wipe_1.wipe)(buffer);
        return out;
      }
    };
    exports.NodeRandomSource = NodeRandomSource;
  }
});

// node_modules/@stablelib/random/lib/source/system.js
var require_system = __commonJS({
  "node_modules/@stablelib/random/lib/source/system.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SystemRandomSource = void 0;
    var browser_1 = require_browser3();
    var node_1 = require_node();
    var SystemRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.name = "";
        this._source = new browser_1.BrowserRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Browser";
          return;
        }
        this._source = new node_1.NodeRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Node";
          return;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable) {
          throw new Error("System random byte generator is not available.");
        }
        return this._source.randomBytes(length2);
      }
    };
    exports.SystemRandomSource = SystemRandomSource;
  }
});

// node_modules/@stablelib/int/lib/int.js
var require_int = __commonJS({
  "node_modules/@stablelib/int/lib/int.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function imulShim(a6, b5) {
      var ah2 = a6 >>> 16 & 65535, al = a6 & 65535;
      var bh = b5 >>> 16 & 65535, bl = b5 & 65535;
      return al * bl + (ah2 * bl + al * bh << 16 >>> 0) | 0;
    }
    exports.mul = Math.imul || imulShim;
    function add(a6, b5) {
      return a6 + b5 | 0;
    }
    exports.add = add;
    function sub(a6, b5) {
      return a6 - b5 | 0;
    }
    exports.sub = sub;
    function rotl(x5, n6) {
      return x5 << n6 | x5 >>> 32 - n6;
    }
    exports.rotl = rotl;
    function rotr(x5, n6) {
      return x5 << 32 - n6 | x5 >>> n6;
    }
    exports.rotr = rotr;
    function isIntegerShim(n6) {
      return typeof n6 === "number" && isFinite(n6) && Math.floor(n6) === n6;
    }
    exports.isInteger = Number.isInteger || isIntegerShim;
    exports.MAX_SAFE_INTEGER = 9007199254740991;
    exports.isSafeInteger = function(n6) {
      return exports.isInteger(n6) && (n6 >= -exports.MAX_SAFE_INTEGER && n6 <= exports.MAX_SAFE_INTEGER);
    };
  }
});

// node_modules/@stablelib/binary/lib/binary.js
var require_binary = __commonJS({
  "node_modules/@stablelib/binary/lib/binary.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var int_1 = require_int();
    function readInt16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) << 16 >> 16;
    }
    exports.readInt16BE = readInt16BE;
    function readUint16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) >>> 0;
    }
    exports.readUint16BE = readUint16BE;
    function readInt16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) << 16 >> 16;
    }
    exports.readInt16LE = readInt16LE;
    function readUint16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint16LE = readUint16LE;
    function writeUint16BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 8;
      out[offset + 1] = value >>> 0;
      return out;
    }
    exports.writeUint16BE = writeUint16BE;
    exports.writeInt16BE = writeUint16BE;
    function writeUint16LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      return out;
    }
    exports.writeUint16LE = writeUint16LE;
    exports.writeInt16LE = writeUint16LE;
    function readInt32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3];
    }
    exports.readInt32BE = readInt32BE;
    function readUint32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3]) >>> 0;
    }
    exports.readUint32BE = readUint32BE;
    function readInt32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset];
    }
    exports.readInt32LE = readInt32LE;
    function readUint32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint32LE = readUint32LE;
    function writeUint32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 24;
      out[offset + 1] = value >>> 16;
      out[offset + 2] = value >>> 8;
      out[offset + 3] = value >>> 0;
      return out;
    }
    exports.writeUint32BE = writeUint32BE;
    exports.writeInt32BE = writeUint32BE;
    function writeUint32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      out[offset + 2] = value >>> 16;
      out[offset + 3] = value >>> 24;
      return out;
    }
    exports.writeUint32LE = writeUint32LE;
    exports.writeInt32LE = writeUint32LE;
    function readInt64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi2 = readInt32BE(array, offset);
      var lo2 = readInt32BE(array, offset + 4);
      return hi2 * 4294967296 + lo2 - (lo2 >> 31) * 4294967296;
    }
    exports.readInt64BE = readInt64BE;
    function readUint64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi2 = readUint32BE(array, offset);
      var lo2 = readUint32BE(array, offset + 4);
      return hi2 * 4294967296 + lo2;
    }
    exports.readUint64BE = readUint64BE;
    function readInt64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo2 = readInt32LE(array, offset);
      var hi2 = readInt32LE(array, offset + 4);
      return hi2 * 4294967296 + lo2 - (lo2 >> 31) * 4294967296;
    }
    exports.readInt64LE = readInt64LE;
    function readUint64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo2 = readUint32LE(array, offset);
      var hi2 = readUint32LE(array, offset + 4);
      return hi2 * 4294967296 + lo2;
    }
    exports.readUint64LE = readUint64LE;
    function writeUint64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32BE(value / 4294967296 >>> 0, out, offset);
      writeUint32BE(value >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64BE = writeUint64BE;
    exports.writeInt64BE = writeUint64BE;
    function writeUint64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32LE(value >>> 0, out, offset);
      writeUint32LE(value / 4294967296 >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64LE = writeUint64LE;
    exports.writeInt64LE = writeUint64LE;
    function readUintBE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintBE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintBE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i6 = bitLength / 8 + offset - 1; i6 >= offset; i6--) {
        result += array[i6] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintBE = readUintBE;
    function readUintLE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintLE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintLE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i6 = offset; i6 < offset + bitLength / 8; i6++) {
        result += array[i6] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintLE = readUintLE;
    function writeUintBE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintBE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintBE value must be an integer");
      }
      var div = 1;
      for (var i6 = bitLength / 8 + offset - 1; i6 >= offset; i6--) {
        out[i6] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintBE = writeUintBE;
    function writeUintLE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintLE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintLE value must be an integer");
      }
      var div = 1;
      for (var i6 = offset; i6 < offset + bitLength / 8; i6++) {
        out[i6] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintLE = writeUintLE;
    function readFloat32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset);
    }
    exports.readFloat32BE = readFloat32BE;
    function readFloat32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset, true);
    }
    exports.readFloat32LE = readFloat32LE;
    function readFloat64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset);
    }
    exports.readFloat64BE = readFloat64BE;
    function readFloat64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset, true);
    }
    exports.readFloat64LE = readFloat64LE;
    function writeFloat32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value);
      return out;
    }
    exports.writeFloat32BE = writeFloat32BE;
    function writeFloat32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value, true);
      return out;
    }
    exports.writeFloat32LE = writeFloat32LE;
    function writeFloat64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value);
      return out;
    }
    exports.writeFloat64BE = writeFloat64BE;
    function writeFloat64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value, true);
      return out;
    }
    exports.writeFloat64LE = writeFloat64LE;
  }
});

// node_modules/@stablelib/random/lib/random.js
var require_random = __commonJS({
  "node_modules/@stablelib/random/lib/random.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;
    var system_1 = require_system();
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.defaultRandomSource = new system_1.SystemRandomSource();
    function randomBytes2(length2, prng = exports.defaultRandomSource) {
      return prng.randomBytes(length2);
    }
    exports.randomBytes = randomBytes2;
    function randomUint32(prng = exports.defaultRandomSource) {
      const buf = randomBytes2(4, prng);
      const result = (0, binary_1.readUint32LE)(buf);
      (0, wipe_1.wipe)(buf);
      return result;
    }
    exports.randomUint32 = randomUint32;
    var ALPHANUMERIC = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    function randomString(length2, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      if (charset.length < 2) {
        throw new Error("randomString charset is too short");
      }
      if (charset.length > 256) {
        throw new Error("randomString charset is too long");
      }
      let out = "";
      const charsLen = charset.length;
      const maxByte = 256 - 256 % charsLen;
      while (length2 > 0) {
        const buf = randomBytes2(Math.ceil(length2 * 256 / maxByte), prng);
        for (let i6 = 0; i6 < buf.length && length2 > 0; i6++) {
          const randomByte = buf[i6];
          if (randomByte < maxByte) {
            out += charset.charAt(randomByte % charsLen);
            length2--;
          }
        }
        (0, wipe_1.wipe)(buf);
      }
      return out;
    }
    exports.randomString = randomString;
    function randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      const length2 = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));
      return randomString(length2, charset, prng);
    }
    exports.randomStringForEntropy = randomStringForEntropy;
  }
});

// node_modules/@stablelib/sha512/lib/sha512.js
var require_sha512 = __commonJS({
  "node_modules/@stablelib/sha512/lib/sha512.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 64;
    exports.BLOCK_SIZE = 128;
    var SHA512 = (
      /** @class */
      function() {
        function SHA5122() {
          this.digestLength = exports.DIGEST_LENGTH;
          this.blockSize = exports.BLOCK_SIZE;
          this._stateHi = new Int32Array(8);
          this._stateLo = new Int32Array(8);
          this._tempHi = new Int32Array(16);
          this._tempLo = new Int32Array(16);
          this._buffer = new Uint8Array(256);
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          this.reset();
        }
        SHA5122.prototype._initState = function() {
          this._stateHi[0] = 1779033703;
          this._stateHi[1] = 3144134277;
          this._stateHi[2] = 1013904242;
          this._stateHi[3] = 2773480762;
          this._stateHi[4] = 1359893119;
          this._stateHi[5] = 2600822924;
          this._stateHi[6] = 528734635;
          this._stateHi[7] = 1541459225;
          this._stateLo[0] = 4089235720;
          this._stateLo[1] = 2227873595;
          this._stateLo[2] = 4271175723;
          this._stateLo[3] = 1595750129;
          this._stateLo[4] = 2917565137;
          this._stateLo[5] = 725511199;
          this._stateLo[6] = 4215389547;
          this._stateLo[7] = 327033209;
        };
        SHA5122.prototype.reset = function() {
          this._initState();
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          return this;
        };
        SHA5122.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._tempHi);
          wipe_1.wipe(this._tempLo);
          this.reset();
        };
        SHA5122.prototype.update = function(data, dataLength) {
          if (dataLength === void 0) {
            dataLength = data.length;
          }
          if (this._finished) {
            throw new Error("SHA512: can't update because hash was finished.");
          }
          var dataPos = 0;
          this._bytesHashed += dataLength;
          if (this._bufferLength > 0) {
            while (this._bufferLength < exports.BLOCK_SIZE && dataLength > 0) {
              this._buffer[this._bufferLength++] = data[dataPos++];
              dataLength--;
            }
            if (this._bufferLength === this.blockSize) {
              hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize);
              this._bufferLength = 0;
            }
          }
          if (dataLength >= this.blockSize) {
            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, data, dataPos, dataLength);
            dataLength %= this.blockSize;
          }
          while (dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          return this;
        };
        SHA5122.prototype.finish = function(out) {
          if (!this._finished) {
            var bytesHashed = this._bytesHashed;
            var left = this._bufferLength;
            var bitLenHi = bytesHashed / 536870912 | 0;
            var bitLenLo = bytesHashed << 3;
            var padLength = bytesHashed % 128 < 112 ? 128 : 256;
            this._buffer[left] = 128;
            for (var i6 = left + 1; i6 < padLength - 8; i6++) {
              this._buffer[i6] = 0;
            }
            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);
            this._finished = true;
          }
          for (var i6 = 0; i6 < this.digestLength / 8; i6++) {
            binary_1.writeUint32BE(this._stateHi[i6], out, i6 * 8);
            binary_1.writeUint32BE(this._stateLo[i6], out, i6 * 8 + 4);
          }
          return this;
        };
        SHA5122.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        SHA5122.prototype.saveState = function() {
          if (this._finished) {
            throw new Error("SHA256: cannot save finished state");
          }
          return {
            stateHi: new Int32Array(this._stateHi),
            stateLo: new Int32Array(this._stateLo),
            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
            bufferLength: this._bufferLength,
            bytesHashed: this._bytesHashed
          };
        };
        SHA5122.prototype.restoreState = function(savedState) {
          this._stateHi.set(savedState.stateHi);
          this._stateLo.set(savedState.stateLo);
          this._bufferLength = savedState.bufferLength;
          if (savedState.buffer) {
            this._buffer.set(savedState.buffer);
          }
          this._bytesHashed = savedState.bytesHashed;
          this._finished = false;
          return this;
        };
        SHA5122.prototype.cleanSavedState = function(savedState) {
          wipe_1.wipe(savedState.stateHi);
          wipe_1.wipe(savedState.stateLo);
          if (savedState.buffer) {
            wipe_1.wipe(savedState.buffer);
          }
          savedState.bufferLength = 0;
          savedState.bytesHashed = 0;
        };
        return SHA5122;
      }()
    );
    exports.SHA512 = SHA512;
    var K5 = new Int32Array([
      1116352408,
      3609767458,
      1899447441,
      602891725,
      3049323471,
      3964484399,
      3921009573,
      2173295548,
      961987163,
      4081628472,
      1508970993,
      3053834265,
      2453635748,
      2937671579,
      2870763221,
      3664609560,
      3624381080,
      2734883394,
      310598401,
      1164996542,
      607225278,
      1323610764,
      1426881987,
      3590304994,
      1925078388,
      4068182383,
      2162078206,
      991336113,
      2614888103,
      633803317,
      3248222580,
      3479774868,
      3835390401,
      2666613458,
      4022224774,
      944711139,
      264347078,
      2341262773,
      604807628,
      2007800933,
      770255983,
      1495990901,
      1249150122,
      1856431235,
      1555081692,
      3175218132,
      1996064986,
      2198950837,
      2554220882,
      3999719339,
      2821834349,
      766784016,
      2952996808,
      2566594879,
      3210313671,
      3203337956,
      3336571891,
      1034457026,
      3584528711,
      2466948901,
      113926993,
      3758326383,
      338241895,
      168717936,
      666307205,
      1188179964,
      773529912,
      1546045734,
      1294757372,
      1522805485,
      1396182291,
      2643833823,
      1695183700,
      2343527390,
      1986661051,
      1014477480,
      2177026350,
      1206759142,
      2456956037,
      344077627,
      2730485921,
      1290863460,
      2820302411,
      3158454273,
      3259730800,
      3505952657,
      3345764771,
      106217008,
      3516065817,
      3606008344,
      3600352804,
      1432725776,
      4094571909,
      1467031594,
      275423344,
      851169720,
      430227734,
      3100823752,
      506948616,
      1363258195,
      659060556,
      3750685593,
      883997877,
      3785050280,
      958139571,
      3318307427,
      1322822218,
      3812723403,
      1537002063,
      2003034995,
      1747873779,
      3602036899,
      1955562222,
      1575990012,
      2024104815,
      1125592928,
      2227730452,
      2716904306,
      2361852424,
      442776044,
      2428436474,
      593698344,
      2756734187,
      3733110249,
      3204031479,
      2999351573,
      3329325298,
      3815920427,
      3391569614,
      3928383900,
      3515267271,
      566280711,
      3940187606,
      3454069534,
      4118630271,
      4000239992,
      116418474,
      1914138554,
      174292421,
      2731055270,
      289380356,
      3203993006,
      460393269,
      320620315,
      685471733,
      587496836,
      852142971,
      1086792851,
      1017036298,
      365543100,
      1126000580,
      2618297676,
      1288033470,
      3409855158,
      1501505948,
      4234509866,
      1607167915,
      987167468,
      1816402316,
      1246189591
    ]);
    function hashBlocks(wh, wl, hh2, hl, m5, pos, len) {
      var ah0 = hh2[0], ah1 = hh2[1], ah2 = hh2[2], ah3 = hh2[3], ah4 = hh2[4], ah5 = hh2[5], ah6 = hh2[6], ah7 = hh2[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];
      var h7, l6;
      var th2, tl;
      var a6, b5, c7, d5;
      while (len >= 128) {
        for (var i6 = 0; i6 < 16; i6++) {
          var j6 = 8 * i6 + pos;
          wh[i6] = binary_1.readUint32BE(m5, j6);
          wl[i6] = binary_1.readUint32BE(m5, j6 + 4);
        }
        for (var i6 = 0; i6 < 80; i6++) {
          var bh0 = ah0;
          var bh1 = ah1;
          var bh2 = ah2;
          var bh3 = ah3;
          var bh4 = ah4;
          var bh5 = ah5;
          var bh6 = ah6;
          var bh7 = ah7;
          var bl0 = al0;
          var bl1 = al1;
          var bl2 = al2;
          var bl3 = al3;
          var bl4 = al4;
          var bl5 = al5;
          var bl6 = al6;
          var bl7 = al7;
          h7 = ah7;
          l6 = al7;
          a6 = l6 & 65535;
          b5 = l6 >>> 16;
          c7 = h7 & 65535;
          d5 = h7 >>> 16;
          h7 = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));
          l6 = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));
          a6 += l6 & 65535;
          b5 += l6 >>> 16;
          c7 += h7 & 65535;
          d5 += h7 >>> 16;
          h7 = ah4 & ah5 ^ ~ah4 & ah6;
          l6 = al4 & al5 ^ ~al4 & al6;
          a6 += l6 & 65535;
          b5 += l6 >>> 16;
          c7 += h7 & 65535;
          d5 += h7 >>> 16;
          h7 = K5[i6 * 2];
          l6 = K5[i6 * 2 + 1];
          a6 += l6 & 65535;
          b5 += l6 >>> 16;
          c7 += h7 & 65535;
          d5 += h7 >>> 16;
          h7 = wh[i6 % 16];
          l6 = wl[i6 % 16];
          a6 += l6 & 65535;
          b5 += l6 >>> 16;
          c7 += h7 & 65535;
          d5 += h7 >>> 16;
          b5 += a6 >>> 16;
          c7 += b5 >>> 16;
          d5 += c7 >>> 16;
          th2 = c7 & 65535 | d5 << 16;
          tl = a6 & 65535 | b5 << 16;
          h7 = th2;
          l6 = tl;
          a6 = l6 & 65535;
          b5 = l6 >>> 16;
          c7 = h7 & 65535;
          d5 = h7 >>> 16;
          h7 = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));
          l6 = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));
          a6 += l6 & 65535;
          b5 += l6 >>> 16;
          c7 += h7 & 65535;
          d5 += h7 >>> 16;
          h7 = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;
          l6 = al0 & al1 ^ al0 & al2 ^ al1 & al2;
          a6 += l6 & 65535;
          b5 += l6 >>> 16;
          c7 += h7 & 65535;
          d5 += h7 >>> 16;
          b5 += a6 >>> 16;
          c7 += b5 >>> 16;
          d5 += c7 >>> 16;
          bh7 = c7 & 65535 | d5 << 16;
          bl7 = a6 & 65535 | b5 << 16;
          h7 = bh3;
          l6 = bl3;
          a6 = l6 & 65535;
          b5 = l6 >>> 16;
          c7 = h7 & 65535;
          d5 = h7 >>> 16;
          h7 = th2;
          l6 = tl;
          a6 += l6 & 65535;
          b5 += l6 >>> 16;
          c7 += h7 & 65535;
          d5 += h7 >>> 16;
          b5 += a6 >>> 16;
          c7 += b5 >>> 16;
          d5 += c7 >>> 16;
          bh3 = c7 & 65535 | d5 << 16;
          bl3 = a6 & 65535 | b5 << 16;
          ah1 = bh0;
          ah2 = bh1;
          ah3 = bh2;
          ah4 = bh3;
          ah5 = bh4;
          ah6 = bh5;
          ah7 = bh6;
          ah0 = bh7;
          al1 = bl0;
          al2 = bl1;
          al3 = bl2;
          al4 = bl3;
          al5 = bl4;
          al6 = bl5;
          al7 = bl6;
          al0 = bl7;
          if (i6 % 16 === 15) {
            for (var j6 = 0; j6 < 16; j6++) {
              h7 = wh[j6];
              l6 = wl[j6];
              a6 = l6 & 65535;
              b5 = l6 >>> 16;
              c7 = h7 & 65535;
              d5 = h7 >>> 16;
              h7 = wh[(j6 + 9) % 16];
              l6 = wl[(j6 + 9) % 16];
              a6 += l6 & 65535;
              b5 += l6 >>> 16;
              c7 += h7 & 65535;
              d5 += h7 >>> 16;
              th2 = wh[(j6 + 1) % 16];
              tl = wl[(j6 + 1) % 16];
              h7 = (th2 >>> 1 | tl << 32 - 1) ^ (th2 >>> 8 | tl << 32 - 8) ^ th2 >>> 7;
              l6 = (tl >>> 1 | th2 << 32 - 1) ^ (tl >>> 8 | th2 << 32 - 8) ^ (tl >>> 7 | th2 << 32 - 7);
              a6 += l6 & 65535;
              b5 += l6 >>> 16;
              c7 += h7 & 65535;
              d5 += h7 >>> 16;
              th2 = wh[(j6 + 14) % 16];
              tl = wl[(j6 + 14) % 16];
              h7 = (th2 >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th2 << 32 - (61 - 32)) ^ th2 >>> 6;
              l6 = (tl >>> 19 | th2 << 32 - 19) ^ (th2 >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th2 << 32 - 6);
              a6 += l6 & 65535;
              b5 += l6 >>> 16;
              c7 += h7 & 65535;
              d5 += h7 >>> 16;
              b5 += a6 >>> 16;
              c7 += b5 >>> 16;
              d5 += c7 >>> 16;
              wh[j6] = c7 & 65535 | d5 << 16;
              wl[j6] = a6 & 65535 | b5 << 16;
            }
          }
        }
        h7 = ah0;
        l6 = al0;
        a6 = l6 & 65535;
        b5 = l6 >>> 16;
        c7 = h7 & 65535;
        d5 = h7 >>> 16;
        h7 = hh2[0];
        l6 = hl[0];
        a6 += l6 & 65535;
        b5 += l6 >>> 16;
        c7 += h7 & 65535;
        d5 += h7 >>> 16;
        b5 += a6 >>> 16;
        c7 += b5 >>> 16;
        d5 += c7 >>> 16;
        hh2[0] = ah0 = c7 & 65535 | d5 << 16;
        hl[0] = al0 = a6 & 65535 | b5 << 16;
        h7 = ah1;
        l6 = al1;
        a6 = l6 & 65535;
        b5 = l6 >>> 16;
        c7 = h7 & 65535;
        d5 = h7 >>> 16;
        h7 = hh2[1];
        l6 = hl[1];
        a6 += l6 & 65535;
        b5 += l6 >>> 16;
        c7 += h7 & 65535;
        d5 += h7 >>> 16;
        b5 += a6 >>> 16;
        c7 += b5 >>> 16;
        d5 += c7 >>> 16;
        hh2[1] = ah1 = c7 & 65535 | d5 << 16;
        hl[1] = al1 = a6 & 65535 | b5 << 16;
        h7 = ah2;
        l6 = al2;
        a6 = l6 & 65535;
        b5 = l6 >>> 16;
        c7 = h7 & 65535;
        d5 = h7 >>> 16;
        h7 = hh2[2];
        l6 = hl[2];
        a6 += l6 & 65535;
        b5 += l6 >>> 16;
        c7 += h7 & 65535;
        d5 += h7 >>> 16;
        b5 += a6 >>> 16;
        c7 += b5 >>> 16;
        d5 += c7 >>> 16;
        hh2[2] = ah2 = c7 & 65535 | d5 << 16;
        hl[2] = al2 = a6 & 65535 | b5 << 16;
        h7 = ah3;
        l6 = al3;
        a6 = l6 & 65535;
        b5 = l6 >>> 16;
        c7 = h7 & 65535;
        d5 = h7 >>> 16;
        h7 = hh2[3];
        l6 = hl[3];
        a6 += l6 & 65535;
        b5 += l6 >>> 16;
        c7 += h7 & 65535;
        d5 += h7 >>> 16;
        b5 += a6 >>> 16;
        c7 += b5 >>> 16;
        d5 += c7 >>> 16;
        hh2[3] = ah3 = c7 & 65535 | d5 << 16;
        hl[3] = al3 = a6 & 65535 | b5 << 16;
        h7 = ah4;
        l6 = al4;
        a6 = l6 & 65535;
        b5 = l6 >>> 16;
        c7 = h7 & 65535;
        d5 = h7 >>> 16;
        h7 = hh2[4];
        l6 = hl[4];
        a6 += l6 & 65535;
        b5 += l6 >>> 16;
        c7 += h7 & 65535;
        d5 += h7 >>> 16;
        b5 += a6 >>> 16;
        c7 += b5 >>> 16;
        d5 += c7 >>> 16;
        hh2[4] = ah4 = c7 & 65535 | d5 << 16;
        hl[4] = al4 = a6 & 65535 | b5 << 16;
        h7 = ah5;
        l6 = al5;
        a6 = l6 & 65535;
        b5 = l6 >>> 16;
        c7 = h7 & 65535;
        d5 = h7 >>> 16;
        h7 = hh2[5];
        l6 = hl[5];
        a6 += l6 & 65535;
        b5 += l6 >>> 16;
        c7 += h7 & 65535;
        d5 += h7 >>> 16;
        b5 += a6 >>> 16;
        c7 += b5 >>> 16;
        d5 += c7 >>> 16;
        hh2[5] = ah5 = c7 & 65535 | d5 << 16;
        hl[5] = al5 = a6 & 65535 | b5 << 16;
        h7 = ah6;
        l6 = al6;
        a6 = l6 & 65535;
        b5 = l6 >>> 16;
        c7 = h7 & 65535;
        d5 = h7 >>> 16;
        h7 = hh2[6];
        l6 = hl[6];
        a6 += l6 & 65535;
        b5 += l6 >>> 16;
        c7 += h7 & 65535;
        d5 += h7 >>> 16;
        b5 += a6 >>> 16;
        c7 += b5 >>> 16;
        d5 += c7 >>> 16;
        hh2[6] = ah6 = c7 & 65535 | d5 << 16;
        hl[6] = al6 = a6 & 65535 | b5 << 16;
        h7 = ah7;
        l6 = al7;
        a6 = l6 & 65535;
        b5 = l6 >>> 16;
        c7 = h7 & 65535;
        d5 = h7 >>> 16;
        h7 = hh2[7];
        l6 = hl[7];
        a6 += l6 & 65535;
        b5 += l6 >>> 16;
        c7 += h7 & 65535;
        d5 += h7 >>> 16;
        b5 += a6 >>> 16;
        c7 += b5 >>> 16;
        d5 += c7 >>> 16;
        hh2[7] = ah7 = c7 & 65535 | d5 << 16;
        hl[7] = al7 = a6 & 65535 | b5 << 16;
        pos += 128;
        len -= 128;
      }
      return pos;
    }
    function hash(data) {
      var h7 = new SHA512();
      h7.update(data);
      var digest2 = h7.digest();
      h7.clean();
      return digest2;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/ed25519/lib/ed25519.js
var require_ed25519 = __commonJS({
  "node_modules/@stablelib/ed25519/lib/ed25519.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.convertSecretKeyToX25519 = exports.convertPublicKeyToX25519 = exports.verify = exports.sign = exports.extractPublicKeyFromSecretKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.SEED_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = exports.SIGNATURE_LENGTH = void 0;
    var random_1 = require_random();
    var sha512_1 = require_sha512();
    var wipe_1 = require_wipe();
    exports.SIGNATURE_LENGTH = 64;
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 64;
    exports.SEED_LENGTH = 32;
    function gf2(init) {
      const r5 = new Float64Array(16);
      if (init) {
        for (let i6 = 0; i6 < init.length; i6++) {
          r5[i6] = init[i6];
        }
      }
      return r5;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var gf0 = gf2();
    var gf1 = gf2([1]);
    var D5 = gf2([
      30883,
      4953,
      19914,
      30187,
      55467,
      16705,
      2637,
      112,
      59544,
      30585,
      16505,
      36039,
      65139,
      11119,
      27886,
      20995
    ]);
    var D22 = gf2([
      61785,
      9906,
      39828,
      60374,
      45398,
      33411,
      5274,
      224,
      53552,
      61171,
      33010,
      6542,
      64743,
      22239,
      55772,
      9222
    ]);
    var X3 = gf2([
      54554,
      36645,
      11616,
      51542,
      42930,
      38181,
      51040,
      26924,
      56412,
      64982,
      57905,
      49316,
      21502,
      52590,
      14035,
      8553
    ]);
    var Y2 = gf2([
      26200,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214
    ]);
    var I5 = gf2([
      41136,
      18958,
      6951,
      50414,
      58488,
      44335,
      6150,
      12099,
      55207,
      15867,
      153,
      11085,
      57099,
      20417,
      9344,
      11139
    ]);
    function set25519(r5, a6) {
      for (let i6 = 0; i6 < 16; i6++) {
        r5[i6] = a6[i6] | 0;
      }
    }
    function car25519(o6) {
      let c7 = 1;
      for (let i6 = 0; i6 < 16; i6++) {
        let v5 = o6[i6] + c7 + 65535;
        c7 = Math.floor(v5 / 65536);
        o6[i6] = v5 - c7 * 65536;
      }
      o6[0] += c7 - 1 + 37 * (c7 - 1);
    }
    function sel25519(p5, q5, b5) {
      const c7 = ~(b5 - 1);
      for (let i6 = 0; i6 < 16; i6++) {
        const t3 = c7 & (p5[i6] ^ q5[i6]);
        p5[i6] ^= t3;
        q5[i6] ^= t3;
      }
    }
    function pack25519(o6, n6) {
      const m5 = gf2();
      const t3 = gf2();
      for (let i6 = 0; i6 < 16; i6++) {
        t3[i6] = n6[i6];
      }
      car25519(t3);
      car25519(t3);
      car25519(t3);
      for (let j6 = 0; j6 < 2; j6++) {
        m5[0] = t3[0] - 65517;
        for (let i6 = 1; i6 < 15; i6++) {
          m5[i6] = t3[i6] - 65535 - (m5[i6 - 1] >> 16 & 1);
          m5[i6 - 1] &= 65535;
        }
        m5[15] = t3[15] - 32767 - (m5[14] >> 16 & 1);
        const b5 = m5[15] >> 16 & 1;
        m5[14] &= 65535;
        sel25519(t3, m5, 1 - b5);
      }
      for (let i6 = 0; i6 < 16; i6++) {
        o6[2 * i6] = t3[i6] & 255;
        o6[2 * i6 + 1] = t3[i6] >> 8;
      }
    }
    function verify32(x5, y8) {
      let d5 = 0;
      for (let i6 = 0; i6 < 32; i6++) {
        d5 |= x5[i6] ^ y8[i6];
      }
      return (1 & d5 - 1 >>> 8) - 1;
    }
    function neq25519(a6, b5) {
      const c7 = new Uint8Array(32);
      const d5 = new Uint8Array(32);
      pack25519(c7, a6);
      pack25519(d5, b5);
      return verify32(c7, d5);
    }
    function par25519(a6) {
      const d5 = new Uint8Array(32);
      pack25519(d5, a6);
      return d5[0] & 1;
    }
    function unpack25519(o6, n6) {
      for (let i6 = 0; i6 < 16; i6++) {
        o6[i6] = n6[2 * i6] + (n6[2 * i6 + 1] << 8);
      }
      o6[15] &= 32767;
    }
    function add(o6, a6, b5) {
      for (let i6 = 0; i6 < 16; i6++) {
        o6[i6] = a6[i6] + b5[i6];
      }
    }
    function sub(o6, a6, b5) {
      for (let i6 = 0; i6 < 16; i6++) {
        o6[i6] = a6[i6] - b5[i6];
      }
    }
    function mul(o6, a6, b5) {
      let v5, c7, t0 = 0, t1 = 0, t22 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t222 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b02 = b5[0], b1 = b5[1], b22 = b5[2], b32 = b5[3], b42 = b5[4], b52 = b5[5], b6 = b5[6], b7 = b5[7], b8 = b5[8], b9 = b5[9], b10 = b5[10], b11 = b5[11], b12 = b5[12], b13 = b5[13], b14 = b5[14], b15 = b5[15];
      v5 = a6[0];
      t0 += v5 * b02;
      t1 += v5 * b1;
      t22 += v5 * b22;
      t3 += v5 * b32;
      t4 += v5 * b42;
      t5 += v5 * b52;
      t6 += v5 * b6;
      t7 += v5 * b7;
      t8 += v5 * b8;
      t9 += v5 * b9;
      t10 += v5 * b10;
      t11 += v5 * b11;
      t12 += v5 * b12;
      t13 += v5 * b13;
      t14 += v5 * b14;
      t15 += v5 * b15;
      v5 = a6[1];
      t1 += v5 * b02;
      t22 += v5 * b1;
      t3 += v5 * b22;
      t4 += v5 * b32;
      t5 += v5 * b42;
      t6 += v5 * b52;
      t7 += v5 * b6;
      t8 += v5 * b7;
      t9 += v5 * b8;
      t10 += v5 * b9;
      t11 += v5 * b10;
      t12 += v5 * b11;
      t13 += v5 * b12;
      t14 += v5 * b13;
      t15 += v5 * b14;
      t16 += v5 * b15;
      v5 = a6[2];
      t22 += v5 * b02;
      t3 += v5 * b1;
      t4 += v5 * b22;
      t5 += v5 * b32;
      t6 += v5 * b42;
      t7 += v5 * b52;
      t8 += v5 * b6;
      t9 += v5 * b7;
      t10 += v5 * b8;
      t11 += v5 * b9;
      t12 += v5 * b10;
      t13 += v5 * b11;
      t14 += v5 * b12;
      t15 += v5 * b13;
      t16 += v5 * b14;
      t17 += v5 * b15;
      v5 = a6[3];
      t3 += v5 * b02;
      t4 += v5 * b1;
      t5 += v5 * b22;
      t6 += v5 * b32;
      t7 += v5 * b42;
      t8 += v5 * b52;
      t9 += v5 * b6;
      t10 += v5 * b7;
      t11 += v5 * b8;
      t12 += v5 * b9;
      t13 += v5 * b10;
      t14 += v5 * b11;
      t15 += v5 * b12;
      t16 += v5 * b13;
      t17 += v5 * b14;
      t18 += v5 * b15;
      v5 = a6[4];
      t4 += v5 * b02;
      t5 += v5 * b1;
      t6 += v5 * b22;
      t7 += v5 * b32;
      t8 += v5 * b42;
      t9 += v5 * b52;
      t10 += v5 * b6;
      t11 += v5 * b7;
      t12 += v5 * b8;
      t13 += v5 * b9;
      t14 += v5 * b10;
      t15 += v5 * b11;
      t16 += v5 * b12;
      t17 += v5 * b13;
      t18 += v5 * b14;
      t19 += v5 * b15;
      v5 = a6[5];
      t5 += v5 * b02;
      t6 += v5 * b1;
      t7 += v5 * b22;
      t8 += v5 * b32;
      t9 += v5 * b42;
      t10 += v5 * b52;
      t11 += v5 * b6;
      t12 += v5 * b7;
      t13 += v5 * b8;
      t14 += v5 * b9;
      t15 += v5 * b10;
      t16 += v5 * b11;
      t17 += v5 * b12;
      t18 += v5 * b13;
      t19 += v5 * b14;
      t20 += v5 * b15;
      v5 = a6[6];
      t6 += v5 * b02;
      t7 += v5 * b1;
      t8 += v5 * b22;
      t9 += v5 * b32;
      t10 += v5 * b42;
      t11 += v5 * b52;
      t12 += v5 * b6;
      t13 += v5 * b7;
      t14 += v5 * b8;
      t15 += v5 * b9;
      t16 += v5 * b10;
      t17 += v5 * b11;
      t18 += v5 * b12;
      t19 += v5 * b13;
      t20 += v5 * b14;
      t21 += v5 * b15;
      v5 = a6[7];
      t7 += v5 * b02;
      t8 += v5 * b1;
      t9 += v5 * b22;
      t10 += v5 * b32;
      t11 += v5 * b42;
      t12 += v5 * b52;
      t13 += v5 * b6;
      t14 += v5 * b7;
      t15 += v5 * b8;
      t16 += v5 * b9;
      t17 += v5 * b10;
      t18 += v5 * b11;
      t19 += v5 * b12;
      t20 += v5 * b13;
      t21 += v5 * b14;
      t222 += v5 * b15;
      v5 = a6[8];
      t8 += v5 * b02;
      t9 += v5 * b1;
      t10 += v5 * b22;
      t11 += v5 * b32;
      t12 += v5 * b42;
      t13 += v5 * b52;
      t14 += v5 * b6;
      t15 += v5 * b7;
      t16 += v5 * b8;
      t17 += v5 * b9;
      t18 += v5 * b10;
      t19 += v5 * b11;
      t20 += v5 * b12;
      t21 += v5 * b13;
      t222 += v5 * b14;
      t23 += v5 * b15;
      v5 = a6[9];
      t9 += v5 * b02;
      t10 += v5 * b1;
      t11 += v5 * b22;
      t12 += v5 * b32;
      t13 += v5 * b42;
      t14 += v5 * b52;
      t15 += v5 * b6;
      t16 += v5 * b7;
      t17 += v5 * b8;
      t18 += v5 * b9;
      t19 += v5 * b10;
      t20 += v5 * b11;
      t21 += v5 * b12;
      t222 += v5 * b13;
      t23 += v5 * b14;
      t24 += v5 * b15;
      v5 = a6[10];
      t10 += v5 * b02;
      t11 += v5 * b1;
      t12 += v5 * b22;
      t13 += v5 * b32;
      t14 += v5 * b42;
      t15 += v5 * b52;
      t16 += v5 * b6;
      t17 += v5 * b7;
      t18 += v5 * b8;
      t19 += v5 * b9;
      t20 += v5 * b10;
      t21 += v5 * b11;
      t222 += v5 * b12;
      t23 += v5 * b13;
      t24 += v5 * b14;
      t25 += v5 * b15;
      v5 = a6[11];
      t11 += v5 * b02;
      t12 += v5 * b1;
      t13 += v5 * b22;
      t14 += v5 * b32;
      t15 += v5 * b42;
      t16 += v5 * b52;
      t17 += v5 * b6;
      t18 += v5 * b7;
      t19 += v5 * b8;
      t20 += v5 * b9;
      t21 += v5 * b10;
      t222 += v5 * b11;
      t23 += v5 * b12;
      t24 += v5 * b13;
      t25 += v5 * b14;
      t26 += v5 * b15;
      v5 = a6[12];
      t12 += v5 * b02;
      t13 += v5 * b1;
      t14 += v5 * b22;
      t15 += v5 * b32;
      t16 += v5 * b42;
      t17 += v5 * b52;
      t18 += v5 * b6;
      t19 += v5 * b7;
      t20 += v5 * b8;
      t21 += v5 * b9;
      t222 += v5 * b10;
      t23 += v5 * b11;
      t24 += v5 * b12;
      t25 += v5 * b13;
      t26 += v5 * b14;
      t27 += v5 * b15;
      v5 = a6[13];
      t13 += v5 * b02;
      t14 += v5 * b1;
      t15 += v5 * b22;
      t16 += v5 * b32;
      t17 += v5 * b42;
      t18 += v5 * b52;
      t19 += v5 * b6;
      t20 += v5 * b7;
      t21 += v5 * b8;
      t222 += v5 * b9;
      t23 += v5 * b10;
      t24 += v5 * b11;
      t25 += v5 * b12;
      t26 += v5 * b13;
      t27 += v5 * b14;
      t28 += v5 * b15;
      v5 = a6[14];
      t14 += v5 * b02;
      t15 += v5 * b1;
      t16 += v5 * b22;
      t17 += v5 * b32;
      t18 += v5 * b42;
      t19 += v5 * b52;
      t20 += v5 * b6;
      t21 += v5 * b7;
      t222 += v5 * b8;
      t23 += v5 * b9;
      t24 += v5 * b10;
      t25 += v5 * b11;
      t26 += v5 * b12;
      t27 += v5 * b13;
      t28 += v5 * b14;
      t29 += v5 * b15;
      v5 = a6[15];
      t15 += v5 * b02;
      t16 += v5 * b1;
      t17 += v5 * b22;
      t18 += v5 * b32;
      t19 += v5 * b42;
      t20 += v5 * b52;
      t21 += v5 * b6;
      t222 += v5 * b7;
      t23 += v5 * b8;
      t24 += v5 * b9;
      t25 += v5 * b10;
      t26 += v5 * b11;
      t27 += v5 * b12;
      t28 += v5 * b13;
      t29 += v5 * b14;
      t30 += v5 * b15;
      t0 += 38 * t16;
      t1 += 38 * t17;
      t22 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t222;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c7 = 1;
      v5 = t0 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t0 = v5 - c7 * 65536;
      v5 = t1 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t1 = v5 - c7 * 65536;
      v5 = t22 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t22 = v5 - c7 * 65536;
      v5 = t3 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t3 = v5 - c7 * 65536;
      v5 = t4 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t4 = v5 - c7 * 65536;
      v5 = t5 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t5 = v5 - c7 * 65536;
      v5 = t6 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t6 = v5 - c7 * 65536;
      v5 = t7 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t7 = v5 - c7 * 65536;
      v5 = t8 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t8 = v5 - c7 * 65536;
      v5 = t9 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t9 = v5 - c7 * 65536;
      v5 = t10 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t10 = v5 - c7 * 65536;
      v5 = t11 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t11 = v5 - c7 * 65536;
      v5 = t12 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t12 = v5 - c7 * 65536;
      v5 = t13 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t13 = v5 - c7 * 65536;
      v5 = t14 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t14 = v5 - c7 * 65536;
      v5 = t15 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t15 = v5 - c7 * 65536;
      t0 += c7 - 1 + 37 * (c7 - 1);
      c7 = 1;
      v5 = t0 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t0 = v5 - c7 * 65536;
      v5 = t1 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t1 = v5 - c7 * 65536;
      v5 = t22 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t22 = v5 - c7 * 65536;
      v5 = t3 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t3 = v5 - c7 * 65536;
      v5 = t4 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t4 = v5 - c7 * 65536;
      v5 = t5 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t5 = v5 - c7 * 65536;
      v5 = t6 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t6 = v5 - c7 * 65536;
      v5 = t7 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t7 = v5 - c7 * 65536;
      v5 = t8 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t8 = v5 - c7 * 65536;
      v5 = t9 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t9 = v5 - c7 * 65536;
      v5 = t10 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t10 = v5 - c7 * 65536;
      v5 = t11 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t11 = v5 - c7 * 65536;
      v5 = t12 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t12 = v5 - c7 * 65536;
      v5 = t13 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t13 = v5 - c7 * 65536;
      v5 = t14 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t14 = v5 - c7 * 65536;
      v5 = t15 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t15 = v5 - c7 * 65536;
      t0 += c7 - 1 + 37 * (c7 - 1);
      o6[0] = t0;
      o6[1] = t1;
      o6[2] = t22;
      o6[3] = t3;
      o6[4] = t4;
      o6[5] = t5;
      o6[6] = t6;
      o6[7] = t7;
      o6[8] = t8;
      o6[9] = t9;
      o6[10] = t10;
      o6[11] = t11;
      o6[12] = t12;
      o6[13] = t13;
      o6[14] = t14;
      o6[15] = t15;
    }
    function square(o6, a6) {
      mul(o6, a6, a6);
    }
    function inv25519(o6, i6) {
      const c7 = gf2();
      let a6;
      for (a6 = 0; a6 < 16; a6++) {
        c7[a6] = i6[a6];
      }
      for (a6 = 253; a6 >= 0; a6--) {
        square(c7, c7);
        if (a6 !== 2 && a6 !== 4) {
          mul(c7, c7, i6);
        }
      }
      for (a6 = 0; a6 < 16; a6++) {
        o6[a6] = c7[a6];
      }
    }
    function pow2523(o6, i6) {
      const c7 = gf2();
      let a6;
      for (a6 = 0; a6 < 16; a6++) {
        c7[a6] = i6[a6];
      }
      for (a6 = 250; a6 >= 0; a6--) {
        square(c7, c7);
        if (a6 !== 1) {
          mul(c7, c7, i6);
        }
      }
      for (a6 = 0; a6 < 16; a6++) {
        o6[a6] = c7[a6];
      }
    }
    function edadd(p5, q5) {
      const a6 = gf2(), b5 = gf2(), c7 = gf2(), d5 = gf2(), e4 = gf2(), f6 = gf2(), g5 = gf2(), h7 = gf2(), t3 = gf2();
      sub(a6, p5[1], p5[0]);
      sub(t3, q5[1], q5[0]);
      mul(a6, a6, t3);
      add(b5, p5[0], p5[1]);
      add(t3, q5[0], q5[1]);
      mul(b5, b5, t3);
      mul(c7, p5[3], q5[3]);
      mul(c7, c7, D22);
      mul(d5, p5[2], q5[2]);
      add(d5, d5, d5);
      sub(e4, b5, a6);
      sub(f6, d5, c7);
      add(g5, d5, c7);
      add(h7, b5, a6);
      mul(p5[0], e4, f6);
      mul(p5[1], h7, g5);
      mul(p5[2], g5, f6);
      mul(p5[3], e4, h7);
    }
    function cswap(p5, q5, b5) {
      for (let i6 = 0; i6 < 4; i6++) {
        sel25519(p5[i6], q5[i6], b5);
      }
    }
    function pack(r5, p5) {
      const tx = gf2(), ty = gf2(), zi2 = gf2();
      inv25519(zi2, p5[2]);
      mul(tx, p5[0], zi2);
      mul(ty, p5[1], zi2);
      pack25519(r5, ty);
      r5[31] ^= par25519(tx) << 7;
    }
    function scalarmult(p5, q5, s5) {
      set25519(p5[0], gf0);
      set25519(p5[1], gf1);
      set25519(p5[2], gf1);
      set25519(p5[3], gf0);
      for (let i6 = 255; i6 >= 0; --i6) {
        const b5 = s5[i6 / 8 | 0] >> (i6 & 7) & 1;
        cswap(p5, q5, b5);
        edadd(q5, p5);
        edadd(p5, p5);
        cswap(p5, q5, b5);
      }
    }
    function scalarbase(p5, s5) {
      const q5 = [gf2(), gf2(), gf2(), gf2()];
      set25519(q5[0], X3);
      set25519(q5[1], Y2);
      set25519(q5[2], gf1);
      mul(q5[3], X3, Y2);
      scalarmult(p5, q5, s5);
    }
    function generateKeyPairFromSeed2(seed) {
      if (seed.length !== exports.SEED_LENGTH) {
        throw new Error(`ed25519: seed must be ${exports.SEED_LENGTH} bytes`);
      }
      const d5 = (0, sha512_1.hash)(seed);
      d5[0] &= 248;
      d5[31] &= 127;
      d5[31] |= 64;
      const publicKey = new Uint8Array(32);
      const p5 = [gf2(), gf2(), gf2(), gf2()];
      scalarbase(p5, d5);
      pack(publicKey, p5);
      const secretKey = new Uint8Array(64);
      secretKey.set(seed);
      secretKey.set(publicKey, 32);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed2;
    function generateKeyPair3(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed2(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair3;
    function extractPublicKeyFromSecretKey(secretKey) {
      if (secretKey.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`ed25519: secret key must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      return new Uint8Array(secretKey.subarray(32));
    }
    exports.extractPublicKeyFromSecretKey = extractPublicKeyFromSecretKey;
    var L6 = new Float64Array([
      237,
      211,
      245,
      92,
      26,
      99,
      18,
      88,
      214,
      156,
      247,
      162,
      222,
      249,
      222,
      20,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      16
    ]);
    function modL(r5, x5) {
      let carry;
      let i6;
      let j6;
      let k5;
      for (i6 = 63; i6 >= 32; --i6) {
        carry = 0;
        for (j6 = i6 - 32, k5 = i6 - 12; j6 < k5; ++j6) {
          x5[j6] += carry - 16 * x5[i6] * L6[j6 - (i6 - 32)];
          carry = Math.floor((x5[j6] + 128) / 256);
          x5[j6] -= carry * 256;
        }
        x5[j6] += carry;
        x5[i6] = 0;
      }
      carry = 0;
      for (j6 = 0; j6 < 32; j6++) {
        x5[j6] += carry - (x5[31] >> 4) * L6[j6];
        carry = x5[j6] >> 8;
        x5[j6] &= 255;
      }
      for (j6 = 0; j6 < 32; j6++) {
        x5[j6] -= carry * L6[j6];
      }
      for (i6 = 0; i6 < 32; i6++) {
        x5[i6 + 1] += x5[i6] >> 8;
        r5[i6] = x5[i6] & 255;
      }
    }
    function reduce(r5) {
      const x5 = new Float64Array(64);
      for (let i6 = 0; i6 < 64; i6++) {
        x5[i6] = r5[i6];
      }
      for (let i6 = 0; i6 < 64; i6++) {
        r5[i6] = 0;
      }
      modL(r5, x5);
    }
    function sign2(secretKey, message) {
      const x5 = new Float64Array(64);
      const p5 = [gf2(), gf2(), gf2(), gf2()];
      const d5 = (0, sha512_1.hash)(secretKey.subarray(0, 32));
      d5[0] &= 248;
      d5[31] &= 127;
      d5[31] |= 64;
      const signature = new Uint8Array(64);
      signature.set(d5.subarray(32), 32);
      const hs3 = new sha512_1.SHA512();
      hs3.update(signature.subarray(32));
      hs3.update(message);
      const r5 = hs3.digest();
      hs3.clean();
      reduce(r5);
      scalarbase(p5, r5);
      pack(signature, p5);
      hs3.reset();
      hs3.update(signature.subarray(0, 32));
      hs3.update(secretKey.subarray(32));
      hs3.update(message);
      const h7 = hs3.digest();
      reduce(h7);
      for (let i6 = 0; i6 < 32; i6++) {
        x5[i6] = r5[i6];
      }
      for (let i6 = 0; i6 < 32; i6++) {
        for (let j6 = 0; j6 < 32; j6++) {
          x5[i6 + j6] += h7[i6] * d5[j6];
        }
      }
      modL(signature.subarray(32), x5);
      return signature;
    }
    exports.sign = sign2;
    function unpackneg(r5, p5) {
      const t3 = gf2(), chk = gf2(), num = gf2(), den = gf2(), den2 = gf2(), den4 = gf2(), den6 = gf2();
      set25519(r5[2], gf1);
      unpack25519(r5[1], p5);
      square(num, r5[1]);
      mul(den, num, D5);
      sub(num, num, r5[2]);
      add(den, r5[2], den);
      square(den2, den);
      square(den4, den2);
      mul(den6, den4, den2);
      mul(t3, den6, num);
      mul(t3, t3, den);
      pow2523(t3, t3);
      mul(t3, t3, num);
      mul(t3, t3, den);
      mul(t3, t3, den);
      mul(r5[0], t3, den);
      square(chk, r5[0]);
      mul(chk, chk, den);
      if (neq25519(chk, num)) {
        mul(r5[0], r5[0], I5);
      }
      square(chk, r5[0]);
      mul(chk, chk, den);
      if (neq25519(chk, num)) {
        return -1;
      }
      if (par25519(r5[0]) === p5[31] >> 7) {
        sub(r5[0], gf0, r5[0]);
      }
      mul(r5[3], r5[0], r5[1]);
      return 0;
    }
    function verify2(publicKey, message, signature) {
      const t3 = new Uint8Array(32);
      const p5 = [gf2(), gf2(), gf2(), gf2()];
      const q5 = [gf2(), gf2(), gf2(), gf2()];
      if (signature.length !== exports.SIGNATURE_LENGTH) {
        throw new Error(`ed25519: signature must be ${exports.SIGNATURE_LENGTH} bytes`);
      }
      if (unpackneg(q5, publicKey)) {
        return false;
      }
      const hs3 = new sha512_1.SHA512();
      hs3.update(signature.subarray(0, 32));
      hs3.update(publicKey);
      hs3.update(message);
      const h7 = hs3.digest();
      reduce(h7);
      scalarmult(p5, q5, h7);
      scalarbase(q5, signature.subarray(32));
      edadd(p5, q5);
      pack(t3, p5);
      if (verify32(signature, t3)) {
        return false;
      }
      return true;
    }
    exports.verify = verify2;
    function convertPublicKeyToX25519(publicKey) {
      let q5 = [gf2(), gf2(), gf2(), gf2()];
      if (unpackneg(q5, publicKey)) {
        throw new Error("Ed25519: invalid public key");
      }
      let a6 = gf2();
      let b5 = gf2();
      let y8 = q5[1];
      add(a6, gf1, y8);
      sub(b5, gf1, y8);
      inv25519(b5, b5);
      mul(a6, a6, b5);
      let z6 = new Uint8Array(32);
      pack25519(z6, a6);
      return z6;
    }
    exports.convertPublicKeyToX25519 = convertPublicKeyToX25519;
    function convertSecretKeyToX25519(secretKey) {
      const d5 = (0, sha512_1.hash)(secretKey.subarray(0, 32));
      d5[0] &= 248;
      d5[31] &= 127;
      d5[31] |= 64;
      const o6 = new Uint8Array(d5.subarray(0, 32));
      (0, wipe_1.wipe)(d5);
      return o6;
    }
    exports.convertSecretKeyToX25519 = convertSecretKeyToX25519;
  }
});

// node_modules/@walletconnect/utils/node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs5 = __commonJS({
  "node_modules/@walletconnect/utils/node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow3(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow3;
    function getFromWindowOrThrow3(name2) {
      const res = getFromWindow3(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow3;
    function getDocumentOrThrow3() {
      return getFromWindowOrThrow3("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow3;
    function getDocument3() {
      return getFromWindow3("document");
    }
    exports.getDocument = getDocument3;
    function getNavigatorOrThrow3() {
      return getFromWindowOrThrow3("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow3;
    function getNavigator3() {
      return getFromWindow3("navigator");
    }
    exports.getNavigator = getNavigator3;
    function getLocationOrThrow3() {
      return getFromWindowOrThrow3("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow3;
    function getLocation3() {
      return getFromWindow3("location");
    }
    exports.getLocation = getLocation3;
    function getCryptoOrThrow3() {
      return getFromWindowOrThrow3("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow3;
    function getCrypto3() {
      return getFromWindow3("crypto");
    }
    exports.getCrypto = getCrypto3;
    function getLocalStorageOrThrow3() {
      return getFromWindowOrThrow3("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow3;
    function getLocalStorage3() {
      return getFromWindow3("localStorage");
    }
    exports.getLocalStorage = getLocalStorage3;
  }
});

// node_modules/@walletconnect/utils/node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs6 = __commonJS({
  "node_modules/@walletconnect/utils/node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs5();
    function getWindowMetadata2() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e4) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i6 = 0; i6 < links.length; i6++) {
          const link = links[i6];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i6 = 0; i6 < metaTags.length; i6++) {
          const tag = metaTags[i6];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name3 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name3) {
          name3 = doc.title;
        }
        return name3;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name2 = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name: name2
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata2;
  }
});

// node_modules/strict-uri-encode/index.js
var require_strict_uri_encode = __commonJS({
  "node_modules/strict-uri-encode/index.js"(exports, module) {
    "use strict";
    module.exports = (str) => encodeURIComponent(str).replace(/[!'()*]/g, (x5) => `%${x5.charCodeAt(0).toString(16).toUpperCase()}`);
  }
});

// node_modules/decode-uri-component/index.js
var require_decode_uri_component = __commonJS({
  "node_modules/decode-uri-component/index.js"(exports, module) {
    "use strict";
    var token = "%[a-f0-9]{2}";
    var singleMatcher = new RegExp("(" + token + ")|([^%]+?)", "gi");
    var multiMatcher = new RegExp("(" + token + ")+", "gi");
    function decodeComponents(components, split) {
      try {
        return [decodeURIComponent(components.join(""))];
      } catch (err) {
      }
      if (components.length === 1) {
        return components;
      }
      split = split || 1;
      var left = components.slice(0, split);
      var right = components.slice(split);
      return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
    }
    function decode6(input) {
      try {
        return decodeURIComponent(input);
      } catch (err) {
        var tokens = input.match(singleMatcher) || [];
        for (var i6 = 1; i6 < tokens.length; i6++) {
          input = decodeComponents(tokens, i6).join("");
          tokens = input.match(singleMatcher) || [];
        }
        return input;
      }
    }
    function customDecodeURIComponent(input) {
      var replaceMap = {
        "%FE%FF": "��",
        "%FF%FE": "��"
      };
      var match = multiMatcher.exec(input);
      while (match) {
        try {
          replaceMap[match[0]] = decodeURIComponent(match[0]);
        } catch (err) {
          var result = decode6(match[0]);
          if (result !== match[0]) {
            replaceMap[match[0]] = result;
          }
        }
        match = multiMatcher.exec(input);
      }
      replaceMap["%C2"] = "�";
      var entries = Object.keys(replaceMap);
      for (var i6 = 0; i6 < entries.length; i6++) {
        var key = entries[i6];
        input = input.replace(new RegExp(key, "g"), replaceMap[key]);
      }
      return input;
    }
    module.exports = function(encodedURI) {
      if (typeof encodedURI !== "string") {
        throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
      }
      try {
        encodedURI = encodedURI.replace(/\+/g, " ");
        return decodeURIComponent(encodedURI);
      } catch (err) {
        return customDecodeURIComponent(encodedURI);
      }
    };
  }
});

// node_modules/split-on-first/index.js
var require_split_on_first = __commonJS({
  "node_modules/split-on-first/index.js"(exports, module) {
    "use strict";
    module.exports = (string2, separator) => {
      if (!(typeof string2 === "string" && typeof separator === "string")) {
        throw new TypeError("Expected the arguments to be of type `string`");
      }
      if (separator === "") {
        return [string2];
      }
      const separatorIndex = string2.indexOf(separator);
      if (separatorIndex === -1) {
        return [string2];
      }
      return [
        string2.slice(0, separatorIndex),
        string2.slice(separatorIndex + separator.length)
      ];
    };
  }
});

// node_modules/filter-obj/index.js
var require_filter_obj = __commonJS({
  "node_modules/filter-obj/index.js"(exports, module) {
    "use strict";
    module.exports = function(obj, predicate) {
      var ret = {};
      var keys2 = Object.keys(obj);
      var isArr = Array.isArray(predicate);
      for (var i6 = 0; i6 < keys2.length; i6++) {
        var key = keys2[i6];
        var val = obj[key];
        if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
          ret[key] = val;
        }
      }
      return ret;
    };
  }
});

// node_modules/query-string/index.js
var require_query_string = __commonJS({
  "node_modules/query-string/index.js"(exports) {
    "use strict";
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component();
    var splitOnFirst = require_split_on_first();
    var filterObject = require_filter_obj();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode5(key, options), "[", encode5(index, options), "]=", encode5(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[]"].join("")];
            }
            return [...result, [encode5(key, options), "[]=", encode5(value, options)].join("")];
          };
        case "colon-list-separator":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), ":list="].join("")];
            }
            return [...result, [encode5(key, options), ":list=", encode5(value, options)].join("")];
          };
        case "comma":
        case "separator":
        case "bracket-separator": {
          const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            value = value === null ? "" : value;
            if (result.length === 0) {
              return [[encode5(key, options), keyValueSep, encode5(value, options)].join("")];
            }
            return [[result, encode5(value, options)].join(options.arrayFormatSeparator)];
          };
        }
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode5(key, options)];
            }
            return [...result, [encode5(key, options), "=", encode5(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "colon-list-separator":
          return (key, value, accumulator) => {
            result = /(:list)$/.exec(key);
            key = key.replace(/:list$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
            const isEncodedArray = typeof value === "string" && !isArray && decode6(value, options).includes(options.arrayFormatSeparator);
            value = isEncodedArray ? decode6(value, options) : value;
            const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item) => decode6(item, options)) : value === null ? value : decode6(value, options);
            accumulator[key] = newValue;
          };
        case "bracket-separator":
          return (key, value, accumulator) => {
            const isArray = /(\[\])$/.test(key);
            key = key.replace(/\[\]$/, "");
            if (!isArray) {
              accumulator[key] = value ? decode6(value, options) : value;
              return;
            }
            const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item) => decode6(item, options));
            if (accumulator[key] === void 0) {
              accumulator[key] = arrayValue;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], arrayValue);
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode5(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode6(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a6, b5) => Number(a6) - Number(b5)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse2(query, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof query !== "string") {
        return ret;
      }
      query = query.trim().replace(/^[?#&]/, "");
      if (!query) {
        return ret;
      }
      for (const param of query.split("&")) {
        if (param === "") {
          continue;
        }
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value : decode6(value, options);
        formatter(decode6(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k5 of Object.keys(value)) {
            value[k5] = parseValue(value[k5], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse2;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys2 = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys2.sort(options.sort);
      }
      return keys2.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode5(key, options);
        }
        if (Array.isArray(value)) {
          if (value.length === 0 && options.arrayFormat === "bracket-separator") {
            return encode5(key, options) + "[]";
          }
          return value.reduce(formatter(key), []).join("&");
        }
        return encode5(key, options) + "=" + encode5(value, options);
      }).filter((x5) => x5.length > 0).join("&");
    };
    exports.parseUrl = (url, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url_, hash] = splitOnFirst(url, "#");
      return Object.assign(
        {
          url: url_.split("?")[0] || "",
          query: parse2(extract(url), options)
        },
        options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode6(hash, options) } : {}
      );
    };
    exports.stringifyUrl = (object, options) => {
      options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
      }, options);
      const url = removeHash(object.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(object.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, object.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(object.url);
      if (object.fragmentIdentifier) {
        hash = `#${options[encodeFragmentIdentifier] ? encode5(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
      }
      return `${url}${queryString}${hash}`;
    };
    exports.pick = (input, filter, options) => {
      options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
      }, options);
      const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
      return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
      }, options);
    };
    exports.exclude = (input, filter, options) => {
      const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value) => !filter(key, value);
      return exports.pick(input, exclusionFilter, options);
    };
  }
});

// node_modules/@stablelib/chacha/lib/chacha.js
var require_chacha = __commonJS({
  "node_modules/@stablelib/chacha/lib/chacha.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    var ROUNDS = 20;
    function core(out, input, key) {
      var j02 = 1634760805;
      var j1 = 857760878;
      var j22 = 2036477234;
      var j32 = 1797285236;
      var j42 = key[3] << 24 | key[2] << 16 | key[1] << 8 | key[0];
      var j52 = key[7] << 24 | key[6] << 16 | key[5] << 8 | key[4];
      var j6 = key[11] << 24 | key[10] << 16 | key[9] << 8 | key[8];
      var j7 = key[15] << 24 | key[14] << 16 | key[13] << 8 | key[12];
      var j8 = key[19] << 24 | key[18] << 16 | key[17] << 8 | key[16];
      var j9 = key[23] << 24 | key[22] << 16 | key[21] << 8 | key[20];
      var j10 = key[27] << 24 | key[26] << 16 | key[25] << 8 | key[24];
      var j11 = key[31] << 24 | key[30] << 16 | key[29] << 8 | key[28];
      var j12 = input[3] << 24 | input[2] << 16 | input[1] << 8 | input[0];
      var j13 = input[7] << 24 | input[6] << 16 | input[5] << 8 | input[4];
      var j14 = input[11] << 24 | input[10] << 16 | input[9] << 8 | input[8];
      var j15 = input[15] << 24 | input[14] << 16 | input[13] << 8 | input[12];
      var x02 = j02;
      var x1 = j1;
      var x22 = j22;
      var x32 = j32;
      var x42 = j42;
      var x5 = j52;
      var x6 = j6;
      var x7 = j7;
      var x8 = j8;
      var x9 = j9;
      var x10 = j10;
      var x11 = j11;
      var x12 = j12;
      var x13 = j13;
      var x14 = j14;
      var x15 = j15;
      for (var i6 = 0; i6 < ROUNDS; i6 += 2) {
        x02 = x02 + x42 | 0;
        x12 ^= x02;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x8 = x8 + x12 | 0;
        x42 ^= x8;
        x42 = x42 >>> 32 - 12 | x42 << 12;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x32 = x32 + x7 | 0;
        x15 ^= x32;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x32 = x32 + x7 | 0;
        x15 ^= x32;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 7 | x5 << 7;
        x02 = x02 + x42 | 0;
        x12 ^= x02;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x8 = x8 + x12 | 0;
        x42 ^= x8;
        x42 = x42 >>> 32 - 7 | x42 << 7;
        x02 = x02 + x5 | 0;
        x15 ^= x02;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x32 = x32 + x42 | 0;
        x14 ^= x32;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x9 = x9 + x14 | 0;
        x42 ^= x9;
        x42 = x42 >>> 32 - 12 | x42 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x32 = x32 + x42 | 0;
        x14 ^= x32;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x9 = x9 + x14 | 0;
        x42 ^= x9;
        x42 = x42 >>> 32 - 7 | x42 << 7;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x02 = x02 + x5 | 0;
        x15 ^= x02;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 7 | x5 << 7;
      }
      binary_1.writeUint32LE(x02 + j02 | 0, out, 0);
      binary_1.writeUint32LE(x1 + j1 | 0, out, 4);
      binary_1.writeUint32LE(x22 + j22 | 0, out, 8);
      binary_1.writeUint32LE(x32 + j32 | 0, out, 12);
      binary_1.writeUint32LE(x42 + j42 | 0, out, 16);
      binary_1.writeUint32LE(x5 + j52 | 0, out, 20);
      binary_1.writeUint32LE(x6 + j6 | 0, out, 24);
      binary_1.writeUint32LE(x7 + j7 | 0, out, 28);
      binary_1.writeUint32LE(x8 + j8 | 0, out, 32);
      binary_1.writeUint32LE(x9 + j9 | 0, out, 36);
      binary_1.writeUint32LE(x10 + j10 | 0, out, 40);
      binary_1.writeUint32LE(x11 + j11 | 0, out, 44);
      binary_1.writeUint32LE(x12 + j12 | 0, out, 48);
      binary_1.writeUint32LE(x13 + j13 | 0, out, 52);
      binary_1.writeUint32LE(x14 + j14 | 0, out, 56);
      binary_1.writeUint32LE(x15 + j15 | 0, out, 60);
    }
    function streamXOR(key, nonce, src2, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      if (key.length !== 32) {
        throw new Error("ChaCha: key size must be 32 bytes");
      }
      if (dst.length < src2.length) {
        throw new Error("ChaCha: destination is shorter than source");
      }
      var nc;
      var counterLength;
      if (nonceInplaceCounterLength === 0) {
        if (nonce.length !== 8 && nonce.length !== 12) {
          throw new Error("ChaCha nonce must be 8 or 12 bytes");
        }
        nc = new Uint8Array(16);
        counterLength = nc.length - nonce.length;
        nc.set(nonce, counterLength);
      } else {
        if (nonce.length !== 16) {
          throw new Error("ChaCha nonce with counter must be 16 bytes");
        }
        nc = nonce;
        counterLength = nonceInplaceCounterLength;
      }
      var block = new Uint8Array(64);
      for (var i6 = 0; i6 < src2.length; i6 += 64) {
        core(block, nc, key);
        for (var j6 = i6; j6 < i6 + 64 && j6 < src2.length; j6++) {
          dst[j6] = src2[j6] ^ block[j6 - i6];
        }
        incrementCounter(nc, 0, counterLength);
      }
      wipe_1.wipe(block);
      if (nonceInplaceCounterLength === 0) {
        wipe_1.wipe(nc);
      }
      return dst;
    }
    exports.streamXOR = streamXOR;
    function stream(key, nonce, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      wipe_1.wipe(dst);
      return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);
    }
    exports.stream = stream;
    function incrementCounter(counter, pos, len) {
      var carry = 1;
      while (len--) {
        carry = carry + (counter[pos] & 255) | 0;
        counter[pos] = carry & 255;
        carry >>>= 8;
        pos++;
      }
      if (carry > 0) {
        throw new Error("ChaCha: counter overflow");
      }
    }
  }
});

// node_modules/@stablelib/constant-time/lib/constant-time.js
var require_constant_time = __commonJS({
  "node_modules/@stablelib/constant-time/lib/constant-time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function select(subject, resultIfOne, resultIfZero) {
      return ~(subject - 1) & resultIfOne | subject - 1 & resultIfZero;
    }
    exports.select = select;
    function lessOrEqual(a6, b5) {
      return (a6 | 0) - (b5 | 0) - 1 >>> 31 & 1;
    }
    exports.lessOrEqual = lessOrEqual;
    function compare2(a6, b5) {
      if (a6.length !== b5.length) {
        return 0;
      }
      var result = 0;
      for (var i6 = 0; i6 < a6.length; i6++) {
        result |= a6[i6] ^ b5[i6];
      }
      return 1 & result - 1 >>> 8;
    }
    exports.compare = compare2;
    function equal(a6, b5) {
      if (a6.length === 0 || b5.length === 0) {
        return false;
      }
      return compare2(a6, b5) !== 0;
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/poly1305/lib/poly1305.js
var require_poly1305 = __commonJS({
  "node_modules/@stablelib/poly1305/lib/poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 16;
    var Poly1305 = (
      /** @class */
      function() {
        function Poly13052(key) {
          this.digestLength = exports.DIGEST_LENGTH;
          this._buffer = new Uint8Array(16);
          this._r = new Uint16Array(10);
          this._h = new Uint16Array(10);
          this._pad = new Uint16Array(8);
          this._leftover = 0;
          this._fin = 0;
          this._finished = false;
          var t0 = key[0] | key[1] << 8;
          this._r[0] = t0 & 8191;
          var t1 = key[2] | key[3] << 8;
          this._r[1] = (t0 >>> 13 | t1 << 3) & 8191;
          var t22 = key[4] | key[5] << 8;
          this._r[2] = (t1 >>> 10 | t22 << 6) & 7939;
          var t3 = key[6] | key[7] << 8;
          this._r[3] = (t22 >>> 7 | t3 << 9) & 8191;
          var t4 = key[8] | key[9] << 8;
          this._r[4] = (t3 >>> 4 | t4 << 12) & 255;
          this._r[5] = t4 >>> 1 & 8190;
          var t5 = key[10] | key[11] << 8;
          this._r[6] = (t4 >>> 14 | t5 << 2) & 8191;
          var t6 = key[12] | key[13] << 8;
          this._r[7] = (t5 >>> 11 | t6 << 5) & 8065;
          var t7 = key[14] | key[15] << 8;
          this._r[8] = (t6 >>> 8 | t7 << 8) & 8191;
          this._r[9] = t7 >>> 5 & 127;
          this._pad[0] = key[16] | key[17] << 8;
          this._pad[1] = key[18] | key[19] << 8;
          this._pad[2] = key[20] | key[21] << 8;
          this._pad[3] = key[22] | key[23] << 8;
          this._pad[4] = key[24] | key[25] << 8;
          this._pad[5] = key[26] | key[27] << 8;
          this._pad[6] = key[28] | key[29] << 8;
          this._pad[7] = key[30] | key[31] << 8;
        }
        Poly13052.prototype._blocks = function(m5, mpos, bytes) {
          var hibit = this._fin ? 0 : 1 << 11;
          var h02 = this._h[0], h1 = this._h[1], h22 = this._h[2], h32 = this._h[3], h42 = this._h[4], h52 = this._h[5], h62 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];
          var r0 = this._r[0], r1 = this._r[1], r22 = this._r[2], r32 = this._r[3], r42 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];
          while (bytes >= 16) {
            var t0 = m5[mpos + 0] | m5[mpos + 1] << 8;
            h02 += t0 & 8191;
            var t1 = m5[mpos + 2] | m5[mpos + 3] << 8;
            h1 += (t0 >>> 13 | t1 << 3) & 8191;
            var t22 = m5[mpos + 4] | m5[mpos + 5] << 8;
            h22 += (t1 >>> 10 | t22 << 6) & 8191;
            var t3 = m5[mpos + 6] | m5[mpos + 7] << 8;
            h32 += (t22 >>> 7 | t3 << 9) & 8191;
            var t4 = m5[mpos + 8] | m5[mpos + 9] << 8;
            h42 += (t3 >>> 4 | t4 << 12) & 8191;
            h52 += t4 >>> 1 & 8191;
            var t5 = m5[mpos + 10] | m5[mpos + 11] << 8;
            h62 += (t4 >>> 14 | t5 << 2) & 8191;
            var t6 = m5[mpos + 12] | m5[mpos + 13] << 8;
            h7 += (t5 >>> 11 | t6 << 5) & 8191;
            var t7 = m5[mpos + 14] | m5[mpos + 15] << 8;
            h8 += (t6 >>> 8 | t7 << 8) & 8191;
            h9 += t7 >>> 5 | hibit;
            var c7 = 0;
            var d02 = c7;
            d02 += h02 * r0;
            d02 += h1 * (5 * r9);
            d02 += h22 * (5 * r8);
            d02 += h32 * (5 * r7);
            d02 += h42 * (5 * r6);
            c7 = d02 >>> 13;
            d02 &= 8191;
            d02 += h52 * (5 * r5);
            d02 += h62 * (5 * r42);
            d02 += h7 * (5 * r32);
            d02 += h8 * (5 * r22);
            d02 += h9 * (5 * r1);
            c7 += d02 >>> 13;
            d02 &= 8191;
            var d1 = c7;
            d1 += h02 * r1;
            d1 += h1 * r0;
            d1 += h22 * (5 * r9);
            d1 += h32 * (5 * r8);
            d1 += h42 * (5 * r7);
            c7 = d1 >>> 13;
            d1 &= 8191;
            d1 += h52 * (5 * r6);
            d1 += h62 * (5 * r5);
            d1 += h7 * (5 * r42);
            d1 += h8 * (5 * r32);
            d1 += h9 * (5 * r22);
            c7 += d1 >>> 13;
            d1 &= 8191;
            var d22 = c7;
            d22 += h02 * r22;
            d22 += h1 * r1;
            d22 += h22 * r0;
            d22 += h32 * (5 * r9);
            d22 += h42 * (5 * r8);
            c7 = d22 >>> 13;
            d22 &= 8191;
            d22 += h52 * (5 * r7);
            d22 += h62 * (5 * r6);
            d22 += h7 * (5 * r5);
            d22 += h8 * (5 * r42);
            d22 += h9 * (5 * r32);
            c7 += d22 >>> 13;
            d22 &= 8191;
            var d32 = c7;
            d32 += h02 * r32;
            d32 += h1 * r22;
            d32 += h22 * r1;
            d32 += h32 * r0;
            d32 += h42 * (5 * r9);
            c7 = d32 >>> 13;
            d32 &= 8191;
            d32 += h52 * (5 * r8);
            d32 += h62 * (5 * r7);
            d32 += h7 * (5 * r6);
            d32 += h8 * (5 * r5);
            d32 += h9 * (5 * r42);
            c7 += d32 >>> 13;
            d32 &= 8191;
            var d42 = c7;
            d42 += h02 * r42;
            d42 += h1 * r32;
            d42 += h22 * r22;
            d42 += h32 * r1;
            d42 += h42 * r0;
            c7 = d42 >>> 13;
            d42 &= 8191;
            d42 += h52 * (5 * r9);
            d42 += h62 * (5 * r8);
            d42 += h7 * (5 * r7);
            d42 += h8 * (5 * r6);
            d42 += h9 * (5 * r5);
            c7 += d42 >>> 13;
            d42 &= 8191;
            var d5 = c7;
            d5 += h02 * r5;
            d5 += h1 * r42;
            d5 += h22 * r32;
            d5 += h32 * r22;
            d5 += h42 * r1;
            c7 = d5 >>> 13;
            d5 &= 8191;
            d5 += h52 * r0;
            d5 += h62 * (5 * r9);
            d5 += h7 * (5 * r8);
            d5 += h8 * (5 * r7);
            d5 += h9 * (5 * r6);
            c7 += d5 >>> 13;
            d5 &= 8191;
            var d6 = c7;
            d6 += h02 * r6;
            d6 += h1 * r5;
            d6 += h22 * r42;
            d6 += h32 * r32;
            d6 += h42 * r22;
            c7 = d6 >>> 13;
            d6 &= 8191;
            d6 += h52 * r1;
            d6 += h62 * r0;
            d6 += h7 * (5 * r9);
            d6 += h8 * (5 * r8);
            d6 += h9 * (5 * r7);
            c7 += d6 >>> 13;
            d6 &= 8191;
            var d7 = c7;
            d7 += h02 * r7;
            d7 += h1 * r6;
            d7 += h22 * r5;
            d7 += h32 * r42;
            d7 += h42 * r32;
            c7 = d7 >>> 13;
            d7 &= 8191;
            d7 += h52 * r22;
            d7 += h62 * r1;
            d7 += h7 * r0;
            d7 += h8 * (5 * r9);
            d7 += h9 * (5 * r8);
            c7 += d7 >>> 13;
            d7 &= 8191;
            var d8 = c7;
            d8 += h02 * r8;
            d8 += h1 * r7;
            d8 += h22 * r6;
            d8 += h32 * r5;
            d8 += h42 * r42;
            c7 = d8 >>> 13;
            d8 &= 8191;
            d8 += h52 * r32;
            d8 += h62 * r22;
            d8 += h7 * r1;
            d8 += h8 * r0;
            d8 += h9 * (5 * r9);
            c7 += d8 >>> 13;
            d8 &= 8191;
            var d9 = c7;
            d9 += h02 * r9;
            d9 += h1 * r8;
            d9 += h22 * r7;
            d9 += h32 * r6;
            d9 += h42 * r5;
            c7 = d9 >>> 13;
            d9 &= 8191;
            d9 += h52 * r42;
            d9 += h62 * r32;
            d9 += h7 * r22;
            d9 += h8 * r1;
            d9 += h9 * r0;
            c7 += d9 >>> 13;
            d9 &= 8191;
            c7 = (c7 << 2) + c7 | 0;
            c7 = c7 + d02 | 0;
            d02 = c7 & 8191;
            c7 = c7 >>> 13;
            d1 += c7;
            h02 = d02;
            h1 = d1;
            h22 = d22;
            h32 = d32;
            h42 = d42;
            h52 = d5;
            h62 = d6;
            h7 = d7;
            h8 = d8;
            h9 = d9;
            mpos += 16;
            bytes -= 16;
          }
          this._h[0] = h02;
          this._h[1] = h1;
          this._h[2] = h22;
          this._h[3] = h32;
          this._h[4] = h42;
          this._h[5] = h52;
          this._h[6] = h62;
          this._h[7] = h7;
          this._h[8] = h8;
          this._h[9] = h9;
        };
        Poly13052.prototype.finish = function(mac, macpos) {
          if (macpos === void 0) {
            macpos = 0;
          }
          var g5 = new Uint16Array(10);
          var c7;
          var mask;
          var f6;
          var i6;
          if (this._leftover) {
            i6 = this._leftover;
            this._buffer[i6++] = 1;
            for (; i6 < 16; i6++) {
              this._buffer[i6] = 0;
            }
            this._fin = 1;
            this._blocks(this._buffer, 0, 16);
          }
          c7 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          for (i6 = 2; i6 < 10; i6++) {
            this._h[i6] += c7;
            c7 = this._h[i6] >>> 13;
            this._h[i6] &= 8191;
          }
          this._h[0] += c7 * 5;
          c7 = this._h[0] >>> 13;
          this._h[0] &= 8191;
          this._h[1] += c7;
          c7 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          this._h[2] += c7;
          g5[0] = this._h[0] + 5;
          c7 = g5[0] >>> 13;
          g5[0] &= 8191;
          for (i6 = 1; i6 < 10; i6++) {
            g5[i6] = this._h[i6] + c7;
            c7 = g5[i6] >>> 13;
            g5[i6] &= 8191;
          }
          g5[9] -= 1 << 13;
          mask = (c7 ^ 1) - 1;
          for (i6 = 0; i6 < 10; i6++) {
            g5[i6] &= mask;
          }
          mask = ~mask;
          for (i6 = 0; i6 < 10; i6++) {
            this._h[i6] = this._h[i6] & mask | g5[i6];
          }
          this._h[0] = (this._h[0] | this._h[1] << 13) & 65535;
          this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535;
          this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535;
          this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535;
          this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535;
          this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535;
          this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535;
          this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535;
          f6 = this._h[0] + this._pad[0];
          this._h[0] = f6 & 65535;
          for (i6 = 1; i6 < 8; i6++) {
            f6 = (this._h[i6] + this._pad[i6] | 0) + (f6 >>> 16) | 0;
            this._h[i6] = f6 & 65535;
          }
          mac[macpos + 0] = this._h[0] >>> 0;
          mac[macpos + 1] = this._h[0] >>> 8;
          mac[macpos + 2] = this._h[1] >>> 0;
          mac[macpos + 3] = this._h[1] >>> 8;
          mac[macpos + 4] = this._h[2] >>> 0;
          mac[macpos + 5] = this._h[2] >>> 8;
          mac[macpos + 6] = this._h[3] >>> 0;
          mac[macpos + 7] = this._h[3] >>> 8;
          mac[macpos + 8] = this._h[4] >>> 0;
          mac[macpos + 9] = this._h[4] >>> 8;
          mac[macpos + 10] = this._h[5] >>> 0;
          mac[macpos + 11] = this._h[5] >>> 8;
          mac[macpos + 12] = this._h[6] >>> 0;
          mac[macpos + 13] = this._h[6] >>> 8;
          mac[macpos + 14] = this._h[7] >>> 0;
          mac[macpos + 15] = this._h[7] >>> 8;
          this._finished = true;
          return this;
        };
        Poly13052.prototype.update = function(m5) {
          var mpos = 0;
          var bytes = m5.length;
          var want;
          if (this._leftover) {
            want = 16 - this._leftover;
            if (want > bytes) {
              want = bytes;
            }
            for (var i6 = 0; i6 < want; i6++) {
              this._buffer[this._leftover + i6] = m5[mpos + i6];
            }
            bytes -= want;
            mpos += want;
            this._leftover += want;
            if (this._leftover < 16) {
              return this;
            }
            this._blocks(this._buffer, 0, 16);
            this._leftover = 0;
          }
          if (bytes >= 16) {
            want = bytes - bytes % 16;
            this._blocks(m5, mpos, want);
            mpos += want;
            bytes -= want;
          }
          if (bytes) {
            for (var i6 = 0; i6 < bytes; i6++) {
              this._buffer[this._leftover + i6] = m5[mpos + i6];
            }
            this._leftover += bytes;
          }
          return this;
        };
        Poly13052.prototype.digest = function() {
          if (this._finished) {
            throw new Error("Poly1305 was finished");
          }
          var mac = new Uint8Array(16);
          this.finish(mac);
          return mac;
        };
        Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._r);
          wipe_1.wipe(this._h);
          wipe_1.wipe(this._pad);
          this._leftover = 0;
          this._fin = 0;
          this._finished = true;
          return this;
        };
        return Poly13052;
      }()
    );
    exports.Poly1305 = Poly1305;
    function oneTimeAuth(key, data) {
      var h7 = new Poly1305(key);
      h7.update(data);
      var digest2 = h7.digest();
      h7.clean();
      return digest2;
    }
    exports.oneTimeAuth = oneTimeAuth;
    function equal(a6, b5) {
      if (a6.length !== exports.DIGEST_LENGTH || b5.length !== exports.DIGEST_LENGTH) {
        return false;
      }
      return constant_time_1.equal(a6, b5);
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js
var require_chacha20poly1305 = __commonJS({
  "node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var chacha_1 = require_chacha();
    var poly1305_1 = require_poly1305();
    var wipe_1 = require_wipe();
    var binary_1 = require_binary();
    var constant_time_1 = require_constant_time();
    exports.KEY_LENGTH = 32;
    exports.NONCE_LENGTH = 12;
    exports.TAG_LENGTH = 16;
    var ZEROS = new Uint8Array(16);
    var ChaCha20Poly1305 = (
      /** @class */
      function() {
        function ChaCha20Poly13052(key) {
          this.nonceLength = exports.NONCE_LENGTH;
          this.tagLength = exports.TAG_LENGTH;
          if (key.length !== exports.KEY_LENGTH) {
            throw new Error("ChaCha20Poly1305 needs 32-byte key");
          }
          this._key = new Uint8Array(key);
        }
        ChaCha20Poly13052.prototype.seal = function(nonce, plaintext, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var resultLength = plaintext.length + this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, plaintext, result, 4);
          this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.open = function(nonce, sealed, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          if (sealed.length < this.tagLength) {
            return null;
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var calculatedTag = new Uint8Array(this.tagLength);
          this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);
          if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {
            return null;
          }
          var resultLength = sealed.length - this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._key);
          return this;
        };
        ChaCha20Poly13052.prototype._authenticate = function(tagOut, authKey, ciphertext, associatedData) {
          var h7 = new poly1305_1.Poly1305(authKey);
          if (associatedData) {
            h7.update(associatedData);
            if (associatedData.length % 16 > 0) {
              h7.update(ZEROS.subarray(associatedData.length % 16));
            }
          }
          h7.update(ciphertext);
          if (ciphertext.length % 16 > 0) {
            h7.update(ZEROS.subarray(ciphertext.length % 16));
          }
          var length2 = new Uint8Array(8);
          if (associatedData) {
            binary_1.writeUint64LE(associatedData.length, length2);
          }
          h7.update(length2);
          binary_1.writeUint64LE(ciphertext.length, length2);
          h7.update(length2);
          var tag = h7.digest();
          for (var i6 = 0; i6 < tag.length; i6++) {
            tagOut[i6] = tag[i6];
          }
          h7.clean();
          wipe_1.wipe(tag);
          wipe_1.wipe(length2);
        };
        return ChaCha20Poly13052;
      }()
    );
    exports.ChaCha20Poly1305 = ChaCha20Poly1305;
  }
});

// node_modules/@stablelib/hash/lib/hash.js
var require_hash = __commonJS({
  "node_modules/@stablelib/hash/lib/hash.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function isSerializableHash(h7) {
      return typeof h7.saveState !== "undefined" && typeof h7.restoreState !== "undefined" && typeof h7.cleanSavedState !== "undefined";
    }
    exports.isSerializableHash = isSerializableHash;
  }
});

// node_modules/@stablelib/hmac/lib/hmac.js
var require_hmac = __commonJS({
  "node_modules/@stablelib/hmac/lib/hmac.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hash_1 = require_hash();
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    var HMAC = (
      /** @class */
      function() {
        function HMAC2(hash, key) {
          this._finished = false;
          this._inner = new hash();
          this._outer = new hash();
          this.blockSize = this._outer.blockSize;
          this.digestLength = this._outer.digestLength;
          var pad = new Uint8Array(this.blockSize);
          if (key.length > this.blockSize) {
            this._inner.update(key).finish(pad).clean();
          } else {
            pad.set(key);
          }
          for (var i6 = 0; i6 < pad.length; i6++) {
            pad[i6] ^= 54;
          }
          this._inner.update(pad);
          for (var i6 = 0; i6 < pad.length; i6++) {
            pad[i6] ^= 54 ^ 92;
          }
          this._outer.update(pad);
          if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {
            this._innerKeyedState = this._inner.saveState();
            this._outerKeyedState = this._outer.saveState();
          }
          wipe_1.wipe(pad);
        }
        HMAC2.prototype.reset = function() {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
          }
          this._inner.restoreState(this._innerKeyedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.clean = function() {
          if (hash_1.isSerializableHash(this._inner)) {
            this._inner.cleanSavedState(this._innerKeyedState);
          }
          if (hash_1.isSerializableHash(this._outer)) {
            this._outer.cleanSavedState(this._outerKeyedState);
          }
          this._inner.clean();
          this._outer.clean();
        };
        HMAC2.prototype.update = function(data) {
          this._inner.update(data);
          return this;
        };
        HMAC2.prototype.finish = function(out) {
          if (this._finished) {
            this._outer.finish(out);
            return this;
          }
          this._inner.finish(out);
          this._outer.update(out.subarray(0, this.digestLength)).finish(out);
          this._finished = true;
          return this;
        };
        HMAC2.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        HMAC2.prototype.saveState = function() {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't saveState() because hash doesn't implement it");
          }
          return this._inner.saveState();
        };
        HMAC2.prototype.restoreState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't restoreState() because hash doesn't implement it");
          }
          this._inner.restoreState(savedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.cleanSavedState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
          }
          this._inner.cleanSavedState(savedState);
        };
        return HMAC2;
      }()
    );
    exports.HMAC = HMAC;
    function hmac(hash, key, data) {
      var h7 = new HMAC(hash, key);
      h7.update(data);
      var digest2 = h7.digest();
      h7.clean();
      return digest2;
    }
    exports.hmac = hmac;
    exports.equal = constant_time_1.equal;
  }
});

// node_modules/@stablelib/hkdf/lib/hkdf.js
var require_hkdf = __commonJS({
  "node_modules/@stablelib/hkdf/lib/hkdf.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hmac_1 = require_hmac();
    var wipe_1 = require_wipe();
    var HKDF = (
      /** @class */
      function() {
        function HKDF2(hash, key, salt, info) {
          if (salt === void 0) {
            salt = new Uint8Array(0);
          }
          this._counter = new Uint8Array(1);
          this._hash = hash;
          this._info = info;
          var okm = hmac_1.hmac(this._hash, salt, key);
          this._hmac = new hmac_1.HMAC(hash, okm);
          this._buffer = new Uint8Array(this._hmac.digestLength);
          this._bufpos = this._buffer.length;
        }
        HKDF2.prototype._fillBuffer = function() {
          this._counter[0]++;
          var ctr = this._counter[0];
          if (ctr === 0) {
            throw new Error("hkdf: cannot expand more");
          }
          this._hmac.reset();
          if (ctr > 1) {
            this._hmac.update(this._buffer);
          }
          if (this._info) {
            this._hmac.update(this._info);
          }
          this._hmac.update(this._counter);
          this._hmac.finish(this._buffer);
          this._bufpos = 0;
        };
        HKDF2.prototype.expand = function(length2) {
          var out = new Uint8Array(length2);
          for (var i6 = 0; i6 < out.length; i6++) {
            if (this._bufpos === this._buffer.length) {
              this._fillBuffer();
            }
            out[i6] = this._buffer[this._bufpos++];
          }
          return out;
        };
        HKDF2.prototype.clean = function() {
          this._hmac.clean();
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._counter);
          this._bufpos = 0;
        };
        return HKDF2;
      }()
    );
    exports.HKDF = HKDF;
  }
});

// node_modules/@stablelib/sha256/lib/sha256.js
var require_sha256 = __commonJS({
  "node_modules/@stablelib/sha256/lib/sha256.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 32;
    exports.BLOCK_SIZE = 64;
    var SHA256 = (
      /** @class */
      function() {
        function SHA2562() {
          this.digestLength = exports.DIGEST_LENGTH;
          this.blockSize = exports.BLOCK_SIZE;
          this._state = new Int32Array(8);
          this._temp = new Int32Array(64);
          this._buffer = new Uint8Array(128);
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          this.reset();
        }
        SHA2562.prototype._initState = function() {
          this._state[0] = 1779033703;
          this._state[1] = 3144134277;
          this._state[2] = 1013904242;
          this._state[3] = 2773480762;
          this._state[4] = 1359893119;
          this._state[5] = 2600822924;
          this._state[6] = 528734635;
          this._state[7] = 1541459225;
        };
        SHA2562.prototype.reset = function() {
          this._initState();
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._temp);
          this.reset();
        };
        SHA2562.prototype.update = function(data, dataLength) {
          if (dataLength === void 0) {
            dataLength = data.length;
          }
          if (this._finished) {
            throw new Error("SHA256: can't update because hash was finished.");
          }
          var dataPos = 0;
          this._bytesHashed += dataLength;
          if (this._bufferLength > 0) {
            while (this._bufferLength < this.blockSize && dataLength > 0) {
              this._buffer[this._bufferLength++] = data[dataPos++];
              dataLength--;
            }
            if (this._bufferLength === this.blockSize) {
              hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);
              this._bufferLength = 0;
            }
          }
          if (dataLength >= this.blockSize) {
            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);
            dataLength %= this.blockSize;
          }
          while (dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          return this;
        };
        SHA2562.prototype.finish = function(out) {
          if (!this._finished) {
            var bytesHashed = this._bytesHashed;
            var left = this._bufferLength;
            var bitLenHi = bytesHashed / 536870912 | 0;
            var bitLenLo = bytesHashed << 3;
            var padLength = bytesHashed % 64 < 56 ? 64 : 128;
            this._buffer[left] = 128;
            for (var i6 = left + 1; i6 < padLength - 8; i6++) {
              this._buffer[i6] = 0;
            }
            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);
            this._finished = true;
          }
          for (var i6 = 0; i6 < this.digestLength / 4; i6++) {
            binary_1.writeUint32BE(this._state[i6], out, i6 * 4);
          }
          return this;
        };
        SHA2562.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        SHA2562.prototype.saveState = function() {
          if (this._finished) {
            throw new Error("SHA256: cannot save finished state");
          }
          return {
            state: new Int32Array(this._state),
            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
            bufferLength: this._bufferLength,
            bytesHashed: this._bytesHashed
          };
        };
        SHA2562.prototype.restoreState = function(savedState) {
          this._state.set(savedState.state);
          this._bufferLength = savedState.bufferLength;
          if (savedState.buffer) {
            this._buffer.set(savedState.buffer);
          }
          this._bytesHashed = savedState.bytesHashed;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.cleanSavedState = function(savedState) {
          wipe_1.wipe(savedState.state);
          if (savedState.buffer) {
            wipe_1.wipe(savedState.buffer);
          }
          savedState.bufferLength = 0;
          savedState.bytesHashed = 0;
        };
        return SHA2562;
      }()
    );
    exports.SHA256 = SHA256;
    var K5 = new Int32Array([
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ]);
    function hashBlocks(w7, v5, p5, pos, len) {
      while (len >= 64) {
        var a6 = v5[0];
        var b5 = v5[1];
        var c7 = v5[2];
        var d5 = v5[3];
        var e4 = v5[4];
        var f6 = v5[5];
        var g5 = v5[6];
        var h7 = v5[7];
        for (var i6 = 0; i6 < 16; i6++) {
          var j6 = pos + i6 * 4;
          w7[i6] = binary_1.readUint32BE(p5, j6);
        }
        for (var i6 = 16; i6 < 64; i6++) {
          var u5 = w7[i6 - 2];
          var t1 = (u5 >>> 17 | u5 << 32 - 17) ^ (u5 >>> 19 | u5 << 32 - 19) ^ u5 >>> 10;
          u5 = w7[i6 - 15];
          var t22 = (u5 >>> 7 | u5 << 32 - 7) ^ (u5 >>> 18 | u5 << 32 - 18) ^ u5 >>> 3;
          w7[i6] = (t1 + w7[i6 - 7] | 0) + (t22 + w7[i6 - 16] | 0);
        }
        for (var i6 = 0; i6 < 64; i6++) {
          var t1 = (((e4 >>> 6 | e4 << 32 - 6) ^ (e4 >>> 11 | e4 << 32 - 11) ^ (e4 >>> 25 | e4 << 32 - 25)) + (e4 & f6 ^ ~e4 & g5) | 0) + (h7 + (K5[i6] + w7[i6] | 0) | 0) | 0;
          var t22 = ((a6 >>> 2 | a6 << 32 - 2) ^ (a6 >>> 13 | a6 << 32 - 13) ^ (a6 >>> 22 | a6 << 32 - 22)) + (a6 & b5 ^ a6 & c7 ^ b5 & c7) | 0;
          h7 = g5;
          g5 = f6;
          f6 = e4;
          e4 = d5 + t1 | 0;
          d5 = c7;
          c7 = b5;
          b5 = a6;
          a6 = t1 + t22 | 0;
        }
        v5[0] += a6;
        v5[1] += b5;
        v5[2] += c7;
        v5[3] += d5;
        v5[4] += e4;
        v5[5] += f6;
        v5[6] += g5;
        v5[7] += h7;
        pos += 64;
        len -= 64;
      }
      return pos;
    }
    function hash(data) {
      var h7 = new SHA256();
      h7.update(data);
      var digest2 = h7.digest();
      h7.clean();
      return digest2;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/x25519/lib/x25519.js
var require_x25519 = __commonJS({
  "node_modules/@stablelib/x25519/lib/x25519.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;
    var random_1 = require_random();
    var wipe_1 = require_wipe();
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 32;
    exports.SHARED_KEY_LENGTH = 32;
    function gf2(init) {
      const r5 = new Float64Array(16);
      if (init) {
        for (let i6 = 0; i6 < init.length; i6++) {
          r5[i6] = init[i6];
        }
      }
      return r5;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var _121665 = gf2([56129, 1]);
    function car25519(o6) {
      let c7 = 1;
      for (let i6 = 0; i6 < 16; i6++) {
        let v5 = o6[i6] + c7 + 65535;
        c7 = Math.floor(v5 / 65536);
        o6[i6] = v5 - c7 * 65536;
      }
      o6[0] += c7 - 1 + 37 * (c7 - 1);
    }
    function sel25519(p5, q5, b5) {
      const c7 = ~(b5 - 1);
      for (let i6 = 0; i6 < 16; i6++) {
        const t3 = c7 & (p5[i6] ^ q5[i6]);
        p5[i6] ^= t3;
        q5[i6] ^= t3;
      }
    }
    function pack25519(o6, n6) {
      const m5 = gf2();
      const t3 = gf2();
      for (let i6 = 0; i6 < 16; i6++) {
        t3[i6] = n6[i6];
      }
      car25519(t3);
      car25519(t3);
      car25519(t3);
      for (let j6 = 0; j6 < 2; j6++) {
        m5[0] = t3[0] - 65517;
        for (let i6 = 1; i6 < 15; i6++) {
          m5[i6] = t3[i6] - 65535 - (m5[i6 - 1] >> 16 & 1);
          m5[i6 - 1] &= 65535;
        }
        m5[15] = t3[15] - 32767 - (m5[14] >> 16 & 1);
        const b5 = m5[15] >> 16 & 1;
        m5[14] &= 65535;
        sel25519(t3, m5, 1 - b5);
      }
      for (let i6 = 0; i6 < 16; i6++) {
        o6[2 * i6] = t3[i6] & 255;
        o6[2 * i6 + 1] = t3[i6] >> 8;
      }
    }
    function unpack25519(o6, n6) {
      for (let i6 = 0; i6 < 16; i6++) {
        o6[i6] = n6[2 * i6] + (n6[2 * i6 + 1] << 8);
      }
      o6[15] &= 32767;
    }
    function add(o6, a6, b5) {
      for (let i6 = 0; i6 < 16; i6++) {
        o6[i6] = a6[i6] + b5[i6];
      }
    }
    function sub(o6, a6, b5) {
      for (let i6 = 0; i6 < 16; i6++) {
        o6[i6] = a6[i6] - b5[i6];
      }
    }
    function mul(o6, a6, b5) {
      let v5, c7, t0 = 0, t1 = 0, t22 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t222 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b02 = b5[0], b1 = b5[1], b22 = b5[2], b32 = b5[3], b42 = b5[4], b52 = b5[5], b6 = b5[6], b7 = b5[7], b8 = b5[8], b9 = b5[9], b10 = b5[10], b11 = b5[11], b12 = b5[12], b13 = b5[13], b14 = b5[14], b15 = b5[15];
      v5 = a6[0];
      t0 += v5 * b02;
      t1 += v5 * b1;
      t22 += v5 * b22;
      t3 += v5 * b32;
      t4 += v5 * b42;
      t5 += v5 * b52;
      t6 += v5 * b6;
      t7 += v5 * b7;
      t8 += v5 * b8;
      t9 += v5 * b9;
      t10 += v5 * b10;
      t11 += v5 * b11;
      t12 += v5 * b12;
      t13 += v5 * b13;
      t14 += v5 * b14;
      t15 += v5 * b15;
      v5 = a6[1];
      t1 += v5 * b02;
      t22 += v5 * b1;
      t3 += v5 * b22;
      t4 += v5 * b32;
      t5 += v5 * b42;
      t6 += v5 * b52;
      t7 += v5 * b6;
      t8 += v5 * b7;
      t9 += v5 * b8;
      t10 += v5 * b9;
      t11 += v5 * b10;
      t12 += v5 * b11;
      t13 += v5 * b12;
      t14 += v5 * b13;
      t15 += v5 * b14;
      t16 += v5 * b15;
      v5 = a6[2];
      t22 += v5 * b02;
      t3 += v5 * b1;
      t4 += v5 * b22;
      t5 += v5 * b32;
      t6 += v5 * b42;
      t7 += v5 * b52;
      t8 += v5 * b6;
      t9 += v5 * b7;
      t10 += v5 * b8;
      t11 += v5 * b9;
      t12 += v5 * b10;
      t13 += v5 * b11;
      t14 += v5 * b12;
      t15 += v5 * b13;
      t16 += v5 * b14;
      t17 += v5 * b15;
      v5 = a6[3];
      t3 += v5 * b02;
      t4 += v5 * b1;
      t5 += v5 * b22;
      t6 += v5 * b32;
      t7 += v5 * b42;
      t8 += v5 * b52;
      t9 += v5 * b6;
      t10 += v5 * b7;
      t11 += v5 * b8;
      t12 += v5 * b9;
      t13 += v5 * b10;
      t14 += v5 * b11;
      t15 += v5 * b12;
      t16 += v5 * b13;
      t17 += v5 * b14;
      t18 += v5 * b15;
      v5 = a6[4];
      t4 += v5 * b02;
      t5 += v5 * b1;
      t6 += v5 * b22;
      t7 += v5 * b32;
      t8 += v5 * b42;
      t9 += v5 * b52;
      t10 += v5 * b6;
      t11 += v5 * b7;
      t12 += v5 * b8;
      t13 += v5 * b9;
      t14 += v5 * b10;
      t15 += v5 * b11;
      t16 += v5 * b12;
      t17 += v5 * b13;
      t18 += v5 * b14;
      t19 += v5 * b15;
      v5 = a6[5];
      t5 += v5 * b02;
      t6 += v5 * b1;
      t7 += v5 * b22;
      t8 += v5 * b32;
      t9 += v5 * b42;
      t10 += v5 * b52;
      t11 += v5 * b6;
      t12 += v5 * b7;
      t13 += v5 * b8;
      t14 += v5 * b9;
      t15 += v5 * b10;
      t16 += v5 * b11;
      t17 += v5 * b12;
      t18 += v5 * b13;
      t19 += v5 * b14;
      t20 += v5 * b15;
      v5 = a6[6];
      t6 += v5 * b02;
      t7 += v5 * b1;
      t8 += v5 * b22;
      t9 += v5 * b32;
      t10 += v5 * b42;
      t11 += v5 * b52;
      t12 += v5 * b6;
      t13 += v5 * b7;
      t14 += v5 * b8;
      t15 += v5 * b9;
      t16 += v5 * b10;
      t17 += v5 * b11;
      t18 += v5 * b12;
      t19 += v5 * b13;
      t20 += v5 * b14;
      t21 += v5 * b15;
      v5 = a6[7];
      t7 += v5 * b02;
      t8 += v5 * b1;
      t9 += v5 * b22;
      t10 += v5 * b32;
      t11 += v5 * b42;
      t12 += v5 * b52;
      t13 += v5 * b6;
      t14 += v5 * b7;
      t15 += v5 * b8;
      t16 += v5 * b9;
      t17 += v5 * b10;
      t18 += v5 * b11;
      t19 += v5 * b12;
      t20 += v5 * b13;
      t21 += v5 * b14;
      t222 += v5 * b15;
      v5 = a6[8];
      t8 += v5 * b02;
      t9 += v5 * b1;
      t10 += v5 * b22;
      t11 += v5 * b32;
      t12 += v5 * b42;
      t13 += v5 * b52;
      t14 += v5 * b6;
      t15 += v5 * b7;
      t16 += v5 * b8;
      t17 += v5 * b9;
      t18 += v5 * b10;
      t19 += v5 * b11;
      t20 += v5 * b12;
      t21 += v5 * b13;
      t222 += v5 * b14;
      t23 += v5 * b15;
      v5 = a6[9];
      t9 += v5 * b02;
      t10 += v5 * b1;
      t11 += v5 * b22;
      t12 += v5 * b32;
      t13 += v5 * b42;
      t14 += v5 * b52;
      t15 += v5 * b6;
      t16 += v5 * b7;
      t17 += v5 * b8;
      t18 += v5 * b9;
      t19 += v5 * b10;
      t20 += v5 * b11;
      t21 += v5 * b12;
      t222 += v5 * b13;
      t23 += v5 * b14;
      t24 += v5 * b15;
      v5 = a6[10];
      t10 += v5 * b02;
      t11 += v5 * b1;
      t12 += v5 * b22;
      t13 += v5 * b32;
      t14 += v5 * b42;
      t15 += v5 * b52;
      t16 += v5 * b6;
      t17 += v5 * b7;
      t18 += v5 * b8;
      t19 += v5 * b9;
      t20 += v5 * b10;
      t21 += v5 * b11;
      t222 += v5 * b12;
      t23 += v5 * b13;
      t24 += v5 * b14;
      t25 += v5 * b15;
      v5 = a6[11];
      t11 += v5 * b02;
      t12 += v5 * b1;
      t13 += v5 * b22;
      t14 += v5 * b32;
      t15 += v5 * b42;
      t16 += v5 * b52;
      t17 += v5 * b6;
      t18 += v5 * b7;
      t19 += v5 * b8;
      t20 += v5 * b9;
      t21 += v5 * b10;
      t222 += v5 * b11;
      t23 += v5 * b12;
      t24 += v5 * b13;
      t25 += v5 * b14;
      t26 += v5 * b15;
      v5 = a6[12];
      t12 += v5 * b02;
      t13 += v5 * b1;
      t14 += v5 * b22;
      t15 += v5 * b32;
      t16 += v5 * b42;
      t17 += v5 * b52;
      t18 += v5 * b6;
      t19 += v5 * b7;
      t20 += v5 * b8;
      t21 += v5 * b9;
      t222 += v5 * b10;
      t23 += v5 * b11;
      t24 += v5 * b12;
      t25 += v5 * b13;
      t26 += v5 * b14;
      t27 += v5 * b15;
      v5 = a6[13];
      t13 += v5 * b02;
      t14 += v5 * b1;
      t15 += v5 * b22;
      t16 += v5 * b32;
      t17 += v5 * b42;
      t18 += v5 * b52;
      t19 += v5 * b6;
      t20 += v5 * b7;
      t21 += v5 * b8;
      t222 += v5 * b9;
      t23 += v5 * b10;
      t24 += v5 * b11;
      t25 += v5 * b12;
      t26 += v5 * b13;
      t27 += v5 * b14;
      t28 += v5 * b15;
      v5 = a6[14];
      t14 += v5 * b02;
      t15 += v5 * b1;
      t16 += v5 * b22;
      t17 += v5 * b32;
      t18 += v5 * b42;
      t19 += v5 * b52;
      t20 += v5 * b6;
      t21 += v5 * b7;
      t222 += v5 * b8;
      t23 += v5 * b9;
      t24 += v5 * b10;
      t25 += v5 * b11;
      t26 += v5 * b12;
      t27 += v5 * b13;
      t28 += v5 * b14;
      t29 += v5 * b15;
      v5 = a6[15];
      t15 += v5 * b02;
      t16 += v5 * b1;
      t17 += v5 * b22;
      t18 += v5 * b32;
      t19 += v5 * b42;
      t20 += v5 * b52;
      t21 += v5 * b6;
      t222 += v5 * b7;
      t23 += v5 * b8;
      t24 += v5 * b9;
      t25 += v5 * b10;
      t26 += v5 * b11;
      t27 += v5 * b12;
      t28 += v5 * b13;
      t29 += v5 * b14;
      t30 += v5 * b15;
      t0 += 38 * t16;
      t1 += 38 * t17;
      t22 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t222;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c7 = 1;
      v5 = t0 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t0 = v5 - c7 * 65536;
      v5 = t1 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t1 = v5 - c7 * 65536;
      v5 = t22 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t22 = v5 - c7 * 65536;
      v5 = t3 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t3 = v5 - c7 * 65536;
      v5 = t4 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t4 = v5 - c7 * 65536;
      v5 = t5 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t5 = v5 - c7 * 65536;
      v5 = t6 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t6 = v5 - c7 * 65536;
      v5 = t7 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t7 = v5 - c7 * 65536;
      v5 = t8 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t8 = v5 - c7 * 65536;
      v5 = t9 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t9 = v5 - c7 * 65536;
      v5 = t10 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t10 = v5 - c7 * 65536;
      v5 = t11 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t11 = v5 - c7 * 65536;
      v5 = t12 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t12 = v5 - c7 * 65536;
      v5 = t13 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t13 = v5 - c7 * 65536;
      v5 = t14 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t14 = v5 - c7 * 65536;
      v5 = t15 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t15 = v5 - c7 * 65536;
      t0 += c7 - 1 + 37 * (c7 - 1);
      c7 = 1;
      v5 = t0 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t0 = v5 - c7 * 65536;
      v5 = t1 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t1 = v5 - c7 * 65536;
      v5 = t22 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t22 = v5 - c7 * 65536;
      v5 = t3 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t3 = v5 - c7 * 65536;
      v5 = t4 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t4 = v5 - c7 * 65536;
      v5 = t5 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t5 = v5 - c7 * 65536;
      v5 = t6 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t6 = v5 - c7 * 65536;
      v5 = t7 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t7 = v5 - c7 * 65536;
      v5 = t8 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t8 = v5 - c7 * 65536;
      v5 = t9 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t9 = v5 - c7 * 65536;
      v5 = t10 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t10 = v5 - c7 * 65536;
      v5 = t11 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t11 = v5 - c7 * 65536;
      v5 = t12 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t12 = v5 - c7 * 65536;
      v5 = t13 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t13 = v5 - c7 * 65536;
      v5 = t14 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t14 = v5 - c7 * 65536;
      v5 = t15 + c7 + 65535;
      c7 = Math.floor(v5 / 65536);
      t15 = v5 - c7 * 65536;
      t0 += c7 - 1 + 37 * (c7 - 1);
      o6[0] = t0;
      o6[1] = t1;
      o6[2] = t22;
      o6[3] = t3;
      o6[4] = t4;
      o6[5] = t5;
      o6[6] = t6;
      o6[7] = t7;
      o6[8] = t8;
      o6[9] = t9;
      o6[10] = t10;
      o6[11] = t11;
      o6[12] = t12;
      o6[13] = t13;
      o6[14] = t14;
      o6[15] = t15;
    }
    function square(o6, a6) {
      mul(o6, a6, a6);
    }
    function inv25519(o6, inp) {
      const c7 = gf2();
      for (let i6 = 0; i6 < 16; i6++) {
        c7[i6] = inp[i6];
      }
      for (let i6 = 253; i6 >= 0; i6--) {
        square(c7, c7);
        if (i6 !== 2 && i6 !== 4) {
          mul(c7, c7, inp);
        }
      }
      for (let i6 = 0; i6 < 16; i6++) {
        o6[i6] = c7[i6];
      }
    }
    function scalarMult(n6, p5) {
      const z6 = new Uint8Array(32);
      const x5 = new Float64Array(80);
      const a6 = gf2(), b5 = gf2(), c7 = gf2(), d5 = gf2(), e4 = gf2(), f6 = gf2();
      for (let i6 = 0; i6 < 31; i6++) {
        z6[i6] = n6[i6];
      }
      z6[31] = n6[31] & 127 | 64;
      z6[0] &= 248;
      unpack25519(x5, p5);
      for (let i6 = 0; i6 < 16; i6++) {
        b5[i6] = x5[i6];
      }
      a6[0] = d5[0] = 1;
      for (let i6 = 254; i6 >= 0; --i6) {
        const r5 = z6[i6 >>> 3] >>> (i6 & 7) & 1;
        sel25519(a6, b5, r5);
        sel25519(c7, d5, r5);
        add(e4, a6, c7);
        sub(a6, a6, c7);
        add(c7, b5, d5);
        sub(b5, b5, d5);
        square(d5, e4);
        square(f6, a6);
        mul(a6, c7, a6);
        mul(c7, b5, e4);
        add(e4, a6, c7);
        sub(a6, a6, c7);
        square(b5, a6);
        sub(c7, d5, f6);
        mul(a6, c7, _121665);
        add(a6, a6, d5);
        mul(c7, c7, a6);
        mul(a6, d5, f6);
        mul(d5, b5, x5);
        square(b5, e4);
        sel25519(a6, b5, r5);
        sel25519(c7, d5, r5);
      }
      for (let i6 = 0; i6 < 16; i6++) {
        x5[i6 + 16] = a6[i6];
        x5[i6 + 32] = c7[i6];
        x5[i6 + 48] = b5[i6];
        x5[i6 + 64] = d5[i6];
      }
      const x32 = x5.subarray(32);
      const x16 = x5.subarray(16);
      inv25519(x32, x32);
      mul(x16, x16, x32);
      const q5 = new Uint8Array(32);
      pack25519(q5, x16);
      return q5;
    }
    exports.scalarMult = scalarMult;
    function scalarMultBase(n6) {
      return scalarMult(n6, _9);
    }
    exports.scalarMultBase = scalarMultBase;
    function generateKeyPairFromSeed2(seed) {
      if (seed.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      const secretKey = new Uint8Array(seed);
      const publicKey = scalarMultBase(secretKey);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed2;
    function generateKeyPair3(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed2(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair3;
    function sharedKey2(mySecretKey, theirPublicKey, rejectZero = false) {
      if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect secret key length");
      }
      if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect public key length");
      }
      const result = scalarMult(mySecretKey, theirPublicKey);
      if (rejectZero) {
        let zeros = 0;
        for (let i6 = 0; i6 < result.length; i6++) {
          zeros |= result[i6];
        }
        if (zeros === 0) {
          throw new Error("X25519: invalid shared key");
        }
      }
      return result;
    }
    exports.sharedKey = sharedKey2;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/crypto.js
var require_crypto2 = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/crypto.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;
    function getBrowerCrypto() {
      return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};
    }
    exports.getBrowerCrypto = getBrowerCrypto;
    function getSubtleCrypto() {
      const browserCrypto = getBrowerCrypto();
      return browserCrypto.subtle || browserCrypto.webkitSubtle;
    }
    exports.getSubtleCrypto = getSubtleCrypto;
    function isBrowserCryptoAvailable() {
      return !!getBrowerCrypto() && !!getSubtleCrypto();
    }
    exports.isBrowserCryptoAvailable = isBrowserCryptoAvailable;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/env.js
var require_env = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/env.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowser = exports.isNode = exports.isReactNative = void 0;
    function isReactNative() {
      return typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative";
    }
    exports.isReactNative = isReactNative;
    function isNode3() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    }
    exports.isNode = isNode3;
    function isBrowser2() {
      return !isReactNative() && !isNode3();
    }
    exports.isBrowser = isBrowser2;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/index.js
var require_cjs7 = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_crypto2(), exports);
    tslib_1.__exportStar(require_env(), exports);
  }
});

// node_modules/ws/browser.js
var require_browser4 = __commonJS({
  "node_modules/ws/browser.js"(exports, module) {
    "use strict";
    module.exports = function() {
      throw new Error(
        "ws does not work in the browser. Browser clients must use the native WebSocket object"
      );
    };
  }
});

// node_modules/lodash.isequal/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.isequal/index.js"(exports, module) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var asyncTag = "[object AsyncFunction]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var nullTag = "[object Null]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var proxyTag = "[object Proxy]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var undefinedTag = "[object Undefined]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e4) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function arrayFilter(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length2) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length2 = values.length, offset = array.length;
      while (++index < length2) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arraySome(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length;
      while (++index < length2) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    function baseTimes(n6, iteratee) {
      var index = -1, result = Array(n6);
      while (++index < n6) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    function setToArray(set2) {
      var index = -1, result = Array(set2.size);
      set2.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var nativeObjectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var Symbol2 = root.Symbol;
    var Uint8Array2 = root.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView2 = getNative(root, "DataView");
    var Map2 = getNative(root, "Map");
    var Promise2 = getNative(root, "Promise");
    var Set2 = getNative(root, "Set");
    var WeakMap = getNative(root, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function Hash(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length2 = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length2) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length2 = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length2)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length2 = array.length;
      while (length2--) {
        if (eq(array[length2][0], key)) {
          return length2;
        }
      }
      return -1;
    }
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys2, getSymbols);
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e4) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function isIndex(value, length2) {
      length2 = length2 == null ? MAX_SAFE_INTEGER : length2;
      return !!length2 && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length2);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e4) {
        }
        try {
          return func + "";
        } catch (e4) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(/* @__PURE__ */ function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function keys2(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function stubArray() {
      return [];
    }
    function stubFalse() {
      return false;
    }
    module.exports = isEqual;
  }
});

// node_modules/unfetch/dist/unfetch.module.js
var unfetch_module_exports = {};
__export(unfetch_module_exports, {
  default: () => unfetch_module_default
});
function unfetch_module_default(e4, n6) {
  return n6 = n6 || {}, new Promise(function(t3, r5) {
    var s5 = new XMLHttpRequest(), o6 = [], u5 = [], i6 = {}, a6 = function() {
      return { ok: 2 == (s5.status / 100 | 0), statusText: s5.statusText, status: s5.status, url: s5.responseURL, text: function() {
        return Promise.resolve(s5.responseText);
      }, json: function() {
        return Promise.resolve(s5.responseText).then(JSON.parse);
      }, blob: function() {
        return Promise.resolve(new Blob([s5.response]));
      }, clone: a6, headers: { keys: function() {
        return o6;
      }, entries: function() {
        return u5;
      }, get: function(e5) {
        return i6[e5.toLowerCase()];
      }, has: function(e5) {
        return e5.toLowerCase() in i6;
      } } };
    };
    for (var l6 in s5.open(n6.method || "get", e4, true), s5.onload = function() {
      s5.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, function(e5, n7, t4) {
        o6.push(n7 = n7.toLowerCase()), u5.push([n7, t4]), i6[n7] = i6[n7] ? i6[n7] + "," + t4 : t4;
      }), t3(a6());
    }, s5.onerror = r5, s5.withCredentials = "include" == n6.credentials, n6.headers) s5.setRequestHeader(l6, n6.headers[l6]);
    s5.send(n6.body || null);
  });
}
var init_unfetch_module = __esm({
  "node_modules/unfetch/dist/unfetch.module.js"() {
  }
});

// node_modules/isomorphic-unfetch/browser.js
var require_browser5 = __commonJS({
  "node_modules/isomorphic-unfetch/browser.js"(exports, module) {
    module.exports = self.fetch || (self.fetch = (init_unfetch_module(), __toCommonJS(unfetch_module_exports)).default || (init_unfetch_module(), __toCommonJS(unfetch_module_exports)));
  }
});

// node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js
init_index_browser_esm();
var import_qrcode_modal = __toESM(require_cjs3(), 1);

// node_modules/@walletconnect/core/dist/index.es.js
var import_events7 = __toESM(require_events());

// node_modules/destr/dist/index.mjs
var suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
var suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
var JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`);
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  const _value = value.trim();
  if (
    // eslint-disable-next-line unicorn/prefer-at
    value[0] === '"' && value.endsWith('"') && !value.includes("\\")
  ) {
    return _value.slice(1, -1);
  }
  if (_value.length <= 9) {
    const _lval = _value.toLowerCase();
    if (_lval === "true") {
      return true;
    }
    if (_lval === "false") {
      return false;
    }
    if (_lval === "undefined") {
      return void 0;
    }
    if (_lval === "null") {
      return null;
    }
    if (_lval === "nan") {
      return Number.NaN;
    }
    if (_lval === "infinity") {
      return Number.POSITIVE_INFINITY;
    }
    if (_lval === "-infinity") {
      return Number.NEGATIVE_INFINITY;
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}

// node_modules/unstorage/dist/shared/unstorage.8581f561.mjs
function wrapToPromise(value) {
  if (!value || typeof value.then !== "function") {
    return Promise.resolve(value);
  }
  return value;
}
function asyncCall(function_, ...arguments_) {
  try {
    return wrapToPromise(function_(...arguments_));
  } catch (error) {
    return Promise.reject(error);
  }
}
function isPrimitive(value) {
  const type = typeof value;
  return value === null || type !== "object" && type !== "function";
}
function isPureObject(value) {
  const proto = Object.getPrototypeOf(value);
  return !proto || proto.isPrototypeOf(Object);
}
function stringify(value) {
  if (isPrimitive(value)) {
    return String(value);
  }
  if (isPureObject(value) || Array.isArray(value)) {
    return JSON.stringify(value);
  }
  if (typeof value.toJSON === "function") {
    return stringify(value.toJSON());
  }
  throw new Error("[unstorage] Cannot stringify value!");
}
function checkBufferSupport() {
  if (typeof Buffer === void 0) {
    throw new TypeError("[unstorage] Buffer is not supported!");
  }
}
var BASE64_PREFIX = "base64:";
function serializeRaw(value) {
  if (typeof value === "string") {
    return value;
  }
  checkBufferSupport();
  const base642 = Buffer.from(value).toString("base64");
  return BASE64_PREFIX + base642;
}
function deserializeRaw(value) {
  if (typeof value !== "string") {
    return value;
  }
  if (!value.startsWith(BASE64_PREFIX)) {
    return value;
  }
  checkBufferSupport();
  return Buffer.from(value.slice(BASE64_PREFIX.length), "base64");
}
function normalizeKey(key) {
  if (!key) {
    return "";
  }
  return key.split("?")[0].replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "");
}
function joinKeys(...keys2) {
  return normalizeKey(keys2.join(":"));
}
function normalizeBaseKey(base3) {
  base3 = normalizeKey(base3);
  return base3 ? base3 + ":" : "";
}

// node_modules/unstorage/dist/index.mjs
function defineDriver(factory) {
  return factory;
}
var DRIVER_NAME = "memory";
var memory = defineDriver(() => {
  const data = /* @__PURE__ */ new Map();
  return {
    name: DRIVER_NAME,
    options: {},
    hasItem(key) {
      return data.has(key);
    },
    getItem(key) {
      return data.get(key) ?? null;
    },
    getItemRaw(key) {
      return data.get(key) ?? null;
    },
    setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem(key) {
      data.delete(key);
    },
    getKeys() {
      return Array.from(data.keys());
    },
    clear() {
      data.clear();
    },
    dispose() {
      data.clear();
    }
  };
});
function createStorage(options = {}) {
  const context = {
    mounts: { "": options.driver || memory() },
    mountpoints: [""],
    watching: false,
    watchListeners: [],
    unwatch: {}
  };
  const getMount = (key) => {
    for (const base3 of context.mountpoints) {
      if (key.startsWith(base3)) {
        return {
          base: base3,
          relativeKey: key.slice(base3.length),
          driver: context.mounts[base3]
        };
      }
    }
    return {
      base: "",
      relativeKey: key,
      driver: context.mounts[""]
    };
  };
  const getMounts = (base3, includeParent) => {
    return context.mountpoints.filter(
      (mountpoint) => mountpoint.startsWith(base3) || includeParent && base3.startsWith(mountpoint)
    ).map((mountpoint) => ({
      relativeBase: base3.length > mountpoint.length ? base3.slice(mountpoint.length) : void 0,
      mountpoint,
      driver: context.mounts[mountpoint]
    }));
  };
  const onChange = (event, key) => {
    if (!context.watching) {
      return;
    }
    key = normalizeKey(key);
    for (const listener of context.watchListeners) {
      listener(event, key);
    }
  };
  const startWatch = async () => {
    if (context.watching) {
      return;
    }
    context.watching = true;
    for (const mountpoint in context.mounts) {
      context.unwatch[mountpoint] = await watch(
        context.mounts[mountpoint],
        onChange,
        mountpoint
      );
    }
  };
  const stopWatch = async () => {
    if (!context.watching) {
      return;
    }
    for (const mountpoint in context.unwatch) {
      await context.unwatch[mountpoint]();
    }
    context.unwatch = {};
    context.watching = false;
  };
  const runBatch = (items, commonOptions, cb) => {
    const batches = /* @__PURE__ */ new Map();
    const getBatch = (mount) => {
      let batch = batches.get(mount.base);
      if (!batch) {
        batch = {
          driver: mount.driver,
          base: mount.base,
          items: []
        };
        batches.set(mount.base, batch);
      }
      return batch;
    };
    for (const item of items) {
      const isStringItem = typeof item === "string";
      const key = normalizeKey(isStringItem ? item : item.key);
      const value = isStringItem ? void 0 : item.value;
      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };
      const mount = getMount(key);
      getBatch(mount).items.push({
        key,
        value,
        relativeKey: mount.relativeKey,
        options: options2
      });
    }
    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(
      (r5) => r5.flat()
    );
  };
  const storage = {
    // Item
    hasItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.hasItem, relativeKey, opts);
    },
    getItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => destr(value)
      );
    },
    getItems(items, commonOptions) {
      return runBatch(items, commonOptions, (batch) => {
        if (batch.driver.getItems) {
          return asyncCall(
            batch.driver.getItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              options: item.options
            })),
            commonOptions
          ).then(
            (r5) => r5.map((item) => ({
              key: joinKeys(batch.base, item.key),
              value: destr(item.value)
            }))
          );
        }
        return Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.getItem,
              item.relativeKey,
              item.options
            ).then((value) => ({
              key: item.key,
              value: destr(value)
            }));
          })
        );
      });
    },
    getItemRaw(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.getItemRaw) {
        return asyncCall(driver.getItemRaw, relativeKey, opts);
      }
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => deserializeRaw(value)
      );
    },
    async setItem(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.setItem) {
        return;
      }
      await asyncCall(driver.setItem, relativeKey, stringify(value), opts);
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async setItems(items, commonOptions) {
      await runBatch(items, commonOptions, async (batch) => {
        if (batch.driver.setItems) {
          return asyncCall(
            batch.driver.setItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              value: stringify(item.value),
              options: item.options
            })),
            commonOptions
          );
        }
        if (!batch.driver.setItem) {
          return;
        }
        await Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.setItem,
              item.relativeKey,
              stringify(item.value),
              item.options
            );
          })
        );
      });
    },
    async setItemRaw(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key, opts);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.setItemRaw) {
        await asyncCall(driver.setItemRaw, relativeKey, value, opts);
      } else if (driver.setItem) {
        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);
      } else {
        return;
      }
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async removeItem(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { removeMeta: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.removeItem) {
        return;
      }
      await asyncCall(driver.removeItem, relativeKey, opts);
      if (opts.removeMeta || opts.removeMata) {
        await asyncCall(driver.removeItem, relativeKey + "$", opts);
      }
      if (!driver.watch) {
        onChange("remove", key);
      }
    },
    // Meta
    async getMeta(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { nativeOnly: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      const meta = /* @__PURE__ */ Object.create(null);
      if (driver.getMeta) {
        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));
      }
      if (!opts.nativeOnly) {
        const value = await asyncCall(
          driver.getItem,
          relativeKey + "$",
          opts
        ).then((value_) => destr(value_));
        if (value && typeof value === "object") {
          if (typeof value.atime === "string") {
            value.atime = new Date(value.atime);
          }
          if (typeof value.mtime === "string") {
            value.mtime = new Date(value.mtime);
          }
          Object.assign(meta, value);
        }
      }
      return meta;
    },
    setMeta(key, value, opts = {}) {
      return this.setItem(key + "$", value, opts);
    },
    removeMeta(key, opts = {}) {
      return this.removeItem(key + "$", opts);
    },
    // Keys
    async getKeys(base3, opts = {}) {
      base3 = normalizeBaseKey(base3);
      const mounts = getMounts(base3, true);
      let maskedMounts = [];
      const allKeys = [];
      for (const mount of mounts) {
        const rawKeys = await asyncCall(
          mount.driver.getKeys,
          mount.relativeBase,
          opts
        );
        const keys2 = rawKeys.map((key) => mount.mountpoint + normalizeKey(key)).filter((key) => !maskedMounts.some((p5) => key.startsWith(p5)));
        allKeys.push(...keys2);
        maskedMounts = [
          mount.mountpoint,
          ...maskedMounts.filter((p5) => !p5.startsWith(mount.mountpoint))
        ];
      }
      return base3 ? allKeys.filter((key) => key.startsWith(base3) && !key.endsWith("$")) : allKeys.filter((key) => !key.endsWith("$"));
    },
    // Utils
    async clear(base3, opts = {}) {
      base3 = normalizeBaseKey(base3);
      await Promise.all(
        getMounts(base3, false).map(async (m5) => {
          if (m5.driver.clear) {
            return asyncCall(m5.driver.clear, m5.relativeBase, opts);
          }
          if (m5.driver.removeItem) {
            const keys2 = await m5.driver.getKeys(m5.relativeBase || "", opts);
            return Promise.all(
              keys2.map((key) => m5.driver.removeItem(key, opts))
            );
          }
        })
      );
    },
    async dispose() {
      await Promise.all(
        Object.values(context.mounts).map((driver) => dispose(driver))
      );
    },
    async watch(callback) {
      await startWatch();
      context.watchListeners.push(callback);
      return async () => {
        context.watchListeners = context.watchListeners.filter(
          (listener) => listener !== callback
        );
        if (context.watchListeners.length === 0) {
          await stopWatch();
        }
      };
    },
    async unwatch() {
      context.watchListeners = [];
      await stopWatch();
    },
    // Mount
    mount(base3, driver) {
      base3 = normalizeBaseKey(base3);
      if (base3 && context.mounts[base3]) {
        throw new Error(`already mounted at ${base3}`);
      }
      if (base3) {
        context.mountpoints.push(base3);
        context.mountpoints.sort((a6, b5) => b5.length - a6.length);
      }
      context.mounts[base3] = driver;
      if (context.watching) {
        Promise.resolve(watch(driver, onChange, base3)).then((unwatcher) => {
          context.unwatch[base3] = unwatcher;
        }).catch(console.error);
      }
      return storage;
    },
    async unmount(base3, _dispose = true) {
      base3 = normalizeBaseKey(base3);
      if (!base3 || !context.mounts[base3]) {
        return;
      }
      if (context.watching && base3 in context.unwatch) {
        context.unwatch[base3]();
        delete context.unwatch[base3];
      }
      if (_dispose) {
        await dispose(context.mounts[base3]);
      }
      context.mountpoints = context.mountpoints.filter((key) => key !== base3);
      delete context.mounts[base3];
    },
    getMount(key = "") {
      key = normalizeKey(key) + ":";
      const m5 = getMount(key);
      return {
        driver: m5.driver,
        base: m5.base
      };
    },
    getMounts(base3 = "", opts = {}) {
      base3 = normalizeKey(base3);
      const mounts = getMounts(base3, opts.parents);
      return mounts.map((m5) => ({
        driver: m5.driver,
        base: m5.mountpoint
      }));
    }
  };
  return storage;
}
function watch(driver, onChange, base3) {
  return driver.watch ? driver.watch((event, key) => onChange(event, base3 + key)) : () => {
  };
}
async function dispose(driver) {
  if (typeof driver.dispose === "function") {
    await asyncCall(driver.dispose);
  }
}

// node_modules/idb-keyval/dist/index.js
function promisifyRequest(request) {
  return new Promise((resolve, reject) => {
    request.oncomplete = request.onsuccess = () => resolve(request.result);
    request.onabort = request.onerror = () => reject(request.error);
  });
}
function createStore(dbName, storeName) {
  const request = indexedDB.open(dbName);
  request.onupgradeneeded = () => request.result.createObjectStore(storeName);
  const dbp = promisifyRequest(request);
  return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));
}
var defaultGetStoreFunc;
function defaultGetStore() {
  if (!defaultGetStoreFunc) {
    defaultGetStoreFunc = createStore("keyval-store", "keyval");
  }
  return defaultGetStoreFunc;
}
function get(key, customStore = defaultGetStore()) {
  return customStore("readonly", (store) => promisifyRequest(store.get(key)));
}
function set(key, value, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.put(value, key);
    return promisifyRequest(store.transaction);
  });
}
function del(key, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.delete(key);
    return promisifyRequest(store.transaction);
  });
}
function clear(customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.clear();
    return promisifyRequest(store.transaction);
  });
}
function eachCursor(store, callback) {
  store.openCursor().onsuccess = function() {
    if (!this.result)
      return;
    callback(this.result);
    this.result.continue();
  };
  return promisifyRequest(store.transaction);
}
function keys(customStore = defaultGetStore()) {
  return customStore("readonly", (store) => {
    if (store.getAllKeys) {
      return promisifyRequest(store.getAllKeys());
    }
    const items = [];
    return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);
  });
}

// node_modules/@walletconnect/safe-json/dist/esm/index.js
var JSONStringify = (data) => JSON.stringify(data, (_6, value) => typeof value === "bigint" ? value.toString() + "n" : value);
var JSONParse = (json) => {
  const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  const serializedData = json.replace(numbersBiggerThanMaxInt, '$1"$2n"$3');
  return JSON.parse(serializedData, (_6, value) => {
    const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt)
      return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse3(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSONParse(value);
  } catch (_a2) {
    return value;
  }
}
function safeJsonStringify3(value) {
  return typeof value === "string" ? value : JSONStringify(value) || "";
}

// node_modules/@walletconnect/keyvaluestorage/dist/index.es.js
var x3 = "idb-keyval";
var z3 = (i6 = {}) => {
  const t3 = i6.base && i6.base.length > 0 ? `${i6.base}:` : "", e4 = (s5) => t3 + s5;
  let n6;
  return i6.dbName && i6.storeName && (n6 = createStore(i6.dbName, i6.storeName)), { name: x3, options: i6, async hasItem(s5) {
    return !(typeof await get(e4(s5), n6) > "u");
  }, async getItem(s5) {
    return await get(e4(s5), n6) ?? null;
  }, setItem(s5, a6) {
    return set(e4(s5), a6, n6);
  }, removeItem(s5) {
    return del(e4(s5), n6);
  }, getKeys() {
    return keys(n6);
  }, clear() {
    return clear(n6);
  } };
};
var D3 = "WALLET_CONNECT_V2_INDEXED_DB";
var E4 = "keyvaluestorage";
var _4 = class {
  constructor() {
    this.indexedDb = createStorage({ driver: z3({ dbName: D3, storeName: E4 }) });
  }
  async getKeys() {
    return this.indexedDb.getKeys();
  }
  async getEntries() {
    return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t3) => [t3.key, t3.value]);
  }
  async getItem(t3) {
    const e4 = await this.indexedDb.getItem(t3);
    if (e4 !== null) return e4;
  }
  async setItem(t3, e4) {
    await this.indexedDb.setItem(t3, safeJsonStringify3(e4));
  }
  async removeItem(t3) {
    await this.indexedDb.removeItem(t3);
  }
};
var l3 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var c3 = { exports: {} };
(function() {
  let i6;
  function t3() {
  }
  i6 = t3, i6.prototype.getItem = function(e4) {
    return this.hasOwnProperty(e4) ? String(this[e4]) : null;
  }, i6.prototype.setItem = function(e4, n6) {
    this[e4] = String(n6);
  }, i6.prototype.removeItem = function(e4) {
    delete this[e4];
  }, i6.prototype.clear = function() {
    const e4 = this;
    Object.keys(e4).forEach(function(n6) {
      e4[n6] = void 0, delete e4[n6];
    });
  }, i6.prototype.key = function(e4) {
    return e4 = e4 || 0, Object.keys(this)[e4];
  }, i6.prototype.__defineGetter__("length", function() {
    return Object.keys(this).length;
  }), typeof l3 < "u" && l3.localStorage ? c3.exports = l3.localStorage : typeof window < "u" && window.localStorage ? c3.exports = window.localStorage : c3.exports = new t3();
})();
function k3(i6) {
  var t3;
  return [i6[0], safeJsonParse3((t3 = i6[1]) != null ? t3 : "")];
}
var K2 = class {
  constructor() {
    this.localStorage = c3.exports;
  }
  async getKeys() {
    return Object.keys(this.localStorage);
  }
  async getEntries() {
    return Object.entries(this.localStorage).map(k3);
  }
  async getItem(t3) {
    const e4 = this.localStorage.getItem(t3);
    if (e4 !== null) return safeJsonParse3(e4);
  }
  async setItem(t3, e4) {
    this.localStorage.setItem(t3, safeJsonStringify3(e4));
  }
  async removeItem(t3) {
    this.localStorage.removeItem(t3);
  }
};
var N3 = "wc_storage_version";
var y3 = 1;
var O2 = async (i6, t3, e4) => {
  const n6 = N3, s5 = await t3.getItem(n6);
  if (s5 && s5 >= y3) {
    e4(t3);
    return;
  }
  const a6 = await i6.getKeys();
  if (!a6.length) {
    e4(t3);
    return;
  }
  const m5 = [];
  for (; a6.length; ) {
    const r5 = a6.shift();
    if (!r5) continue;
    const o6 = r5.toLowerCase();
    if (o6.includes("wc@") || o6.includes("walletconnect") || o6.includes("wc_") || o6.includes("wallet_connect")) {
      const f6 = await i6.getItem(r5);
      await t3.setItem(r5, f6), m5.push(r5);
    }
  }
  await t3.setItem(n6, y3), e4(t3), j3(i6, m5);
};
var j3 = async (i6, t3) => {
  t3.length && t3.forEach(async (e4) => {
    await i6.removeItem(e4);
  });
};
var h3 = class {
  constructor() {
    this.initialized = false, this.setInitialized = (e4) => {
      this.storage = e4, this.initialized = true;
    };
    const t3 = new K2();
    this.storage = t3;
    try {
      const e4 = new _4();
      O2(t3, e4, this.setInitialized);
    } catch {
      this.initialized = true;
    }
  }
  async getKeys() {
    return await this.initialize(), this.storage.getKeys();
  }
  async getEntries() {
    return await this.initialize(), this.storage.getEntries();
  }
  async getItem(t3) {
    return await this.initialize(), this.storage.getItem(t3);
  }
  async setItem(t3, e4) {
    return await this.initialize(), this.storage.setItem(t3, e4);
  }
  async removeItem(t3) {
    return await this.initialize(), this.storage.removeItem(t3);
  }
  async initialize() {
    this.initialized || await new Promise((t3) => {
      const e4 = setInterval(() => {
        this.initialized && (clearInterval(e4), t3());
      }, 20);
    });
  }
};

// node_modules/@walletconnect/heartbeat/dist/index.es.js
var import_events = __toESM(require_events());
var import_time = __toESM(require_cjs4());

// node_modules/@walletconnect/events/dist/esm/events.js
var IEvents = class {
};

// node_modules/@walletconnect/heartbeat/dist/index.es.js
var n2 = class extends IEvents {
  constructor(e4) {
    super();
  }
};
var s3 = import_time.FIVE_SECONDS;
var r3 = { pulse: "heartbeat_pulse" };
var i3 = class _i2 extends n2 {
  constructor(e4) {
    super(e4), this.events = new import_events.EventEmitter(), this.interval = s3, this.interval = (e4 == null ? void 0 : e4.interval) || s3;
  }
  static async init(e4) {
    const t3 = new _i2(e4);
    return await t3.init(), t3;
  }
  async init() {
    await this.initialize();
  }
  stop() {
    clearInterval(this.intervalRef);
  }
  on(e4, t3) {
    this.events.on(e4, t3);
  }
  once(e4, t3) {
    this.events.once(e4, t3);
  }
  off(e4, t3) {
    this.events.off(e4, t3);
  }
  removeListener(e4, t3) {
    this.events.removeListener(e4, t3);
  }
  async initialize() {
    this.intervalRef = setInterval(() => this.pulse(), (0, import_time.toMiliseconds)(this.interval));
  }
  pulse() {
    this.events.emit(r3.pulse);
  }
};

// node_modules/@walletconnect/logger/dist/index.es.js
var import_pino = __toESM(require_browser2());
var import_pino2 = __toESM(require_browser2());
var c4 = { level: "info" };
var n3 = "custom_context";
var l5 = 1e3 * 1024;
var O3 = class {
  constructor(e4) {
    this.nodeValue = e4, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;
  }
  get value() {
    return this.nodeValue;
  }
  get size() {
    return this.sizeInBytes;
  }
};
var d3 = class {
  constructor(e4) {
    this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e4, this.sizeInBytes = 0;
  }
  append(e4) {
    const t3 = new O3(e4);
    if (t3.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${e4} with size ${t3.size}`);
    for (; this.size + t3.size > this.maxSizeInBytes; ) this.shift();
    this.head ? (this.tail && (this.tail.next = t3), this.tail = t3) : (this.head = t3, this.tail = t3), this.lengthInNodes++, this.sizeInBytes += t3.size;
  }
  shift() {
    if (!this.head) return;
    const e4 = this.head;
    this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e4.size;
  }
  toArray() {
    const e4 = [];
    let t3 = this.head;
    for (; t3 !== null; ) e4.push(t3.value), t3 = t3.next;
    return e4;
  }
  get length() {
    return this.lengthInNodes;
  }
  get size() {
    return this.sizeInBytes;
  }
  toOrderedArray() {
    return Array.from(this);
  }
  [Symbol.iterator]() {
    let e4 = this.head;
    return { next: () => {
      if (!e4) return { done: true, value: null };
      const t3 = e4.value;
      return e4 = e4.next, { done: false, value: t3 };
    } };
  }
};
var L3 = class {
  constructor(e4, t3 = l5) {
    this.level = e4 ?? "error", this.levelValue = import_pino.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = t3, this.logs = new d3(this.MAX_LOG_SIZE_IN_BYTES);
  }
  forwardToConsole(e4, t3) {
    t3 === import_pino.levels.values.error ? console.error(e4) : t3 === import_pino.levels.values.warn ? console.warn(e4) : t3 === import_pino.levels.values.debug ? console.debug(e4) : t3 === import_pino.levels.values.trace ? console.trace(e4) : console.log(e4);
  }
  appendToLogs(e4) {
    this.logs.append(safeJsonStringify3({ timestamp: (/* @__PURE__ */ new Date()).toISOString(), log: e4 }));
    const t3 = typeof e4 == "string" ? JSON.parse(e4).level : e4.level;
    t3 >= this.levelValue && this.forwardToConsole(e4, t3);
  }
  getLogs() {
    return this.logs;
  }
  clearLogs() {
    this.logs = new d3(this.MAX_LOG_SIZE_IN_BYTES);
  }
  getLogArray() {
    return Array.from(this.logs);
  }
  logsToBlob(e4) {
    const t3 = this.getLogArray();
    return t3.push(safeJsonStringify3({ extraMetadata: e4 })), new Blob(t3, { type: "application/json" });
  }
};
var m3 = class {
  constructor(e4, t3 = l5) {
    this.baseChunkLogger = new L3(e4, t3);
  }
  write(e4) {
    this.baseChunkLogger.appendToLogs(e4);
  }
  getLogs() {
    return this.baseChunkLogger.getLogs();
  }
  clearLogs() {
    this.baseChunkLogger.clearLogs();
  }
  getLogArray() {
    return this.baseChunkLogger.getLogArray();
  }
  logsToBlob(e4) {
    return this.baseChunkLogger.logsToBlob(e4);
  }
  downloadLogsBlobInBrowser(e4) {
    const t3 = URL.createObjectURL(this.logsToBlob(e4)), o6 = document.createElement("a");
    o6.href = t3, o6.download = `walletconnect-logs-${(/* @__PURE__ */ new Date()).toISOString()}.txt`, document.body.appendChild(o6), o6.click(), document.body.removeChild(o6), URL.revokeObjectURL(t3);
  }
};
var B2 = class {
  constructor(e4, t3 = l5) {
    this.baseChunkLogger = new L3(e4, t3);
  }
  write(e4) {
    this.baseChunkLogger.appendToLogs(e4);
  }
  getLogs() {
    return this.baseChunkLogger.getLogs();
  }
  clearLogs() {
    this.baseChunkLogger.clearLogs();
  }
  getLogArray() {
    return this.baseChunkLogger.getLogArray();
  }
  logsToBlob(e4) {
    return this.baseChunkLogger.logsToBlob(e4);
  }
};
var x4 = Object.defineProperty;
var S2 = Object.defineProperties;
var _5 = Object.getOwnPropertyDescriptors;
var p3 = Object.getOwnPropertySymbols;
var T4 = Object.prototype.hasOwnProperty;
var z4 = Object.prototype.propertyIsEnumerable;
var f3 = (r5, e4, t3) => e4 in r5 ? x4(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var i4 = (r5, e4) => {
  for (var t3 in e4 || (e4 = {})) T4.call(e4, t3) && f3(r5, t3, e4[t3]);
  if (p3) for (var t3 of p3(e4)) z4.call(e4, t3) && f3(r5, t3, e4[t3]);
  return r5;
};
var g3 = (r5, e4) => S2(r5, _5(e4));
function k4(r5) {
  return g3(i4({}, r5), { level: (r5 == null ? void 0 : r5.level) || c4.level });
}
function v3(r5, e4 = n3) {
  return r5[e4] || "";
}
function b2(r5, e4, t3 = n3) {
  return r5[t3] = e4, r5;
}
function y4(r5, e4 = n3) {
  let t3 = "";
  return typeof r5.bindings > "u" ? t3 = v3(r5, e4) : t3 = r5.bindings().context || "", t3;
}
function w4(r5, e4, t3 = n3) {
  const o6 = y4(r5, t3);
  return o6.trim() ? `${o6}/${e4}` : e4;
}
function E5(r5, e4, t3 = n3) {
  const o6 = w4(r5, e4, t3), a6 = r5.child({ context: o6 });
  return b2(a6, o6, t3);
}
function C3(r5) {
  var e4, t3;
  const o6 = new m3((e4 = r5.opts) == null ? void 0 : e4.level, r5.maxSizeInBytes);
  return { logger: (0, import_pino.default)(g3(i4({}, r5.opts), { level: "trace", browser: g3(i4({}, (t3 = r5.opts) == null ? void 0 : t3.browser), { write: (a6) => o6.write(a6) }) })), chunkLoggerController: o6 };
}
function I3(r5) {
  var e4;
  const t3 = new B2((e4 = r5.opts) == null ? void 0 : e4.level, r5.maxSizeInBytes);
  return { logger: (0, import_pino.default)(g3(i4({}, r5.opts), { level: "trace" }), t3), chunkLoggerController: t3 };
}
function A4(r5) {
  return typeof r5.loggerOverride < "u" && typeof r5.loggerOverride != "string" ? { logger: r5.loggerOverride, chunkLoggerController: null } : typeof window < "u" ? C3(r5) : I3(r5);
}

// node_modules/@walletconnect/types/dist/index.es.js
var import_events4 = __toESM(require_events());
var n4 = class extends IEvents {
  constructor(s5) {
    super(), this.opts = s5, this.protocol = "wc", this.version = 2;
  }
};
var h5 = class extends IEvents {
  constructor(s5, t3) {
    super(), this.core = s5, this.logger = t3, this.records = /* @__PURE__ */ new Map();
  }
};
var a4 = class {
  constructor(s5, t3) {
    this.logger = s5, this.core = t3;
  }
};
var u3 = class extends IEvents {
  constructor(s5, t3) {
    super(), this.relayer = s5, this.logger = t3;
  }
};
var g4 = class extends IEvents {
  constructor(s5) {
    super();
  }
};
var p4 = class {
  constructor(s5, t3, o6, M4) {
    this.core = s5, this.logger = t3, this.name = o6;
  }
};
var d4 = class extends IEvents {
  constructor(s5, t3) {
    super(), this.relayer = s5, this.logger = t3;
  }
};
var E6 = class extends IEvents {
  constructor(s5, t3) {
    super(), this.core = s5, this.logger = t3;
  }
};
var y5 = class {
  constructor(s5, t3) {
    this.projectId = s5, this.logger = t3;
  }
};
var v4 = class {
  constructor(s5, t3) {
    this.projectId = s5, this.logger = t3;
  }
};
var b3 = class {
  constructor(s5) {
    this.opts = s5, this.protocol = "wc", this.version = 2;
  }
};
var w5 = class {
  constructor(s5) {
    this.client = s5;
  }
};

// node_modules/@walletconnect/relay-auth/dist/esm/api.js
var ed25519 = __toESM(require_ed25519());
var import_random = __toESM(require_random());
var import_time2 = __toESM(require_cjs4());

// node_modules/@walletconnect/relay-auth/dist/esm/constants.js
var JWT_IRIDIUM_ALG = "EdDSA";
var JWT_IRIDIUM_TYP = "JWT";
var JWT_DELIMITER = ".";
var JWT_ENCODING = "base64url";
var JSON_ENCODING = "utf8";
var DATA_ENCODING = "utf8";
var DID_DELIMITER = ":";
var DID_PREFIX = "did";
var DID_METHOD = "key";
var MULTICODEC_ED25519_ENCODING = "base58btc";
var MULTICODEC_ED25519_BASE = "z";
var MULTICODEC_ED25519_HEADER = "K36";
var KEY_PAIR_SEED_LENGTH = 32;

// node_modules/uint8arrays/esm/src/alloc.js
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return globalThis.Buffer.allocUnsafe(size);
  }
  return new Uint8Array(size);
}

// node_modules/uint8arrays/esm/src/concat.js
function concat(arrays, length2) {
  if (!length2) {
    length2 = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = allocUnsafe(length2);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return output;
}

// node_modules/multiformats/esm/src/bases/identity.js
var identity_exports = {};
__export(identity_exports, {
  identity: () => identity
});

// node_modules/multiformats/esm/vendor/base-x.js
function base(ALPHABET, name2) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j6 = 0; j6 < BASE_MAP.length; j6++) {
    BASE_MAP[j6] = 255;
  }
  for (var i6 = 0; i6 < ALPHABET.length; i6++) {
    var x5 = ALPHABET.charAt(i6);
    var xc = x5.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x5 + " is ambiguous");
    }
    BASE_MAP[xc] = i6;
  }
  var BASE = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE);
  function encode5(source) {
    if (source instanceof Uint8Array) ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length2 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i7 = 0;
      for (var it1 = size - 1; (carry !== 0 || i7 < length2) && it1 !== -1; it1--, i7++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE >>> 0;
        carry = carry / BASE >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i7;
      pbegin++;
    }
    var it2 = size - length2;
    while (it2 !== size && b58[it2] === 0) {
      it2++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it2 < size; ++it2) {
      str += ALPHABET.charAt(b58[it2]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length2 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i7 = 0;
      for (var it3 = size - 1; (carry !== 0 || i7 < length2) && it3 !== -1; it3--, i7++) {
        carry += BASE * b256[it3] >>> 0;
        b256[it3] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i7;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size - length2;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j7 = zeroes;
    while (it4 !== size) {
      vch[j7++] = b256[it4++];
    }
    return vch;
  }
  function decode6(string2) {
    var buffer = decodeUnsafe(string2);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name2} character`);
  }
  return {
    encode: encode5,
    decodeUnsafe,
    decode: decode6
  };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
var base_x_default = _brrp__multiformats_scope_baseX;

// node_modules/multiformats/esm/src/bytes.js
var empty = new Uint8Array(0);
var equals = (aa2, bb) => {
  if (aa2 === bb)
    return true;
  if (aa2.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii = 0; ii < aa2.byteLength; ii++) {
    if (aa2[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
};
var coerce = (o6) => {
  if (o6 instanceof Uint8Array && o6.constructor.name === "Uint8Array")
    return o6;
  if (o6 instanceof ArrayBuffer)
    return new Uint8Array(o6);
  if (ArrayBuffer.isView(o6)) {
    return new Uint8Array(o6.buffer, o6.byteOffset, o6.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
};
var fromString = (str) => new TextEncoder().encode(str);
var toString = (b5) => new TextDecoder().decode(b5);

// node_modules/multiformats/esm/src/bases/base.js
var Encoder = class {
  constructor(name2, prefix, baseEncode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes) {
    if (bytes instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder = class {
  constructor(name2, prefix, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  or(decoder) {
    return or(this, decoder);
  }
};
var ComposedDecoder = class {
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder) {
    return or(this, decoder);
  }
  decode(input) {
    const prefix = input[0];
    const decoder = this.decoders[prefix];
    if (decoder) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
var or = (left, right) => new ComposedDecoder({
  ...left.decoders || { [left.prefix]: left },
  ...right.decoders || { [right.prefix]: right }
});
var Codec = class {
  constructor(name2, prefix, baseEncode, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name2, prefix, baseEncode);
    this.decoder = new Decoder(name2, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
};
var from = ({ name: name2, prefix, encode: encode5, decode: decode6 }) => new Codec(name2, prefix, encode5, decode6);
var baseX = ({ prefix, name: name2, alphabet: alphabet2 }) => {
  const { encode: encode5, decode: decode6 } = base_x_default(alphabet2, name2);
  return from({
    prefix,
    name: name2,
    encode: encode5,
    decode: (text) => coerce(decode6(text))
  });
};
var decode = (string2, alphabet2, bitsPerChar, name2) => {
  const codes = {};
  for (let i6 = 0; i6 < alphabet2.length; ++i6) {
    codes[alphabet2[i6]] = i6;
  }
  let end = string2.length;
  while (string2[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i6 = 0; i6 < end; ++i6) {
    const value = codes[string2[i6]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name2} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
};
var encode = (data, alphabet2, bitsPerChar) => {
  const pad = alphabet2[alphabet2.length - 1] === "=";
  const mask = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i6 = 0; i6 < data.length; ++i6) {
    buffer = buffer << 8 | data[i6];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet2[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet2[mask & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += "=";
    }
  }
  return out;
};
var rfc4648 = ({ name: name2, prefix, bitsPerChar, alphabet: alphabet2 }) => {
  return from({
    prefix,
    name: name2,
    encode(input) {
      return encode(input, alphabet2, bitsPerChar);
    },
    decode(input) {
      return decode(input, alphabet2, bitsPerChar, name2);
    }
  });
};

// node_modules/multiformats/esm/src/bases/identity.js
var identity = from({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString(buf),
  decode: (str) => fromString(str)
});

// node_modules/multiformats/esm/src/bases/base2.js
var base2_exports = {};
__export(base2_exports, {
  base2: () => base2
});
var base2 = rfc4648({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/multiformats/esm/src/bases/base8.js
var base8_exports = {};
__export(base8_exports, {
  base8: () => base8
});
var base8 = rfc4648({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/multiformats/esm/src/bases/base10.js
var base10_exports = {};
__export(base10_exports, {
  base10: () => base10
});
var base10 = baseX({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/multiformats/esm/src/bases/base16.js
var base16_exports = {};
__export(base16_exports, {
  base16: () => base16,
  base16upper: () => base16upper
});
var base16 = rfc4648({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper = rfc4648({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/multiformats/esm/src/bases/base32.js
var base32_exports = {};
__export(base32_exports, {
  base32: () => base32,
  base32hex: () => base32hex,
  base32hexpad: () => base32hexpad,
  base32hexpadupper: () => base32hexpadupper,
  base32hexupper: () => base32hexupper,
  base32pad: () => base32pad,
  base32padupper: () => base32padupper,
  base32upper: () => base32upper,
  base32z: () => base32z
});
var base32 = rfc4648({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper = rfc4648({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad = rfc4648({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper = rfc4648({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex = rfc4648({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper = rfc4648({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad = rfc4648({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper = rfc4648({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z = rfc4648({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/multiformats/esm/src/bases/base36.js
var base36_exports = {};
__export(base36_exports, {
  base36: () => base36,
  base36upper: () => base36upper
});
var base36 = baseX({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper = baseX({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base58.js
var base58_exports = {};
__export(base58_exports, {
  base58btc: () => base58btc,
  base58flickr: () => base58flickr
});
var base58btc = baseX({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr = baseX({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base64.js
var base64_exports = {};
__export(base64_exports, {
  base64: () => base64,
  base64pad: () => base64pad,
  base64url: () => base64url,
  base64urlpad: () => base64urlpad
});
var base64 = rfc4648({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad = rfc4648({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url = rfc4648({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad = rfc4648({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/multiformats/esm/src/bases/base256emoji.js
var base256emoji_exports = {};
__export(base256emoji_exports, {
  base256emoji: () => base256emoji
});
var alphabet = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var alphabetBytesToChars = alphabet.reduce((p5, c7, i6) => {
  p5[i6] = c7;
  return p5;
}, []);
var alphabetCharsToBytes = alphabet.reduce((p5, c7, i6) => {
  p5[c7.codePointAt(0)] = i6;
  return p5;
}, []);
function encode2(data) {
  return data.reduce((p5, c7) => {
    p5 += alphabetBytesToChars[c7];
    return p5;
  }, "");
}
function decode2(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes[char.codePointAt(0)];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji = from({
  prefix: "🚀",
  name: "base256emoji",
  encode: encode2,
  decode: decode2
});

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha2_browser_exports = {};
__export(sha2_browser_exports, {
  sha256: () => sha256,
  sha512: () => sha512
});

// node_modules/multiformats/esm/vendor/varint.js
var encode_1 = encode3;
var MSB = 128;
var REST = 127;
var MSBALL = ~REST;
var INT = Math.pow(2, 31);
function encode3(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode3.bytes = offset - oldOffset + 1;
  return out;
}
var decode3 = read;
var MSB$1 = 128;
var REST$1 = 127;
function read(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b5, l6 = buf.length;
  do {
    if (counter >= l6) {
      read.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b5 = buf[counter++];
    res += shift < 28 ? (b5 & REST$1) << shift : (b5 & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b5 >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N22 = Math.pow(2, 14);
var N32 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function(value) {
  return value < N1 ? 1 : value < N22 ? 2 : value < N32 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
  encode: encode_1,
  decode: decode3,
  encodingLength: length
};
var _brrp_varint = varint;
var varint_default = _brrp_varint;

// node_modules/multiformats/esm/src/varint.js
var decode4 = (data, offset = 0) => {
  const code2 = varint_default.decode(data, offset);
  return [
    code2,
    varint_default.decode.bytes
  ];
};
var encodeTo = (int, target, offset = 0) => {
  varint_default.encode(int, target, offset);
  return target;
};
var encodingLength = (int) => {
  return varint_default.encodingLength(int);
};

// node_modules/multiformats/esm/src/hashes/digest.js
var create = (code2, digest2) => {
  const size = digest2.byteLength;
  const sizeOffset = encodingLength(code2);
  const digestOffset = sizeOffset + encodingLength(size);
  const bytes = new Uint8Array(digestOffset + size);
  encodeTo(code2, bytes, 0);
  encodeTo(size, bytes, sizeOffset);
  bytes.set(digest2, digestOffset);
  return new Digest(code2, size, digest2, bytes);
};
var decode5 = (multihash) => {
  const bytes = coerce(multihash);
  const [code2, sizeOffset] = decode4(bytes);
  const [size, digestOffset] = decode4(bytes.subarray(sizeOffset));
  const digest2 = bytes.subarray(sizeOffset + digestOffset);
  if (digest2.byteLength !== size) {
    throw new Error("Incorrect length");
  }
  return new Digest(code2, size, digest2, bytes);
};
var equals2 = (a6, b5) => {
  if (a6 === b5) {
    return true;
  } else {
    return a6.code === b5.code && a6.size === b5.size && equals(a6.bytes, b5.bytes);
  }
};
var Digest = class {
  constructor(code2, size, digest2, bytes) {
    this.code = code2;
    this.size = size;
    this.digest = digest2;
    this.bytes = bytes;
  }
};

// node_modules/multiformats/esm/src/hashes/hasher.js
var from2 = ({ name: name2, code: code2, encode: encode5 }) => new Hasher(name2, code2, encode5);
var Hasher = class {
  constructor(name2, code2, encode5) {
    this.name = name2;
    this.code = code2;
    this.encode = encode5;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create(this.code, result) : result.then((digest2) => create(this.code, digest2));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha = (name2) => async (data) => new Uint8Array(await crypto.subtle.digest(name2, data));
var sha256 = from2({
  name: "sha2-256",
  code: 18,
  encode: sha("SHA-256")
});
var sha512 = from2({
  name: "sha2-512",
  code: 19,
  encode: sha("SHA-512")
});

// node_modules/multiformats/esm/src/hashes/identity.js
var identity_exports2 = {};
__export(identity_exports2, {
  identity: () => identity2
});
var code = 0;
var name = "identity";
var encode4 = coerce;
var digest = (input) => create(code, encode4(input));
var identity2 = {
  code,
  name,
  encode: encode4,
  digest
};

// node_modules/multiformats/esm/src/codecs/json.js
var textEncoder = new TextEncoder();
var textDecoder = new TextDecoder();

// node_modules/multiformats/esm/src/cid.js
var CID = class _CID {
  constructor(version2, code2, multihash, bytes) {
    this.code = code2;
    this.version = version2;
    this.multihash = multihash;
    this.bytes = bytes;
    this.byteOffset = bytes.byteOffset;
    this.byteLength = bytes.byteLength;
    this.asCID = this;
    this._baseCache = /* @__PURE__ */ new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  toV0() {
    switch (this.version) {
      case 0: {
        return this;
      }
      default: {
        const { code: code2, multihash } = this;
        if (code2 !== DAG_PB_CODE) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return _CID.createV0(multihash);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code2, digest: digest2 } = this.multihash;
        const multihash = create(code2, digest2);
        return _CID.createV1(this.code, multihash);
      }
      case 1: {
        return this;
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return other && this.code === other.code && this.version === other.version && equals2(this.multihash, other.multihash);
  }
  toString(base3) {
    const { bytes, version: version2, _baseCache } = this;
    switch (version2) {
      case 0:
        return toStringV0(bytes, _baseCache, base3 || base58btc.encoder);
      default:
        return toStringV1(bytes, _baseCache, base3 || base32.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(value) {
    deprecate(/^0\.0/, IS_CID_DEPRECATION);
    return !!(value && (value[cidSymbol] || value.asCID === value));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(value) {
    if (value instanceof _CID) {
      return value;
    } else if (value != null && value.asCID === value) {
      const { version: version2, code: code2, multihash, bytes } = value;
      return new _CID(version2, code2, multihash, bytes || encodeCID(version2, code2, multihash.bytes));
    } else if (value != null && value[cidSymbol] === true) {
      const { version: version2, multihash, code: code2 } = value;
      const digest2 = decode5(multihash);
      return _CID.create(version2, code2, digest2);
    } else {
      return null;
    }
  }
  static create(version2, code2, digest2) {
    if (typeof code2 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    switch (version2) {
      case 0: {
        if (code2 !== DAG_PB_CODE) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);
        } else {
          return new _CID(version2, code2, digest2, digest2.bytes);
        }
      }
      case 1: {
        const bytes = encodeCID(version2, code2, digest2.bytes);
        return new _CID(version2, code2, digest2, bytes);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  static createV0(digest2) {
    return _CID.create(0, DAG_PB_CODE, digest2);
  }
  static createV1(code2, digest2) {
    return _CID.create(1, code2, digest2);
  }
  static decode(bytes) {
    const [cid, remainder] = _CID.decodeFirst(bytes);
    if (remainder.length) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  static decodeFirst(bytes) {
    const specs = _CID.inspectBytes(bytes);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest2 = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? _CID.createV0(digest2) : _CID.createV1(specs.codec, digest2);
    return [
      cid,
      bytes.subarray(specs.size)
    ];
  }
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i6, length2] = decode4(initialBytes.subarray(offset));
      offset += length2;
      return i6;
    };
    let version2 = next();
    let codec = DAG_PB_CODE;
    if (version2 === 18) {
      version2 = 0;
      offset = 0;
    } else if (version2 === 1) {
      codec = next();
    }
    if (version2 !== 0 && version2 !== 1) {
      throw new RangeError(`Invalid CID version ${version2}`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return {
      version: version2,
      codec,
      multihashCode,
      digestSize,
      multihashSize,
      size
    };
  }
  static parse(source, base3) {
    const [prefix, bytes] = parseCIDtoBytes(source, base3);
    const cid = _CID.decode(bytes);
    cid._baseCache.set(prefix, source);
    return cid;
  }
};
var parseCIDtoBytes = (source, base3) => {
  switch (source[0]) {
    case "Q": {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(`${base58btc.prefix}${source}`)
      ];
    }
    case base58btc.prefix: {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(source)
      ];
    }
    case base32.prefix: {
      const decoder = base3 || base32;
      return [
        base32.prefix,
        decoder.decode(source)
      ];
    }
    default: {
      if (base3 == null) {
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      }
      return [
        source[0],
        base3.decode(source)
      ];
    }
  }
};
var toStringV0 = (bytes, cache, base3) => {
  const { prefix } = base3;
  if (prefix !== base58btc.prefix) {
    throw Error(`Cannot string encode V0 in ${base3.name} encoding`);
  }
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes).slice(1);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var toStringV1 = (bytes, cache, base3) => {
  const { prefix } = base3;
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE = 112;
var SHA_256_CODE = 18;
var encodeCID = (version2, code2, multihash) => {
  const codeOffset = encodingLength(version2);
  const hashOffset = codeOffset + encodingLength(code2);
  const bytes = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo(version2, bytes, 0);
  encodeTo(code2, bytes, codeOffset);
  bytes.set(multihash, hashOffset);
  return bytes;
};
var cidSymbol = Symbol.for("@ipld/js-cid/CID");
var readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
var hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
var version = "0.0.0-dev";
var deprecate = (range, message) => {
  if (range.test(version)) {
    console.warn(message);
  } else {
    throw new Error(message);
  }
};
var IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

// node_modules/multiformats/esm/src/basics.js
var bases = {
  ...identity_exports,
  ...base2_exports,
  ...base8_exports,
  ...base10_exports,
  ...base16_exports,
  ...base32_exports,
  ...base36_exports,
  ...base58_exports,
  ...base64_exports,
  ...base256emoji_exports
};
var hashes = {
  ...sha2_browser_exports,
  ...identity_exports2
};

// node_modules/uint8arrays/esm/src/util/bases.js
function createCodec(name2, prefix, encode5, decode6) {
  return {
    name: name2,
    prefix,
    encoder: {
      name: name2,
      prefix,
      encode: encode5
    },
    decoder: { decode: decode6 }
  };
}
var string = createCodec("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii = createCodec("ascii", "a", (buf) => {
  let string2 = "a";
  for (let i6 = 0; i6 < buf.length; i6++) {
    string2 += String.fromCharCode(buf[i6]);
  }
  return string2;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe(str.length);
  for (let i6 = 0; i6 < str.length; i6++) {
    buf[i6] = str.charCodeAt(i6);
  }
  return buf;
});
var BASES = {
  utf8: string,
  "utf-8": string,
  hex: bases.base16,
  latin1: ascii,
  ascii,
  binary: ascii,
  ...bases
};
var bases_default = BASES;

// node_modules/uint8arrays/esm/src/to-string.js
function toString2(array, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base3.encoder.encode(array).substring(1);
}

// node_modules/uint8arrays/esm/src/from-string.js
function fromString2(string2, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(string2, "utf8");
  }
  return base3.decoder.decode(`${base3.prefix}${string2}`);
}

// node_modules/@walletconnect/relay-auth/dist/esm/utils.js
function encodeJSON(val) {
  return toString2(fromString2(safeJsonStringify3(val), JSON_ENCODING), JWT_ENCODING);
}
function encodeIss(publicKey) {
  const header = fromString2(MULTICODEC_ED25519_HEADER, MULTICODEC_ED25519_ENCODING);
  const multicodec = MULTICODEC_ED25519_BASE + toString2(concat([header, publicKey]), MULTICODEC_ED25519_ENCODING);
  return [DID_PREFIX, DID_METHOD, multicodec].join(DID_DELIMITER);
}
function encodeSig(bytes) {
  return toString2(bytes, JWT_ENCODING);
}
function encodeData(params) {
  return fromString2([encodeJSON(params.header), encodeJSON(params.payload)].join(JWT_DELIMITER), DATA_ENCODING);
}
function encodeJWT(params) {
  return [
    encodeJSON(params.header),
    encodeJSON(params.payload),
    encodeSig(params.signature)
  ].join(JWT_DELIMITER);
}

// node_modules/@walletconnect/relay-auth/dist/esm/api.js
function generateKeyPair(seed = (0, import_random.randomBytes)(KEY_PAIR_SEED_LENGTH)) {
  return ed25519.generateKeyPairFromSeed(seed);
}
async function signJWT(sub, aud, ttl, keyPair, iat = (0, import_time2.fromMiliseconds)(Date.now())) {
  const header = { alg: JWT_IRIDIUM_ALG, typ: JWT_IRIDIUM_TYP };
  const iss = encodeIss(keyPair.publicKey);
  const exp = iat + ttl;
  const payload = { iss, sub, aud, iat, exp };
  const data = encodeData({ header, payload });
  const signature = ed25519.sign(keyPair.secretKey, data);
  return encodeJWT({ header, payload, signature });
}

// node_modules/detect-browser/es/index.js
var __spreadArray = function(to2, from3, pack) {
  if (pack || arguments.length === 2) for (var i6 = 0, l6 = from3.length, ar3; i6 < l6; i6++) {
    if (ar3 || !(i6 in from3)) {
      if (!ar3) ar3 = Array.prototype.slice.call(from3, 0, i6);
      ar3[i6] = from3[i6];
    }
  }
  return to2.concat(ar3 || Array.prototype.slice.call(from3));
};
var BrowserInfo2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function BrowserInfo3(name2, version2, os3) {
      this.name = name2;
      this.version = version2;
      this.os = os3;
      this.type = "browser";
    }
    return BrowserInfo3;
  }()
);
var NodeInfo2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function NodeInfo3(version2) {
      this.version = version2;
      this.type = "node";
      this.name = "node";
      this.os = process.platform;
    }
    return NodeInfo3;
  }()
);
var SearchBotDeviceInfo2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function SearchBotDeviceInfo3(name2, version2, os3, bot) {
      this.name = name2;
      this.version = version2;
      this.os = os3;
      this.bot = bot;
      this.type = "bot-device";
    }
    return SearchBotDeviceInfo3;
  }()
);
var BotInfo2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function BotInfo3() {
      this.type = "bot";
      this.bot = true;
      this.name = "bot";
      this.version = null;
      this.os = null;
    }
    return BotInfo3;
  }()
);
var ReactNativeInfo2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function ReactNativeInfo3() {
      this.type = "react-native";
      this.name = "react-native";
      this.version = null;
      this.os = null;
    }
    return ReactNativeInfo3;
  }()
);
var SEARCHBOX_UA_REGEX2 = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX2 = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS2 = 3;
var userAgentRules2 = [
  ["aol", /AOLShield\/([0-9\._]+)/],
  ["edge", /Edge\/([0-9\._]+)/],
  ["edge-ios", /EdgiOS\/([0-9\._]+)/],
  ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
  ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
  ["samsung", /SamsungBrowser\/([0-9\.]+)/],
  ["silk", /\bSilk\/([0-9._-]+)\b/],
  ["miui", /MiuiBrowser\/([0-9\.]+)$/],
  ["beaker", /BeakerBrowser\/([0-9\.]+)/],
  ["edge-chromium", /EdgA?\/([0-9\.]+)/],
  [
    "chromium-webview",
    /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
  ],
  ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
  ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
  ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
  ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
  ["fxios", /FxiOS\/([0-9\.]+)/],
  ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
  ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
  ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
  ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
  ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
  ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
  ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
  ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
  ["ie", /MSIE\s(7\.0)/],
  ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
  ["android", /Android\s([0-9\.]+)/],
  ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
  ["safari", /Version\/([0-9\._]+).*Safari/],
  ["facebook", /FB[AS]V\/([0-9\.]+)/],
  ["instagram", /Instagram\s([0-9\.]+)/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
  ["curl", /^curl\/([0-9\.]+)$/],
  ["searchbot", SEARCHBOX_UA_REGEX2]
];
var operatingSystemRules2 = [
  ["iOS", /iP(hone|od|ad)/],
  ["Android OS", /Android/],
  ["BlackBerry OS", /BlackBerry|BB10/],
  ["Windows Mobile", /IEMobile/],
  ["Amazon OS", /Kindle/],
  ["Windows 3.11", /Win16/],
  ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
  ["Windows 98", /(Windows 98)|(Win98)/],
  ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
  ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
  ["Windows Server 2003", /(Windows NT 5.2)/],
  ["Windows Vista", /(Windows NT 6.0)/],
  ["Windows 7", /(Windows NT 6.1)/],
  ["Windows 8", /(Windows NT 6.2)/],
  ["Windows 8.1", /(Windows NT 6.3)/],
  ["Windows 10", /(Windows NT 10.0)/],
  ["Windows ME", /Windows ME/],
  ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
  ["Open BSD", /OpenBSD/],
  ["Sun OS", /SunOS/],
  ["Chrome OS", /CrOS/],
  ["Linux", /(Linux)|(X11)/],
  ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
  ["QNX", /QNX/],
  ["BeOS", /BeOS/],
  ["OS/2", /OS\/2/]
];
function detect2(userAgent) {
  if (!!userAgent) {
    return parseUserAgent2(userAgent);
  }
  if (typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative") {
    return new ReactNativeInfo2();
  }
  if (typeof navigator !== "undefined") {
    return parseUserAgent2(navigator.userAgent);
  }
  return getNodeVersion2();
}
function matchUserAgent2(ua2) {
  return ua2 !== "" && userAgentRules2.reduce(function(matched, _a2) {
    var browser = _a2[0], regex = _a2[1];
    if (matched) {
      return matched;
    }
    var uaMatch = regex.exec(ua2);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}
function parseUserAgent2(ua2) {
  var matchedRule = matchUserAgent2(ua2);
  if (!matchedRule) {
    return null;
  }
  var name2 = matchedRule[0], match = matchedRule[1];
  if (name2 === "searchbot") {
    return new BotInfo2();
  }
  var versionParts = match[1] && match[1].split(".").join("_").split("_").slice(0, 3);
  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS2) {
      versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts2(REQUIRED_VERSION_PARTS2 - versionParts.length), true);
    }
  } else {
    versionParts = [];
  }
  var version2 = versionParts.join(".");
  var os3 = detectOS3(ua2);
  var searchBotMatch = SEARCHBOT_OS_REGEX2.exec(ua2);
  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo2(name2, version2, os3, searchBotMatch[1]);
  }
  return new BrowserInfo2(name2, version2, os3);
}
function detectOS3(ua2) {
  for (var ii = 0, count = operatingSystemRules2.length; ii < count; ii++) {
    var _a2 = operatingSystemRules2[ii], os3 = _a2[0], regex = _a2[1];
    var match = regex.exec(ua2);
    if (match) {
      return os3;
    }
  }
  return null;
}
function getNodeVersion2() {
  var isNode3 = typeof process !== "undefined" && process.version;
  return isNode3 ? new NodeInfo2(process.version.slice(1)) : null;
}
function createVersionParts2(count) {
  var output = [];
  for (var ii = 0; ii < count; ii++) {
    output.push("0");
  }
  return output;
}

// node_modules/@walletconnect/utils/dist/index.es.js
var import_time3 = __toESM(require_cjs4());
var import_window_getters = __toESM(require_cjs5());
var import_window_metadata = __toESM(require_cjs6());
var Nr = __toESM(require_query_string());
var import_chacha20poly1305 = __toESM(require_chacha20poly1305());
var import_hkdf = __toESM(require_hkdf());
var import_random2 = __toESM(require_random());
var import_sha256 = __toESM(require_sha256());
var cn = __toESM(require_x25519());

// node_modules/@walletconnect/relay-api/dist/index.es.js
var C4 = { waku: { publish: "waku_publish", batchPublish: "waku_batchPublish", subscribe: "waku_subscribe", batchSubscribe: "waku_batchSubscribe", subscription: "waku_subscription", unsubscribe: "waku_unsubscribe", batchUnsubscribe: "waku_batchUnsubscribe", batchFetchMessages: "waku_batchFetchMessages" }, irn: { publish: "irn_publish", batchPublish: "irn_batchPublish", subscribe: "irn_subscribe", batchSubscribe: "irn_batchSubscribe", subscription: "irn_subscription", unsubscribe: "irn_unsubscribe", batchUnsubscribe: "irn_batchUnsubscribe", batchFetchMessages: "irn_batchFetchMessages" }, iridium: { publish: "iridium_publish", batchPublish: "iridium_batchPublish", subscribe: "iridium_subscribe", batchSubscribe: "iridium_batchSubscribe", subscription: "iridium_subscription", unsubscribe: "iridium_unsubscribe", batchUnsubscribe: "iridium_batchUnsubscribe", batchFetchMessages: "iridium_batchFetchMessages" } };

// node_modules/@walletconnect/utils/dist/index.es.js
var Ir = ":";
function dn(e4) {
  const [t3, r5] = e4.split(Ir);
  return { namespace: t3, reference: r5 };
}
function ci(e4) {
  const [t3, r5, i6] = e4.split(Ir);
  return { namespace: t3, reference: r5, address: i6 };
}
function _r(e4, t3) {
  return e4.includes(":") ? [e4] : t3.chains || [];
}
var Qo = Object.defineProperty;
var bn = Object.getOwnPropertySymbols;
var Jo = Object.prototype.hasOwnProperty;
var Go = Object.prototype.propertyIsEnumerable;
var yn = (e4, t3, r5) => t3 in e4 ? Qo(e4, t3, { enumerable: true, configurable: true, writable: true, value: r5 }) : e4[t3] = r5;
var wn = (e4, t3) => {
  for (var r5 in t3 || (t3 = {})) Jo.call(t3, r5) && yn(e4, r5, t3[r5]);
  if (bn) for (var r5 of bn(t3)) Go.call(t3, r5) && yn(e4, r5, t3[r5]);
  return e4;
};
var xn = "ReactNative";
var qt = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" };
var En = "js";
function pi() {
  return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
}
function er() {
  return !(0, import_window_getters.getDocument)() && !!(0, import_window_getters.getNavigator)() && navigator.product === xn;
}
function pr() {
  return !pi() && !!(0, import_window_getters.getNavigator)() && !!(0, import_window_getters.getDocument)();
}
function We() {
  return er() ? qt.reactNative : pi() ? qt.node : pr() ? qt.browser : qt.unknown;
}
function Wo() {
  var e4;
  try {
    return er() && typeof global < "u" && typeof (global == null ? void 0 : global.Application) < "u" ? (e4 = global.Application) == null ? void 0 : e4.applicationId : void 0;
  } catch {
    return;
  }
}
function Sn(e4, t3) {
  let r5 = Nr.parse(e4);
  return r5 = wn(wn({}, r5), t3), e4 = Nr.stringify(r5), e4;
}
function Xo() {
  return (0, import_window_metadata.getWindowMetadata)() || { name: "", description: "", url: "", icons: [""] };
}
function Nn() {
  if (We() === qt.reactNative && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u") {
    const { OS: r5, Version: i6 } = global.Platform;
    return [r5, i6].join("-");
  }
  const e4 = detect2();
  if (e4 === null) return "unknown";
  const t3 = e4.os ? e4.os.replace(" ", "").toLowerCase() : "unknown";
  return e4.type === "browser" ? [t3, e4.name, e4.version].join("-") : [t3, e4.version].join("-");
}
function In() {
  var e4;
  const t3 = We();
  return t3 === qt.browser ? [t3, ((e4 = (0, import_window_getters.getLocation)()) == null ? void 0 : e4.host) || "unknown"].join(":") : t3;
}
function _n(e4, t3, r5) {
  const i6 = Nn(), n6 = In();
  return [[e4, t3].join("-"), [En, r5].join("-"), i6, n6].join("/");
}
function $o({ protocol: e4, version: t3, relayUrl: r5, sdkVersion: i6, auth: n6, projectId: o6, useOnCloseEvent: h7, bundleId: p5 }) {
  const b5 = r5.split("?"), m5 = _n(e4, t3, i6), w7 = { auth: n6, ua: m5, projectId: o6, useOnCloseEvent: h7 || void 0, origin: p5 || void 0 }, y8 = Sn(b5[1] || "", w7);
  return b5[0] + "?" + y8;
}
function _e(e4, t3) {
  return e4.filter((r5) => t3.includes(r5)).length === e4.length;
}
function i0(e4) {
  return Object.fromEntries(e4.entries());
}
function n0(e4) {
  return new Map(Object.entries(e4));
}
function a0(e4 = import_time3.FIVE_MINUTES, t3) {
  const r5 = (0, import_time3.toMiliseconds)(e4 || import_time3.FIVE_MINUTES);
  let i6, n6, o6;
  return { resolve: (h7) => {
    o6 && i6 && (clearTimeout(o6), i6(h7));
  }, reject: (h7) => {
    o6 && n6 && (clearTimeout(o6), n6(h7));
  }, done: () => new Promise((h7, p5) => {
    o6 = setTimeout(() => {
      p5(new Error(t3));
    }, r5), i6 = h7, n6 = p5;
  }) };
}
function u0(e4, t3, r5) {
  return new Promise(async (i6, n6) => {
    const o6 = setTimeout(() => n6(new Error(r5)), t3);
    try {
      const h7 = await e4;
      i6(h7);
    } catch (h7) {
      n6(h7);
    }
    clearTimeout(o6);
  });
}
function vi(e4, t3) {
  if (typeof t3 == "string" && t3.startsWith(`${e4}:`)) return t3;
  if (e4.toLowerCase() === "topic") {
    if (typeof t3 != "string") throw new Error('Value must be "string" for expirer target type: topic');
    return `topic:${t3}`;
  } else if (e4.toLowerCase() === "id") {
    if (typeof t3 != "number") throw new Error('Value must be "number" for expirer target type: id');
    return `id:${t3}`;
  }
  throw new Error(`Unknown expirer target type: ${e4}`);
}
function h0(e4) {
  return vi("topic", e4);
}
function c0(e4) {
  return vi("id", e4);
}
function l0(e4) {
  const [t3, r5] = e4.split(":"), i6 = { id: void 0, topic: void 0 };
  if (t3 === "topic" && typeof r5 == "string") i6.topic = r5;
  else if (t3 === "id" && Number.isInteger(Number(r5))) i6.id = Number(r5);
  else throw new Error(`Invalid target, expected id:number or topic:string, got ${t3}:${r5}`);
  return i6;
}
function d0(e4, t3) {
  return (0, import_time3.fromMiliseconds)((t3 || Date.now()) + (0, import_time3.toMiliseconds)(e4));
}
function p0(e4) {
  return Date.now() >= (0, import_time3.toMiliseconds)(e4);
}
function v0(e4, t3) {
  return `${e4}${t3 ? `:${t3}` : ""}`;
}
function ge(e4 = [], t3 = []) {
  return [.../* @__PURE__ */ new Set([...e4, ...t3])];
}
async function m0({ id: e4, topic: t3, wcDeepLink: r5 }) {
  try {
    if (!r5) return;
    const i6 = typeof r5 == "string" ? JSON.parse(r5) : r5;
    let n6 = i6 == null ? void 0 : i6.href;
    if (typeof n6 != "string") return;
    n6.endsWith("/") && (n6 = n6.slice(0, -1));
    const o6 = `${n6}/wc?requestId=${e4}&sessionTopic=${t3}`, h7 = We();
    h7 === qt.browser ? o6.startsWith("https://") || o6.startsWith("http://") ? window.open(o6, "_blank", "noreferrer noopener") : window.open(o6, "_self", "noreferrer noopener") : h7 === qt.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(o6);
  } catch (i6) {
    console.error(i6);
  }
}
async function g0(e4, t3) {
  try {
    return await e4.getItem(t3) || (pr() ? localStorage.getItem(t3) : void 0);
  } catch (r5) {
    console.error(r5);
  }
}
var On = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function A0(e4) {
  var t3 = e4.default;
  if (typeof t3 == "function") {
    var r5 = function() {
      return t3.apply(this, arguments);
    };
    r5.prototype = t3.prototype;
  } else r5 = {};
  return Object.defineProperty(r5, "__esModule", { value: true }), Object.keys(e4).forEach(function(i6) {
    var n6 = Object.getOwnPropertyDescriptor(e4, i6);
    Object.defineProperty(r5, i6, n6.get ? n6 : { enumerable: true, get: function() {
      return e4[i6];
    } });
  }), r5;
}
var Pn = { exports: {} };
(function(e4) {
  (function() {
    var t3 = "input is invalid type", r5 = "finalize already called", i6 = typeof window == "object", n6 = i6 ? window : {};
    n6.JS_SHA3_NO_WINDOW && (i6 = false);
    var o6 = !i6 && typeof self == "object", h7 = !n6.JS_SHA3_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
    h7 ? n6 = On : o6 && (n6 = self);
    var p5 = !n6.JS_SHA3_NO_COMMON_JS && true && e4.exports, b5 = !n6.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", m5 = "0123456789abcdef".split(""), w7 = [31, 7936, 2031616, 520093696], y8 = [4, 1024, 262144, 67108864], S5 = [1, 256, 65536, 16777216], I5 = [6, 1536, 393216, 100663296], N10 = [0, 8, 16, 24], C6 = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], F3 = [224, 256, 384, 512], U4 = [128, 256], J3 = ["hex", "buffer", "arrayBuffer", "array", "digest"], Bt3 = { 128: 168, 256: 136 };
    (n6.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(u5) {
      return Object.prototype.toString.call(u5) === "[object Array]";
    }), b5 && (n6.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(u5) {
      return typeof u5 == "object" && u5.buffer && u5.buffer.constructor === ArrayBuffer;
    });
    for (var G2 = function(u5, E8, _6) {
      return function(B4) {
        return new s5(u5, E8, u5).update(B4)[_6]();
      };
    }, H3 = function(u5, E8, _6) {
      return function(B4, R4) {
        return new s5(u5, E8, R4).update(B4)[_6]();
      };
    }, z6 = function(u5, E8, _6) {
      return function(B4, R4, T5, P3) {
        return f6["cshake" + u5].update(B4, R4, T5, P3)[_6]();
      };
    }, Pt2 = function(u5, E8, _6) {
      return function(B4, R4, T5, P3) {
        return f6["kmac" + u5].update(B4, R4, T5, P3)[_6]();
      };
    }, W3 = function(u5, E8, _6, B4) {
      for (var R4 = 0; R4 < J3.length; ++R4) {
        var T5 = J3[R4];
        u5[T5] = E8(_6, B4, T5);
      }
      return u5;
    }, Rt2 = function(u5, E8) {
      var _6 = G2(u5, E8, "hex");
      return _6.create = function() {
        return new s5(u5, E8, u5);
      }, _6.update = function(B4) {
        return _6.create().update(B4);
      }, W3(_6, G2, u5, E8);
    }, Yt3 = function(u5, E8) {
      var _6 = H3(u5, E8, "hex");
      return _6.create = function(B4) {
        return new s5(u5, E8, B4);
      }, _6.update = function(B4, R4) {
        return _6.create(R4).update(B4);
      }, W3(_6, H3, u5, E8);
    }, Y2 = function(u5, E8) {
      var _6 = Bt3[u5], B4 = z6(u5, E8, "hex");
      return B4.create = function(R4, T5, P3) {
        return !T5 && !P3 ? f6["shake" + u5].create(R4) : new s5(u5, E8, R4).bytepad([T5, P3], _6);
      }, B4.update = function(R4, T5, P3, O4) {
        return B4.create(T5, P3, O4).update(R4);
      }, W3(B4, z6, u5, E8);
    }, Vt3 = function(u5, E8) {
      var _6 = Bt3[u5], B4 = Pt2(u5, E8, "hex");
      return B4.create = function(R4, T5, P3) {
        return new v5(u5, E8, T5).bytepad(["KMAC", P3], _6).bytepad([R4], _6);
      }, B4.update = function(R4, T5, P3, O4) {
        return B4.create(R4, P3, O4).update(T5);
      }, W3(B4, Pt2, u5, E8);
    }, A5 = [{ name: "keccak", padding: S5, bits: F3, createMethod: Rt2 }, { name: "sha3", padding: I5, bits: F3, createMethod: Rt2 }, { name: "shake", padding: w7, bits: U4, createMethod: Yt3 }, { name: "cshake", padding: y8, bits: U4, createMethod: Y2 }, { name: "kmac", padding: y8, bits: U4, createMethod: Vt3 }], f6 = {}, a6 = [], c7 = 0; c7 < A5.length; ++c7) for (var d5 = A5[c7], g5 = d5.bits, x5 = 0; x5 < g5.length; ++x5) {
      var M4 = d5.name + "_" + g5[x5];
      if (a6.push(M4), f6[M4] = d5.createMethod(g5[x5], d5.padding), d5.name !== "sha3") {
        var l6 = d5.name + g5[x5];
        a6.push(l6), f6[l6] = f6[M4];
      }
    }
    function s5(u5, E8, _6) {
      this.blocks = [], this.s = [], this.padding = E8, this.outputBits = _6, this.reset = true, this.finalized = false, this.block = 0, this.start = 0, this.blockCount = 1600 - (u5 << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = _6 >> 5, this.extraBytes = (_6 & 31) >> 3;
      for (var B4 = 0; B4 < 50; ++B4) this.s[B4] = 0;
    }
    s5.prototype.update = function(u5) {
      if (this.finalized) throw new Error(r5);
      var E8, _6 = typeof u5;
      if (_6 !== "string") {
        if (_6 === "object") {
          if (u5 === null) throw new Error(t3);
          if (b5 && u5.constructor === ArrayBuffer) u5 = new Uint8Array(u5);
          else if (!Array.isArray(u5) && (!b5 || !ArrayBuffer.isView(u5))) throw new Error(t3);
        } else throw new Error(t3);
        E8 = true;
      }
      for (var B4 = this.blocks, R4 = this.byteCount, T5 = u5.length, P3 = this.blockCount, O4 = 0, Ct3 = this.s, D5, q5; O4 < T5; ) {
        if (this.reset) for (this.reset = false, B4[0] = this.block, D5 = 1; D5 < P3 + 1; ++D5) B4[D5] = 0;
        if (E8) for (D5 = this.start; O4 < T5 && D5 < R4; ++O4) B4[D5 >> 2] |= u5[O4] << N10[D5++ & 3];
        else for (D5 = this.start; O4 < T5 && D5 < R4; ++O4) q5 = u5.charCodeAt(O4), q5 < 128 ? B4[D5 >> 2] |= q5 << N10[D5++ & 3] : q5 < 2048 ? (B4[D5 >> 2] |= (192 | q5 >> 6) << N10[D5++ & 3], B4[D5 >> 2] |= (128 | q5 & 63) << N10[D5++ & 3]) : q5 < 55296 || q5 >= 57344 ? (B4[D5 >> 2] |= (224 | q5 >> 12) << N10[D5++ & 3], B4[D5 >> 2] |= (128 | q5 >> 6 & 63) << N10[D5++ & 3], B4[D5 >> 2] |= (128 | q5 & 63) << N10[D5++ & 3]) : (q5 = 65536 + ((q5 & 1023) << 10 | u5.charCodeAt(++O4) & 1023), B4[D5 >> 2] |= (240 | q5 >> 18) << N10[D5++ & 3], B4[D5 >> 2] |= (128 | q5 >> 12 & 63) << N10[D5++ & 3], B4[D5 >> 2] |= (128 | q5 >> 6 & 63) << N10[D5++ & 3], B4[D5 >> 2] |= (128 | q5 & 63) << N10[D5++ & 3]);
        if (this.lastByteIndex = D5, D5 >= R4) {
          for (this.start = D5 - R4, this.block = B4[P3], D5 = 0; D5 < P3; ++D5) Ct3[D5] ^= B4[D5];
          k5(Ct3), this.reset = true;
        } else this.start = D5;
      }
      return this;
    }, s5.prototype.encode = function(u5, E8) {
      var _6 = u5 & 255, B4 = 1, R4 = [_6];
      for (u5 = u5 >> 8, _6 = u5 & 255; _6 > 0; ) R4.unshift(_6), u5 = u5 >> 8, _6 = u5 & 255, ++B4;
      return E8 ? R4.push(B4) : R4.unshift(B4), this.update(R4), R4.length;
    }, s5.prototype.encodeString = function(u5) {
      var E8, _6 = typeof u5;
      if (_6 !== "string") {
        if (_6 === "object") {
          if (u5 === null) throw new Error(t3);
          if (b5 && u5.constructor === ArrayBuffer) u5 = new Uint8Array(u5);
          else if (!Array.isArray(u5) && (!b5 || !ArrayBuffer.isView(u5))) throw new Error(t3);
        } else throw new Error(t3);
        E8 = true;
      }
      var B4 = 0, R4 = u5.length;
      if (E8) B4 = R4;
      else for (var T5 = 0; T5 < u5.length; ++T5) {
        var P3 = u5.charCodeAt(T5);
        P3 < 128 ? B4 += 1 : P3 < 2048 ? B4 += 2 : P3 < 55296 || P3 >= 57344 ? B4 += 3 : (P3 = 65536 + ((P3 & 1023) << 10 | u5.charCodeAt(++T5) & 1023), B4 += 4);
      }
      return B4 += this.encode(B4 * 8), this.update(u5), B4;
    }, s5.prototype.bytepad = function(u5, E8) {
      for (var _6 = this.encode(E8), B4 = 0; B4 < u5.length; ++B4) _6 += this.encodeString(u5[B4]);
      var R4 = E8 - _6 % E8, T5 = [];
      return T5.length = R4, this.update(T5), this;
    }, s5.prototype.finalize = function() {
      if (!this.finalized) {
        this.finalized = true;
        var u5 = this.blocks, E8 = this.lastByteIndex, _6 = this.blockCount, B4 = this.s;
        if (u5[E8 >> 2] |= this.padding[E8 & 3], this.lastByteIndex === this.byteCount) for (u5[0] = u5[_6], E8 = 1; E8 < _6 + 1; ++E8) u5[E8] = 0;
        for (u5[_6 - 1] |= 2147483648, E8 = 0; E8 < _6; ++E8) B4[E8] ^= u5[E8];
        k5(B4);
      }
    }, s5.prototype.toString = s5.prototype.hex = function() {
      this.finalize();
      for (var u5 = this.blockCount, E8 = this.s, _6 = this.outputBlocks, B4 = this.extraBytes, R4 = 0, T5 = 0, P3 = "", O4; T5 < _6; ) {
        for (R4 = 0; R4 < u5 && T5 < _6; ++R4, ++T5) O4 = E8[R4], P3 += m5[O4 >> 4 & 15] + m5[O4 & 15] + m5[O4 >> 12 & 15] + m5[O4 >> 8 & 15] + m5[O4 >> 20 & 15] + m5[O4 >> 16 & 15] + m5[O4 >> 28 & 15] + m5[O4 >> 24 & 15];
        T5 % u5 === 0 && (k5(E8), R4 = 0);
      }
      return B4 && (O4 = E8[R4], P3 += m5[O4 >> 4 & 15] + m5[O4 & 15], B4 > 1 && (P3 += m5[O4 >> 12 & 15] + m5[O4 >> 8 & 15]), B4 > 2 && (P3 += m5[O4 >> 20 & 15] + m5[O4 >> 16 & 15])), P3;
    }, s5.prototype.arrayBuffer = function() {
      this.finalize();
      var u5 = this.blockCount, E8 = this.s, _6 = this.outputBlocks, B4 = this.extraBytes, R4 = 0, T5 = 0, P3 = this.outputBits >> 3, O4;
      B4 ? O4 = new ArrayBuffer(_6 + 1 << 2) : O4 = new ArrayBuffer(P3);
      for (var Ct3 = new Uint32Array(O4); T5 < _6; ) {
        for (R4 = 0; R4 < u5 && T5 < _6; ++R4, ++T5) Ct3[T5] = E8[R4];
        T5 % u5 === 0 && k5(E8);
      }
      return B4 && (Ct3[R4] = E8[R4], O4 = O4.slice(0, P3)), O4;
    }, s5.prototype.buffer = s5.prototype.arrayBuffer, s5.prototype.digest = s5.prototype.array = function() {
      this.finalize();
      for (var u5 = this.blockCount, E8 = this.s, _6 = this.outputBlocks, B4 = this.extraBytes, R4 = 0, T5 = 0, P3 = [], O4, Ct3; T5 < _6; ) {
        for (R4 = 0; R4 < u5 && T5 < _6; ++R4, ++T5) O4 = T5 << 2, Ct3 = E8[R4], P3[O4] = Ct3 & 255, P3[O4 + 1] = Ct3 >> 8 & 255, P3[O4 + 2] = Ct3 >> 16 & 255, P3[O4 + 3] = Ct3 >> 24 & 255;
        T5 % u5 === 0 && k5(E8);
      }
      return B4 && (O4 = T5 << 2, Ct3 = E8[R4], P3[O4] = Ct3 & 255, B4 > 1 && (P3[O4 + 1] = Ct3 >> 8 & 255), B4 > 2 && (P3[O4 + 2] = Ct3 >> 16 & 255)), P3;
    };
    function v5(u5, E8, _6) {
      s5.call(this, u5, E8, _6);
    }
    v5.prototype = new s5(), v5.prototype.finalize = function() {
      return this.encode(this.outputBits, true), s5.prototype.finalize.call(this);
    };
    var k5 = function(u5) {
      var E8, _6, B4, R4, T5, P3, O4, Ct3, D5, q5, De2, X3, Z3, Fe3, $5, tt2, Te, et2, rt2, Ue3, it2, nt2, ke3, ft2, ot2, qe2, st2, at2, Ke3, ut2, ht2, He3, ct2, lt2, ze2, dt2, pt2, Le3, vt2, mt2, je3, gt2, At2, Qe3, bt3, yt2, Je3, wt2, xt2, Ge3, Mt3, Et2, Ye3, St2, Nt2, Ve2, It2, _t2, Me2, Ee2, Se2, Ne2, Ie;
      for (B4 = 0; B4 < 48; B4 += 2) R4 = u5[0] ^ u5[10] ^ u5[20] ^ u5[30] ^ u5[40], T5 = u5[1] ^ u5[11] ^ u5[21] ^ u5[31] ^ u5[41], P3 = u5[2] ^ u5[12] ^ u5[22] ^ u5[32] ^ u5[42], O4 = u5[3] ^ u5[13] ^ u5[23] ^ u5[33] ^ u5[43], Ct3 = u5[4] ^ u5[14] ^ u5[24] ^ u5[34] ^ u5[44], D5 = u5[5] ^ u5[15] ^ u5[25] ^ u5[35] ^ u5[45], q5 = u5[6] ^ u5[16] ^ u5[26] ^ u5[36] ^ u5[46], De2 = u5[7] ^ u5[17] ^ u5[27] ^ u5[37] ^ u5[47], X3 = u5[8] ^ u5[18] ^ u5[28] ^ u5[38] ^ u5[48], Z3 = u5[9] ^ u5[19] ^ u5[29] ^ u5[39] ^ u5[49], E8 = X3 ^ (P3 << 1 | O4 >>> 31), _6 = Z3 ^ (O4 << 1 | P3 >>> 31), u5[0] ^= E8, u5[1] ^= _6, u5[10] ^= E8, u5[11] ^= _6, u5[20] ^= E8, u5[21] ^= _6, u5[30] ^= E8, u5[31] ^= _6, u5[40] ^= E8, u5[41] ^= _6, E8 = R4 ^ (Ct3 << 1 | D5 >>> 31), _6 = T5 ^ (D5 << 1 | Ct3 >>> 31), u5[2] ^= E8, u5[3] ^= _6, u5[12] ^= E8, u5[13] ^= _6, u5[22] ^= E8, u5[23] ^= _6, u5[32] ^= E8, u5[33] ^= _6, u5[42] ^= E8, u5[43] ^= _6, E8 = P3 ^ (q5 << 1 | De2 >>> 31), _6 = O4 ^ (De2 << 1 | q5 >>> 31), u5[4] ^= E8, u5[5] ^= _6, u5[14] ^= E8, u5[15] ^= _6, u5[24] ^= E8, u5[25] ^= _6, u5[34] ^= E8, u5[35] ^= _6, u5[44] ^= E8, u5[45] ^= _6, E8 = Ct3 ^ (X3 << 1 | Z3 >>> 31), _6 = D5 ^ (Z3 << 1 | X3 >>> 31), u5[6] ^= E8, u5[7] ^= _6, u5[16] ^= E8, u5[17] ^= _6, u5[26] ^= E8, u5[27] ^= _6, u5[36] ^= E8, u5[37] ^= _6, u5[46] ^= E8, u5[47] ^= _6, E8 = q5 ^ (R4 << 1 | T5 >>> 31), _6 = De2 ^ (T5 << 1 | R4 >>> 31), u5[8] ^= E8, u5[9] ^= _6, u5[18] ^= E8, u5[19] ^= _6, u5[28] ^= E8, u5[29] ^= _6, u5[38] ^= E8, u5[39] ^= _6, u5[48] ^= E8, u5[49] ^= _6, Fe3 = u5[0], $5 = u5[1], yt2 = u5[11] << 4 | u5[10] >>> 28, Je3 = u5[10] << 4 | u5[11] >>> 28, at2 = u5[20] << 3 | u5[21] >>> 29, Ke3 = u5[21] << 3 | u5[20] >>> 29, Ee2 = u5[31] << 9 | u5[30] >>> 23, Se2 = u5[30] << 9 | u5[31] >>> 23, gt2 = u5[40] << 18 | u5[41] >>> 14, At2 = u5[41] << 18 | u5[40] >>> 14, lt2 = u5[2] << 1 | u5[3] >>> 31, ze2 = u5[3] << 1 | u5[2] >>> 31, tt2 = u5[13] << 12 | u5[12] >>> 20, Te = u5[12] << 12 | u5[13] >>> 20, wt2 = u5[22] << 10 | u5[23] >>> 22, xt2 = u5[23] << 10 | u5[22] >>> 22, ut2 = u5[33] << 13 | u5[32] >>> 19, ht2 = u5[32] << 13 | u5[33] >>> 19, Ne2 = u5[42] << 2 | u5[43] >>> 30, Ie = u5[43] << 2 | u5[42] >>> 30, St2 = u5[5] << 30 | u5[4] >>> 2, Nt2 = u5[4] << 30 | u5[5] >>> 2, dt2 = u5[14] << 6 | u5[15] >>> 26, pt2 = u5[15] << 6 | u5[14] >>> 26, et2 = u5[25] << 11 | u5[24] >>> 21, rt2 = u5[24] << 11 | u5[25] >>> 21, Ge3 = u5[34] << 15 | u5[35] >>> 17, Mt3 = u5[35] << 15 | u5[34] >>> 17, He3 = u5[45] << 29 | u5[44] >>> 3, ct2 = u5[44] << 29 | u5[45] >>> 3, ft2 = u5[6] << 28 | u5[7] >>> 4, ot2 = u5[7] << 28 | u5[6] >>> 4, Ve2 = u5[17] << 23 | u5[16] >>> 9, It2 = u5[16] << 23 | u5[17] >>> 9, Le3 = u5[26] << 25 | u5[27] >>> 7, vt2 = u5[27] << 25 | u5[26] >>> 7, Ue3 = u5[36] << 21 | u5[37] >>> 11, it2 = u5[37] << 21 | u5[36] >>> 11, Et2 = u5[47] << 24 | u5[46] >>> 8, Ye3 = u5[46] << 24 | u5[47] >>> 8, Qe3 = u5[8] << 27 | u5[9] >>> 5, bt3 = u5[9] << 27 | u5[8] >>> 5, qe2 = u5[18] << 20 | u5[19] >>> 12, st2 = u5[19] << 20 | u5[18] >>> 12, _t2 = u5[29] << 7 | u5[28] >>> 25, Me2 = u5[28] << 7 | u5[29] >>> 25, mt2 = u5[38] << 8 | u5[39] >>> 24, je3 = u5[39] << 8 | u5[38] >>> 24, nt2 = u5[48] << 14 | u5[49] >>> 18, ke3 = u5[49] << 14 | u5[48] >>> 18, u5[0] = Fe3 ^ ~tt2 & et2, u5[1] = $5 ^ ~Te & rt2, u5[10] = ft2 ^ ~qe2 & at2, u5[11] = ot2 ^ ~st2 & Ke3, u5[20] = lt2 ^ ~dt2 & Le3, u5[21] = ze2 ^ ~pt2 & vt2, u5[30] = Qe3 ^ ~yt2 & wt2, u5[31] = bt3 ^ ~Je3 & xt2, u5[40] = St2 ^ ~Ve2 & _t2, u5[41] = Nt2 ^ ~It2 & Me2, u5[2] = tt2 ^ ~et2 & Ue3, u5[3] = Te ^ ~rt2 & it2, u5[12] = qe2 ^ ~at2 & ut2, u5[13] = st2 ^ ~Ke3 & ht2, u5[22] = dt2 ^ ~Le3 & mt2, u5[23] = pt2 ^ ~vt2 & je3, u5[32] = yt2 ^ ~wt2 & Ge3, u5[33] = Je3 ^ ~xt2 & Mt3, u5[42] = Ve2 ^ ~_t2 & Ee2, u5[43] = It2 ^ ~Me2 & Se2, u5[4] = et2 ^ ~Ue3 & nt2, u5[5] = rt2 ^ ~it2 & ke3, u5[14] = at2 ^ ~ut2 & He3, u5[15] = Ke3 ^ ~ht2 & ct2, u5[24] = Le3 ^ ~mt2 & gt2, u5[25] = vt2 ^ ~je3 & At2, u5[34] = wt2 ^ ~Ge3 & Et2, u5[35] = xt2 ^ ~Mt3 & Ye3, u5[44] = _t2 ^ ~Ee2 & Ne2, u5[45] = Me2 ^ ~Se2 & Ie, u5[6] = Ue3 ^ ~nt2 & Fe3, u5[7] = it2 ^ ~ke3 & $5, u5[16] = ut2 ^ ~He3 & ft2, u5[17] = ht2 ^ ~ct2 & ot2, u5[26] = mt2 ^ ~gt2 & lt2, u5[27] = je3 ^ ~At2 & ze2, u5[36] = Ge3 ^ ~Et2 & Qe3, u5[37] = Mt3 ^ ~Ye3 & bt3, u5[46] = Ee2 ^ ~Ne2 & St2, u5[47] = Se2 ^ ~Ie & Nt2, u5[8] = nt2 ^ ~Fe3 & tt2, u5[9] = ke3 ^ ~$5 & Te, u5[18] = He3 ^ ~ft2 & qe2, u5[19] = ct2 ^ ~ot2 & st2, u5[28] = gt2 ^ ~lt2 & dt2, u5[29] = At2 ^ ~ze2 & pt2, u5[38] = Et2 ^ ~Qe3 & yt2, u5[39] = Ye3 ^ ~bt3 & Je3, u5[48] = Ne2 ^ ~St2 & Ve2, u5[49] = Ie ^ ~Nt2 & It2, u5[0] ^= C6[B4], u5[1] ^= C6[B4 + 1];
    };
    if (p5) e4.exports = f6;
    else for (c7 = 0; c7 < a6.length; ++c7) n6[a6[c7]] = f6[a6[c7]];
  })();
})(Pn);
var b0 = Pn.exports;
var y0 = "logger/5.7.0";
var Dn = false;
var Fn = false;
var Cr = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };
var Tn = Cr.default;
var gi = null;
function w0() {
  try {
    const e4 = [];
    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((t3) => {
      try {
        if ("test".normalize(t3) !== "test") throw new Error("bad normalize");
      } catch {
        e4.push(t3);
      }
    }), e4.length) throw new Error("missing " + e4.join(", "));
    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation");
  } catch (e4) {
    return e4.message;
  }
  return null;
}
var Un = w0();
var Ai;
(function(e4) {
  e4.DEBUG = "DEBUG", e4.INFO = "INFO", e4.WARNING = "WARNING", e4.ERROR = "ERROR", e4.OFF = "OFF";
})(Ai || (Ai = {}));
var re;
(function(e4) {
  e4.UNKNOWN_ERROR = "UNKNOWN_ERROR", e4.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e4.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e4.NETWORK_ERROR = "NETWORK_ERROR", e4.SERVER_ERROR = "SERVER_ERROR", e4.TIMEOUT = "TIMEOUT", e4.BUFFER_OVERRUN = "BUFFER_OVERRUN", e4.NUMERIC_FAULT = "NUMERIC_FAULT", e4.MISSING_NEW = "MISSING_NEW", e4.INVALID_ARGUMENT = "INVALID_ARGUMENT", e4.MISSING_ARGUMENT = "MISSING_ARGUMENT", e4.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e4.CALL_EXCEPTION = "CALL_EXCEPTION", e4.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e4.NONCE_EXPIRED = "NONCE_EXPIRED", e4.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e4.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e4.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e4.ACTION_REJECTED = "ACTION_REJECTED";
})(re || (re = {}));
var kn = "0123456789abcdef";
var L4 = class _L {
  constructor(t3) {
    Object.defineProperty(this, "version", { enumerable: true, value: t3, writable: false });
  }
  _log(t3, r5) {
    const i6 = t3.toLowerCase();
    Cr[i6] == null && this.throwArgumentError("invalid log level name", "logLevel", t3), !(Tn > Cr[i6]) && console.log.apply(console, r5);
  }
  debug(...t3) {
    this._log(_L.levels.DEBUG, t3);
  }
  info(...t3) {
    this._log(_L.levels.INFO, t3);
  }
  warn(...t3) {
    this._log(_L.levels.WARNING, t3);
  }
  makeError(t3, r5, i6) {
    if (Fn) return this.makeError("censored error", r5, {});
    r5 || (r5 = _L.errors.UNKNOWN_ERROR), i6 || (i6 = {});
    const n6 = [];
    Object.keys(i6).forEach((b5) => {
      const m5 = i6[b5];
      try {
        if (m5 instanceof Uint8Array) {
          let w7 = "";
          for (let y8 = 0; y8 < m5.length; y8++) w7 += kn[m5[y8] >> 4], w7 += kn[m5[y8] & 15];
          n6.push(b5 + "=Uint8Array(0x" + w7 + ")");
        } else n6.push(b5 + "=" + JSON.stringify(m5));
      } catch {
        n6.push(b5 + "=" + JSON.stringify(i6[b5].toString()));
      }
    }), n6.push(`code=${r5}`), n6.push(`version=${this.version}`);
    const o6 = t3;
    let h7 = "";
    switch (r5) {
      case re.NUMERIC_FAULT: {
        h7 = "NUMERIC_FAULT";
        const b5 = t3;
        switch (b5) {
          case "overflow":
          case "underflow":
          case "division-by-zero":
            h7 += "-" + b5;
            break;
          case "negative-power":
          case "negative-width":
            h7 += "-unsupported";
            break;
          case "unbound-bitwise-result":
            h7 += "-unbound-result";
            break;
        }
        break;
      }
      case re.CALL_EXCEPTION:
      case re.INSUFFICIENT_FUNDS:
      case re.MISSING_NEW:
      case re.NONCE_EXPIRED:
      case re.REPLACEMENT_UNDERPRICED:
      case re.TRANSACTION_REPLACED:
      case re.UNPREDICTABLE_GAS_LIMIT:
        h7 = r5;
        break;
    }
    h7 && (t3 += " [ See: https://links.ethers.org/v5-errors-" + h7 + " ]"), n6.length && (t3 += " (" + n6.join(", ") + ")");
    const p5 = new Error(t3);
    return p5.reason = o6, p5.code = r5, Object.keys(i6).forEach(function(b5) {
      p5[b5] = i6[b5];
    }), p5;
  }
  throwError(t3, r5, i6) {
    throw this.makeError(t3, r5, i6);
  }
  throwArgumentError(t3, r5, i6) {
    return this.throwError(t3, _L.errors.INVALID_ARGUMENT, { argument: r5, value: i6 });
  }
  assert(t3, r5, i6, n6) {
    t3 || this.throwError(r5, i6, n6);
  }
  assertArgument(t3, r5, i6, n6) {
    t3 || this.throwArgumentError(r5, i6, n6);
  }
  checkNormalize(t3) {
    Un && this.throwError("platform missing String.prototype.normalize", _L.errors.UNSUPPORTED_OPERATION, { operation: "String.prototype.normalize", form: Un });
  }
  checkSafeUint53(t3, r5) {
    typeof t3 == "number" && (r5 == null && (r5 = "value not safe"), (t3 < 0 || t3 >= 9007199254740991) && this.throwError(r5, _L.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "out-of-safe-range", value: t3 }), t3 % 1 && this.throwError(r5, _L.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "non-integer", value: t3 }));
  }
  checkArgumentCount(t3, r5, i6) {
    i6 ? i6 = ": " + i6 : i6 = "", t3 < r5 && this.throwError("missing argument" + i6, _L.errors.MISSING_ARGUMENT, { count: t3, expectedCount: r5 }), t3 > r5 && this.throwError("too many arguments" + i6, _L.errors.UNEXPECTED_ARGUMENT, { count: t3, expectedCount: r5 });
  }
  checkNew(t3, r5) {
    (t3 === Object || t3 == null) && this.throwError("missing new", _L.errors.MISSING_NEW, { name: r5.name });
  }
  checkAbstract(t3, r5) {
    t3 === r5 ? this.throwError("cannot instantiate abstract class " + JSON.stringify(r5.name) + " directly; use a sub-class", _L.errors.UNSUPPORTED_OPERATION, { name: t3.name, operation: "new" }) : (t3 === Object || t3 == null) && this.throwError("missing new", _L.errors.MISSING_NEW, { name: r5.name });
  }
  static globalLogger() {
    return gi || (gi = new _L(y0)), gi;
  }
  static setCensorship(t3, r5) {
    if (!t3 && r5 && this.globalLogger().throwError("cannot permanently disable censorship", _L.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" }), Dn) {
      if (!t3) return;
      this.globalLogger().throwError("error censorship permanent", _L.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" });
    }
    Fn = !!t3, Dn = !!r5;
  }
  static setLogLevel(t3) {
    const r5 = Cr[t3.toLowerCase()];
    if (r5 == null) {
      _L.globalLogger().warn("invalid log level - " + t3);
      return;
    }
    Tn = r5;
  }
  static from(t3) {
    return new _L(t3);
  }
};
L4.errors = re, L4.levels = Ai;
var x0 = "bytes/5.7.0";
var Dt = new L4(x0);
function qn(e4) {
  return !!e4.toHexString;
}
function rr(e4) {
  return e4.slice || (e4.slice = function() {
    const t3 = Array.prototype.slice.call(arguments);
    return rr(new Uint8Array(Array.prototype.slice.apply(e4, t3)));
  }), e4;
}
function M0(e4) {
  return Qt(e4) && !(e4.length % 2) || ir(e4);
}
function Kn(e4) {
  return typeof e4 == "number" && e4 == e4 && e4 % 1 === 0;
}
function ir(e4) {
  if (e4 == null) return false;
  if (e4.constructor === Uint8Array) return true;
  if (typeof e4 == "string" || !Kn(e4.length) || e4.length < 0) return false;
  for (let t3 = 0; t3 < e4.length; t3++) {
    const r5 = e4[t3];
    if (!Kn(r5) || r5 < 0 || r5 >= 256) return false;
  }
  return true;
}
function Ot(e4, t3) {
  if (t3 || (t3 = {}), typeof e4 == "number") {
    Dt.checkSafeUint53(e4, "invalid arrayify value");
    const r5 = [];
    for (; e4; ) r5.unshift(e4 & 255), e4 = parseInt(String(e4 / 256));
    return r5.length === 0 && r5.push(0), rr(new Uint8Array(r5));
  }
  if (t3.allowMissingPrefix && typeof e4 == "string" && e4.substring(0, 2) !== "0x" && (e4 = "0x" + e4), qn(e4) && (e4 = e4.toHexString()), Qt(e4)) {
    let r5 = e4.substring(2);
    r5.length % 2 && (t3.hexPad === "left" ? r5 = "0" + r5 : t3.hexPad === "right" ? r5 += "0" : Dt.throwArgumentError("hex data is odd-length", "value", e4));
    const i6 = [];
    for (let n6 = 0; n6 < r5.length; n6 += 2) i6.push(parseInt(r5.substring(n6, n6 + 2), 16));
    return rr(new Uint8Array(i6));
  }
  return ir(e4) ? rr(new Uint8Array(e4)) : Dt.throwArgumentError("invalid arrayify value", "value", e4);
}
function E0(e4) {
  const t3 = e4.map((n6) => Ot(n6)), r5 = t3.reduce((n6, o6) => n6 + o6.length, 0), i6 = new Uint8Array(r5);
  return t3.reduce((n6, o6) => (i6.set(o6, n6), n6 + o6.length), 0), rr(i6);
}
function S0(e4, t3) {
  e4 = Ot(e4), e4.length > t3 && Dt.throwArgumentError("value out of range", "value", arguments[0]);
  const r5 = new Uint8Array(t3);
  return r5.set(e4, t3 - e4.length), rr(r5);
}
function Qt(e4, t3) {
  return !(typeof e4 != "string" || !e4.match(/^0x[0-9A-Fa-f]*$/) || t3 && e4.length !== 2 + 2 * t3);
}
var bi = "0123456789abcdef";
function Kt(e4, t3) {
  if (t3 || (t3 = {}), typeof e4 == "number") {
    Dt.checkSafeUint53(e4, "invalid hexlify value");
    let r5 = "";
    for (; e4; ) r5 = bi[e4 & 15] + r5, e4 = Math.floor(e4 / 16);
    return r5.length ? (r5.length % 2 && (r5 = "0" + r5), "0x" + r5) : "0x00";
  }
  if (typeof e4 == "bigint") return e4 = e4.toString(16), e4.length % 2 ? "0x0" + e4 : "0x" + e4;
  if (t3.allowMissingPrefix && typeof e4 == "string" && e4.substring(0, 2) !== "0x" && (e4 = "0x" + e4), qn(e4)) return e4.toHexString();
  if (Qt(e4)) return e4.length % 2 && (t3.hexPad === "left" ? e4 = "0x0" + e4.substring(2) : t3.hexPad === "right" ? e4 += "0" : Dt.throwArgumentError("hex data is odd-length", "value", e4)), e4.toLowerCase();
  if (ir(e4)) {
    let r5 = "0x";
    for (let i6 = 0; i6 < e4.length; i6++) {
      let n6 = e4[i6];
      r5 += bi[(n6 & 240) >> 4] + bi[n6 & 15];
    }
    return r5;
  }
  return Dt.throwArgumentError("invalid hexlify value", "value", e4);
}
function N0(e4) {
  if (typeof e4 != "string") e4 = Kt(e4);
  else if (!Qt(e4) || e4.length % 2) return null;
  return (e4.length - 2) / 2;
}
function Hn(e4, t3, r5) {
  return typeof e4 != "string" ? e4 = Kt(e4) : (!Qt(e4) || e4.length % 2) && Dt.throwArgumentError("invalid hexData", "value", e4), t3 = 2 + 2 * t3, r5 != null ? "0x" + e4.substring(t3, 2 + 2 * r5) : "0x" + e4.substring(t3);
}
function oe(e4, t3) {
  for (typeof e4 != "string" ? e4 = Kt(e4) : Qt(e4) || Dt.throwArgumentError("invalid hex string", "value", e4), e4.length > 2 * t3 + 2 && Dt.throwArgumentError("value out of range", "value", arguments[1]); e4.length < 2 * t3 + 2; ) e4 = "0x0" + e4.substring(2);
  return e4;
}
function zn(e4) {
  const t3 = { r: "0x", s: "0x", _vs: "0x", recoveryParam: 0, v: 0, yParityAndS: "0x", compact: "0x" };
  if (M0(e4)) {
    let r5 = Ot(e4);
    r5.length === 64 ? (t3.v = 27 + (r5[32] >> 7), r5[32] &= 127, t3.r = Kt(r5.slice(0, 32)), t3.s = Kt(r5.slice(32, 64))) : r5.length === 65 ? (t3.r = Kt(r5.slice(0, 32)), t3.s = Kt(r5.slice(32, 64)), t3.v = r5[64]) : Dt.throwArgumentError("invalid signature string", "signature", e4), t3.v < 27 && (t3.v === 0 || t3.v === 1 ? t3.v += 27 : Dt.throwArgumentError("signature invalid v byte", "signature", e4)), t3.recoveryParam = 1 - t3.v % 2, t3.recoveryParam && (r5[32] |= 128), t3._vs = Kt(r5.slice(32, 64));
  } else {
    if (t3.r = e4.r, t3.s = e4.s, t3.v = e4.v, t3.recoveryParam = e4.recoveryParam, t3._vs = e4._vs, t3._vs != null) {
      const n6 = S0(Ot(t3._vs), 32);
      t3._vs = Kt(n6);
      const o6 = n6[0] >= 128 ? 1 : 0;
      t3.recoveryParam == null ? t3.recoveryParam = o6 : t3.recoveryParam !== o6 && Dt.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e4), n6[0] &= 127;
      const h7 = Kt(n6);
      t3.s == null ? t3.s = h7 : t3.s !== h7 && Dt.throwArgumentError("signature v mismatch _vs", "signature", e4);
    }
    if (t3.recoveryParam == null) t3.v == null ? Dt.throwArgumentError("signature missing v and recoveryParam", "signature", e4) : t3.v === 0 || t3.v === 1 ? t3.recoveryParam = t3.v : t3.recoveryParam = 1 - t3.v % 2;
    else if (t3.v == null) t3.v = 27 + t3.recoveryParam;
    else {
      const n6 = t3.v === 0 || t3.v === 1 ? t3.v : 1 - t3.v % 2;
      t3.recoveryParam !== n6 && Dt.throwArgumentError("signature recoveryParam mismatch v", "signature", e4);
    }
    t3.r == null || !Qt(t3.r) ? Dt.throwArgumentError("signature missing or invalid r", "signature", e4) : t3.r = oe(t3.r, 32), t3.s == null || !Qt(t3.s) ? Dt.throwArgumentError("signature missing or invalid s", "signature", e4) : t3.s = oe(t3.s, 32);
    const r5 = Ot(t3.s);
    r5[0] >= 128 && Dt.throwArgumentError("signature s out of range", "signature", e4), t3.recoveryParam && (r5[0] |= 128);
    const i6 = Kt(r5);
    t3._vs && (Qt(t3._vs) || Dt.throwArgumentError("signature invalid _vs", "signature", e4), t3._vs = oe(t3._vs, 32)), t3._vs == null ? t3._vs = i6 : t3._vs !== i6 && Dt.throwArgumentError("signature _vs mismatch v and s", "signature", e4);
  }
  return t3.yParityAndS = t3._vs, t3.compact = t3.r + t3.yParityAndS.substring(2), t3;
}
function yi(e4) {
  return "0x" + b0.keccak_256(Ot(e4));
}
var Ln = { exports: {} };
var I0 = {};
var _0 = Object.freeze({ __proto__: null, default: I0 });
var B0 = A0(_0);
(function(e4) {
  (function(t3, r5) {
    function i6(A5, f6) {
      if (!A5) throw new Error(f6 || "Assertion failed");
    }
    function n6(A5, f6) {
      A5.super_ = f6;
      var a6 = function() {
      };
      a6.prototype = f6.prototype, A5.prototype = new a6(), A5.prototype.constructor = A5;
    }
    function o6(A5, f6, a6) {
      if (o6.isBN(A5)) return A5;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, A5 !== null && ((f6 === "le" || f6 === "be") && (a6 = f6, f6 = 10), this._init(A5 || 0, f6 || 10, a6 || "be"));
    }
    typeof t3 == "object" ? t3.exports = o6 : r5.BN = o6, o6.BN = o6, o6.wordSize = 26;
    var h7;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? h7 = window.Buffer : h7 = B0.Buffer;
    } catch {
    }
    o6.isBN = function(f6) {
      return f6 instanceof o6 ? true : f6 !== null && typeof f6 == "object" && f6.constructor.wordSize === o6.wordSize && Array.isArray(f6.words);
    }, o6.max = function(f6, a6) {
      return f6.cmp(a6) > 0 ? f6 : a6;
    }, o6.min = function(f6, a6) {
      return f6.cmp(a6) < 0 ? f6 : a6;
    }, o6.prototype._init = function(f6, a6, c7) {
      if (typeof f6 == "number") return this._initNumber(f6, a6, c7);
      if (typeof f6 == "object") return this._initArray(f6, a6, c7);
      a6 === "hex" && (a6 = 16), i6(a6 === (a6 | 0) && a6 >= 2 && a6 <= 36), f6 = f6.toString().replace(/\s+/g, "");
      var d5 = 0;
      f6[0] === "-" && (d5++, this.negative = 1), d5 < f6.length && (a6 === 16 ? this._parseHex(f6, d5, c7) : (this._parseBase(f6, a6, d5), c7 === "le" && this._initArray(this.toArray(), a6, c7)));
    }, o6.prototype._initNumber = function(f6, a6, c7) {
      f6 < 0 && (this.negative = 1, f6 = -f6), f6 < 67108864 ? (this.words = [f6 & 67108863], this.length = 1) : f6 < 4503599627370496 ? (this.words = [f6 & 67108863, f6 / 67108864 & 67108863], this.length = 2) : (i6(f6 < 9007199254740992), this.words = [f6 & 67108863, f6 / 67108864 & 67108863, 1], this.length = 3), c7 === "le" && this._initArray(this.toArray(), a6, c7);
    }, o6.prototype._initArray = function(f6, a6, c7) {
      if (i6(typeof f6.length == "number"), f6.length <= 0) return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(f6.length / 3), this.words = new Array(this.length);
      for (var d5 = 0; d5 < this.length; d5++) this.words[d5] = 0;
      var g5, x5, M4 = 0;
      if (c7 === "be") for (d5 = f6.length - 1, g5 = 0; d5 >= 0; d5 -= 3) x5 = f6[d5] | f6[d5 - 1] << 8 | f6[d5 - 2] << 16, this.words[g5] |= x5 << M4 & 67108863, this.words[g5 + 1] = x5 >>> 26 - M4 & 67108863, M4 += 24, M4 >= 26 && (M4 -= 26, g5++);
      else if (c7 === "le") for (d5 = 0, g5 = 0; d5 < f6.length; d5 += 3) x5 = f6[d5] | f6[d5 + 1] << 8 | f6[d5 + 2] << 16, this.words[g5] |= x5 << M4 & 67108863, this.words[g5 + 1] = x5 >>> 26 - M4 & 67108863, M4 += 24, M4 >= 26 && (M4 -= 26, g5++);
      return this._strip();
    };
    function p5(A5, f6) {
      var a6 = A5.charCodeAt(f6);
      if (a6 >= 48 && a6 <= 57) return a6 - 48;
      if (a6 >= 65 && a6 <= 70) return a6 - 55;
      if (a6 >= 97 && a6 <= 102) return a6 - 87;
      i6(false, "Invalid character in " + A5);
    }
    function b5(A5, f6, a6) {
      var c7 = p5(A5, a6);
      return a6 - 1 >= f6 && (c7 |= p5(A5, a6 - 1) << 4), c7;
    }
    o6.prototype._parseHex = function(f6, a6, c7) {
      this.length = Math.ceil((f6.length - a6) / 6), this.words = new Array(this.length);
      for (var d5 = 0; d5 < this.length; d5++) this.words[d5] = 0;
      var g5 = 0, x5 = 0, M4;
      if (c7 === "be") for (d5 = f6.length - 1; d5 >= a6; d5 -= 2) M4 = b5(f6, a6, d5) << g5, this.words[x5] |= M4 & 67108863, g5 >= 18 ? (g5 -= 18, x5 += 1, this.words[x5] |= M4 >>> 26) : g5 += 8;
      else {
        var l6 = f6.length - a6;
        for (d5 = l6 % 2 === 0 ? a6 + 1 : a6; d5 < f6.length; d5 += 2) M4 = b5(f6, a6, d5) << g5, this.words[x5] |= M4 & 67108863, g5 >= 18 ? (g5 -= 18, x5 += 1, this.words[x5] |= M4 >>> 26) : g5 += 8;
      }
      this._strip();
    };
    function m5(A5, f6, a6, c7) {
      for (var d5 = 0, g5 = 0, x5 = Math.min(A5.length, a6), M4 = f6; M4 < x5; M4++) {
        var l6 = A5.charCodeAt(M4) - 48;
        d5 *= c7, l6 >= 49 ? g5 = l6 - 49 + 10 : l6 >= 17 ? g5 = l6 - 17 + 10 : g5 = l6, i6(l6 >= 0 && g5 < c7, "Invalid character"), d5 += g5;
      }
      return d5;
    }
    o6.prototype._parseBase = function(f6, a6, c7) {
      this.words = [0], this.length = 1;
      for (var d5 = 0, g5 = 1; g5 <= 67108863; g5 *= a6) d5++;
      d5--, g5 = g5 / a6 | 0;
      for (var x5 = f6.length - c7, M4 = x5 % d5, l6 = Math.min(x5, x5 - M4) + c7, s5 = 0, v5 = c7; v5 < l6; v5 += d5) s5 = m5(f6, v5, v5 + d5, a6), this.imuln(g5), this.words[0] + s5 < 67108864 ? this.words[0] += s5 : this._iaddn(s5);
      if (M4 !== 0) {
        var k5 = 1;
        for (s5 = m5(f6, v5, f6.length, a6), v5 = 0; v5 < M4; v5++) k5 *= a6;
        this.imuln(k5), this.words[0] + s5 < 67108864 ? this.words[0] += s5 : this._iaddn(s5);
      }
      this._strip();
    }, o6.prototype.copy = function(f6) {
      f6.words = new Array(this.length);
      for (var a6 = 0; a6 < this.length; a6++) f6.words[a6] = this.words[a6];
      f6.length = this.length, f6.negative = this.negative, f6.red = this.red;
    };
    function w7(A5, f6) {
      A5.words = f6.words, A5.length = f6.length, A5.negative = f6.negative, A5.red = f6.red;
    }
    if (o6.prototype._move = function(f6) {
      w7(f6, this);
    }, o6.prototype.clone = function() {
      var f6 = new o6(null);
      return this.copy(f6), f6;
    }, o6.prototype._expand = function(f6) {
      for (; this.length < f6; ) this.words[this.length++] = 0;
      return this;
    }, o6.prototype._strip = function() {
      for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
      return this._normSign();
    }, o6.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, typeof Symbol < "u" && typeof Symbol.for == "function") try {
      o6.prototype[Symbol.for("nodejs.util.inspect.custom")] = y8;
    } catch {
      o6.prototype.inspect = y8;
    }
    else o6.prototype.inspect = y8;
    function y8() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var S5 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], I5 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], N10 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    o6.prototype.toString = function(f6, a6) {
      f6 = f6 || 10, a6 = a6 | 0 || 1;
      var c7;
      if (f6 === 16 || f6 === "hex") {
        c7 = "";
        for (var d5 = 0, g5 = 0, x5 = 0; x5 < this.length; x5++) {
          var M4 = this.words[x5], l6 = ((M4 << d5 | g5) & 16777215).toString(16);
          g5 = M4 >>> 24 - d5 & 16777215, d5 += 2, d5 >= 26 && (d5 -= 26, x5--), g5 !== 0 || x5 !== this.length - 1 ? c7 = S5[6 - l6.length] + l6 + c7 : c7 = l6 + c7;
        }
        for (g5 !== 0 && (c7 = g5.toString(16) + c7); c7.length % a6 !== 0; ) c7 = "0" + c7;
        return this.negative !== 0 && (c7 = "-" + c7), c7;
      }
      if (f6 === (f6 | 0) && f6 >= 2 && f6 <= 36) {
        var s5 = I5[f6], v5 = N10[f6];
        c7 = "";
        var k5 = this.clone();
        for (k5.negative = 0; !k5.isZero(); ) {
          var u5 = k5.modrn(v5).toString(f6);
          k5 = k5.idivn(v5), k5.isZero() ? c7 = u5 + c7 : c7 = S5[s5 - u5.length] + u5 + c7;
        }
        for (this.isZero() && (c7 = "0" + c7); c7.length % a6 !== 0; ) c7 = "0" + c7;
        return this.negative !== 0 && (c7 = "-" + c7), c7;
      }
      i6(false, "Base should be between 2 and 36");
    }, o6.prototype.toNumber = function() {
      var f6 = this.words[0];
      return this.length === 2 ? f6 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? f6 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && i6(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -f6 : f6;
    }, o6.prototype.toJSON = function() {
      return this.toString(16, 2);
    }, h7 && (o6.prototype.toBuffer = function(f6, a6) {
      return this.toArrayLike(h7, f6, a6);
    }), o6.prototype.toArray = function(f6, a6) {
      return this.toArrayLike(Array, f6, a6);
    };
    var C6 = function(f6, a6) {
      return f6.allocUnsafe ? f6.allocUnsafe(a6) : new f6(a6);
    };
    o6.prototype.toArrayLike = function(f6, a6, c7) {
      this._strip();
      var d5 = this.byteLength(), g5 = c7 || Math.max(1, d5);
      i6(d5 <= g5, "byte array longer than desired length"), i6(g5 > 0, "Requested array length <= 0");
      var x5 = C6(f6, g5), M4 = a6 === "le" ? "LE" : "BE";
      return this["_toArrayLike" + M4](x5, d5), x5;
    }, o6.prototype._toArrayLikeLE = function(f6, a6) {
      for (var c7 = 0, d5 = 0, g5 = 0, x5 = 0; g5 < this.length; g5++) {
        var M4 = this.words[g5] << x5 | d5;
        f6[c7++] = M4 & 255, c7 < f6.length && (f6[c7++] = M4 >> 8 & 255), c7 < f6.length && (f6[c7++] = M4 >> 16 & 255), x5 === 6 ? (c7 < f6.length && (f6[c7++] = M4 >> 24 & 255), d5 = 0, x5 = 0) : (d5 = M4 >>> 24, x5 += 2);
      }
      if (c7 < f6.length) for (f6[c7++] = d5; c7 < f6.length; ) f6[c7++] = 0;
    }, o6.prototype._toArrayLikeBE = function(f6, a6) {
      for (var c7 = f6.length - 1, d5 = 0, g5 = 0, x5 = 0; g5 < this.length; g5++) {
        var M4 = this.words[g5] << x5 | d5;
        f6[c7--] = M4 & 255, c7 >= 0 && (f6[c7--] = M4 >> 8 & 255), c7 >= 0 && (f6[c7--] = M4 >> 16 & 255), x5 === 6 ? (c7 >= 0 && (f6[c7--] = M4 >> 24 & 255), d5 = 0, x5 = 0) : (d5 = M4 >>> 24, x5 += 2);
      }
      if (c7 >= 0) for (f6[c7--] = d5; c7 >= 0; ) f6[c7--] = 0;
    }, Math.clz32 ? o6.prototype._countBits = function(f6) {
      return 32 - Math.clz32(f6);
    } : o6.prototype._countBits = function(f6) {
      var a6 = f6, c7 = 0;
      return a6 >= 4096 && (c7 += 13, a6 >>>= 13), a6 >= 64 && (c7 += 7, a6 >>>= 7), a6 >= 8 && (c7 += 4, a6 >>>= 4), a6 >= 2 && (c7 += 2, a6 >>>= 2), c7 + a6;
    }, o6.prototype._zeroBits = function(f6) {
      if (f6 === 0) return 26;
      var a6 = f6, c7 = 0;
      return a6 & 8191 || (c7 += 13, a6 >>>= 13), a6 & 127 || (c7 += 7, a6 >>>= 7), a6 & 15 || (c7 += 4, a6 >>>= 4), a6 & 3 || (c7 += 2, a6 >>>= 2), a6 & 1 || c7++, c7;
    }, o6.prototype.bitLength = function() {
      var f6 = this.words[this.length - 1], a6 = this._countBits(f6);
      return (this.length - 1) * 26 + a6;
    };
    function F3(A5) {
      for (var f6 = new Array(A5.bitLength()), a6 = 0; a6 < f6.length; a6++) {
        var c7 = a6 / 26 | 0, d5 = a6 % 26;
        f6[a6] = A5.words[c7] >>> d5 & 1;
      }
      return f6;
    }
    o6.prototype.zeroBits = function() {
      if (this.isZero()) return 0;
      for (var f6 = 0, a6 = 0; a6 < this.length; a6++) {
        var c7 = this._zeroBits(this.words[a6]);
        if (f6 += c7, c7 !== 26) break;
      }
      return f6;
    }, o6.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, o6.prototype.toTwos = function(f6) {
      return this.negative !== 0 ? this.abs().inotn(f6).iaddn(1) : this.clone();
    }, o6.prototype.fromTwos = function(f6) {
      return this.testn(f6 - 1) ? this.notn(f6).iaddn(1).ineg() : this.clone();
    }, o6.prototype.isNeg = function() {
      return this.negative !== 0;
    }, o6.prototype.neg = function() {
      return this.clone().ineg();
    }, o6.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, o6.prototype.iuor = function(f6) {
      for (; this.length < f6.length; ) this.words[this.length++] = 0;
      for (var a6 = 0; a6 < f6.length; a6++) this.words[a6] = this.words[a6] | f6.words[a6];
      return this._strip();
    }, o6.prototype.ior = function(f6) {
      return i6((this.negative | f6.negative) === 0), this.iuor(f6);
    }, o6.prototype.or = function(f6) {
      return this.length > f6.length ? this.clone().ior(f6) : f6.clone().ior(this);
    }, o6.prototype.uor = function(f6) {
      return this.length > f6.length ? this.clone().iuor(f6) : f6.clone().iuor(this);
    }, o6.prototype.iuand = function(f6) {
      var a6;
      this.length > f6.length ? a6 = f6 : a6 = this;
      for (var c7 = 0; c7 < a6.length; c7++) this.words[c7] = this.words[c7] & f6.words[c7];
      return this.length = a6.length, this._strip();
    }, o6.prototype.iand = function(f6) {
      return i6((this.negative | f6.negative) === 0), this.iuand(f6);
    }, o6.prototype.and = function(f6) {
      return this.length > f6.length ? this.clone().iand(f6) : f6.clone().iand(this);
    }, o6.prototype.uand = function(f6) {
      return this.length > f6.length ? this.clone().iuand(f6) : f6.clone().iuand(this);
    }, o6.prototype.iuxor = function(f6) {
      var a6, c7;
      this.length > f6.length ? (a6 = this, c7 = f6) : (a6 = f6, c7 = this);
      for (var d5 = 0; d5 < c7.length; d5++) this.words[d5] = a6.words[d5] ^ c7.words[d5];
      if (this !== a6) for (; d5 < a6.length; d5++) this.words[d5] = a6.words[d5];
      return this.length = a6.length, this._strip();
    }, o6.prototype.ixor = function(f6) {
      return i6((this.negative | f6.negative) === 0), this.iuxor(f6);
    }, o6.prototype.xor = function(f6) {
      return this.length > f6.length ? this.clone().ixor(f6) : f6.clone().ixor(this);
    }, o6.prototype.uxor = function(f6) {
      return this.length > f6.length ? this.clone().iuxor(f6) : f6.clone().iuxor(this);
    }, o6.prototype.inotn = function(f6) {
      i6(typeof f6 == "number" && f6 >= 0);
      var a6 = Math.ceil(f6 / 26) | 0, c7 = f6 % 26;
      this._expand(a6), c7 > 0 && a6--;
      for (var d5 = 0; d5 < a6; d5++) this.words[d5] = ~this.words[d5] & 67108863;
      return c7 > 0 && (this.words[d5] = ~this.words[d5] & 67108863 >> 26 - c7), this._strip();
    }, o6.prototype.notn = function(f6) {
      return this.clone().inotn(f6);
    }, o6.prototype.setn = function(f6, a6) {
      i6(typeof f6 == "number" && f6 >= 0);
      var c7 = f6 / 26 | 0, d5 = f6 % 26;
      return this._expand(c7 + 1), a6 ? this.words[c7] = this.words[c7] | 1 << d5 : this.words[c7] = this.words[c7] & ~(1 << d5), this._strip();
    }, o6.prototype.iadd = function(f6) {
      var a6;
      if (this.negative !== 0 && f6.negative === 0) return this.negative = 0, a6 = this.isub(f6), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && f6.negative !== 0) return f6.negative = 0, a6 = this.isub(f6), f6.negative = 1, a6._normSign();
      var c7, d5;
      this.length > f6.length ? (c7 = this, d5 = f6) : (c7 = f6, d5 = this);
      for (var g5 = 0, x5 = 0; x5 < d5.length; x5++) a6 = (c7.words[x5] | 0) + (d5.words[x5] | 0) + g5, this.words[x5] = a6 & 67108863, g5 = a6 >>> 26;
      for (; g5 !== 0 && x5 < c7.length; x5++) a6 = (c7.words[x5] | 0) + g5, this.words[x5] = a6 & 67108863, g5 = a6 >>> 26;
      if (this.length = c7.length, g5 !== 0) this.words[this.length] = g5, this.length++;
      else if (c7 !== this) for (; x5 < c7.length; x5++) this.words[x5] = c7.words[x5];
      return this;
    }, o6.prototype.add = function(f6) {
      var a6;
      return f6.negative !== 0 && this.negative === 0 ? (f6.negative = 0, a6 = this.sub(f6), f6.negative ^= 1, a6) : f6.negative === 0 && this.negative !== 0 ? (this.negative = 0, a6 = f6.sub(this), this.negative = 1, a6) : this.length > f6.length ? this.clone().iadd(f6) : f6.clone().iadd(this);
    }, o6.prototype.isub = function(f6) {
      if (f6.negative !== 0) {
        f6.negative = 0;
        var a6 = this.iadd(f6);
        return f6.negative = 1, a6._normSign();
      } else if (this.negative !== 0) return this.negative = 0, this.iadd(f6), this.negative = 1, this._normSign();
      var c7 = this.cmp(f6);
      if (c7 === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var d5, g5;
      c7 > 0 ? (d5 = this, g5 = f6) : (d5 = f6, g5 = this);
      for (var x5 = 0, M4 = 0; M4 < g5.length; M4++) a6 = (d5.words[M4] | 0) - (g5.words[M4] | 0) + x5, x5 = a6 >> 26, this.words[M4] = a6 & 67108863;
      for (; x5 !== 0 && M4 < d5.length; M4++) a6 = (d5.words[M4] | 0) + x5, x5 = a6 >> 26, this.words[M4] = a6 & 67108863;
      if (x5 === 0 && M4 < d5.length && d5 !== this) for (; M4 < d5.length; M4++) this.words[M4] = d5.words[M4];
      return this.length = Math.max(this.length, M4), d5 !== this && (this.negative = 1), this._strip();
    }, o6.prototype.sub = function(f6) {
      return this.clone().isub(f6);
    };
    function U4(A5, f6, a6) {
      a6.negative = f6.negative ^ A5.negative;
      var c7 = A5.length + f6.length | 0;
      a6.length = c7, c7 = c7 - 1 | 0;
      var d5 = A5.words[0] | 0, g5 = f6.words[0] | 0, x5 = d5 * g5, M4 = x5 & 67108863, l6 = x5 / 67108864 | 0;
      a6.words[0] = M4;
      for (var s5 = 1; s5 < c7; s5++) {
        for (var v5 = l6 >>> 26, k5 = l6 & 67108863, u5 = Math.min(s5, f6.length - 1), E8 = Math.max(0, s5 - A5.length + 1); E8 <= u5; E8++) {
          var _6 = s5 - E8 | 0;
          d5 = A5.words[_6] | 0, g5 = f6.words[E8] | 0, x5 = d5 * g5 + k5, v5 += x5 / 67108864 | 0, k5 = x5 & 67108863;
        }
        a6.words[s5] = k5 | 0, l6 = v5 | 0;
      }
      return l6 !== 0 ? a6.words[s5] = l6 | 0 : a6.length--, a6._strip();
    }
    var J3 = function(f6, a6, c7) {
      var d5 = f6.words, g5 = a6.words, x5 = c7.words, M4 = 0, l6, s5, v5, k5 = d5[0] | 0, u5 = k5 & 8191, E8 = k5 >>> 13, _6 = d5[1] | 0, B4 = _6 & 8191, R4 = _6 >>> 13, T5 = d5[2] | 0, P3 = T5 & 8191, O4 = T5 >>> 13, Ct3 = d5[3] | 0, D5 = Ct3 & 8191, q5 = Ct3 >>> 13, De2 = d5[4] | 0, X3 = De2 & 8191, Z3 = De2 >>> 13, Fe3 = d5[5] | 0, $5 = Fe3 & 8191, tt2 = Fe3 >>> 13, Te = d5[6] | 0, et2 = Te & 8191, rt2 = Te >>> 13, Ue3 = d5[7] | 0, it2 = Ue3 & 8191, nt2 = Ue3 >>> 13, ke3 = d5[8] | 0, ft2 = ke3 & 8191, ot2 = ke3 >>> 13, qe2 = d5[9] | 0, st2 = qe2 & 8191, at2 = qe2 >>> 13, Ke3 = g5[0] | 0, ut2 = Ke3 & 8191, ht2 = Ke3 >>> 13, He3 = g5[1] | 0, ct2 = He3 & 8191, lt2 = He3 >>> 13, ze2 = g5[2] | 0, dt2 = ze2 & 8191, pt2 = ze2 >>> 13, Le3 = g5[3] | 0, vt2 = Le3 & 8191, mt2 = Le3 >>> 13, je3 = g5[4] | 0, gt2 = je3 & 8191, At2 = je3 >>> 13, Qe3 = g5[5] | 0, bt3 = Qe3 & 8191, yt2 = Qe3 >>> 13, Je3 = g5[6] | 0, wt2 = Je3 & 8191, xt2 = Je3 >>> 13, Ge3 = g5[7] | 0, Mt3 = Ge3 & 8191, Et2 = Ge3 >>> 13, Ye3 = g5[8] | 0, St2 = Ye3 & 8191, Nt2 = Ye3 >>> 13, Ve2 = g5[9] | 0, It2 = Ve2 & 8191, _t2 = Ve2 >>> 13;
      c7.negative = f6.negative ^ a6.negative, c7.length = 19, l6 = Math.imul(u5, ut2), s5 = Math.imul(u5, ht2), s5 = s5 + Math.imul(E8, ut2) | 0, v5 = Math.imul(E8, ht2);
      var Me2 = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (Me2 >>> 26) | 0, Me2 &= 67108863, l6 = Math.imul(B4, ut2), s5 = Math.imul(B4, ht2), s5 = s5 + Math.imul(R4, ut2) | 0, v5 = Math.imul(R4, ht2), l6 = l6 + Math.imul(u5, ct2) | 0, s5 = s5 + Math.imul(u5, lt2) | 0, s5 = s5 + Math.imul(E8, ct2) | 0, v5 = v5 + Math.imul(E8, lt2) | 0;
      var Ee2 = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (Ee2 >>> 26) | 0, Ee2 &= 67108863, l6 = Math.imul(P3, ut2), s5 = Math.imul(P3, ht2), s5 = s5 + Math.imul(O4, ut2) | 0, v5 = Math.imul(O4, ht2), l6 = l6 + Math.imul(B4, ct2) | 0, s5 = s5 + Math.imul(B4, lt2) | 0, s5 = s5 + Math.imul(R4, ct2) | 0, v5 = v5 + Math.imul(R4, lt2) | 0, l6 = l6 + Math.imul(u5, dt2) | 0, s5 = s5 + Math.imul(u5, pt2) | 0, s5 = s5 + Math.imul(E8, dt2) | 0, v5 = v5 + Math.imul(E8, pt2) | 0;
      var Se2 = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (Se2 >>> 26) | 0, Se2 &= 67108863, l6 = Math.imul(D5, ut2), s5 = Math.imul(D5, ht2), s5 = s5 + Math.imul(q5, ut2) | 0, v5 = Math.imul(q5, ht2), l6 = l6 + Math.imul(P3, ct2) | 0, s5 = s5 + Math.imul(P3, lt2) | 0, s5 = s5 + Math.imul(O4, ct2) | 0, v5 = v5 + Math.imul(O4, lt2) | 0, l6 = l6 + Math.imul(B4, dt2) | 0, s5 = s5 + Math.imul(B4, pt2) | 0, s5 = s5 + Math.imul(R4, dt2) | 0, v5 = v5 + Math.imul(R4, pt2) | 0, l6 = l6 + Math.imul(u5, vt2) | 0, s5 = s5 + Math.imul(u5, mt2) | 0, s5 = s5 + Math.imul(E8, vt2) | 0, v5 = v5 + Math.imul(E8, mt2) | 0;
      var Ne2 = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (Ne2 >>> 26) | 0, Ne2 &= 67108863, l6 = Math.imul(X3, ut2), s5 = Math.imul(X3, ht2), s5 = s5 + Math.imul(Z3, ut2) | 0, v5 = Math.imul(Z3, ht2), l6 = l6 + Math.imul(D5, ct2) | 0, s5 = s5 + Math.imul(D5, lt2) | 0, s5 = s5 + Math.imul(q5, ct2) | 0, v5 = v5 + Math.imul(q5, lt2) | 0, l6 = l6 + Math.imul(P3, dt2) | 0, s5 = s5 + Math.imul(P3, pt2) | 0, s5 = s5 + Math.imul(O4, dt2) | 0, v5 = v5 + Math.imul(O4, pt2) | 0, l6 = l6 + Math.imul(B4, vt2) | 0, s5 = s5 + Math.imul(B4, mt2) | 0, s5 = s5 + Math.imul(R4, vt2) | 0, v5 = v5 + Math.imul(R4, mt2) | 0, l6 = l6 + Math.imul(u5, gt2) | 0, s5 = s5 + Math.imul(u5, At2) | 0, s5 = s5 + Math.imul(E8, gt2) | 0, v5 = v5 + Math.imul(E8, At2) | 0;
      var Ie = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, l6 = Math.imul($5, ut2), s5 = Math.imul($5, ht2), s5 = s5 + Math.imul(tt2, ut2) | 0, v5 = Math.imul(tt2, ht2), l6 = l6 + Math.imul(X3, ct2) | 0, s5 = s5 + Math.imul(X3, lt2) | 0, s5 = s5 + Math.imul(Z3, ct2) | 0, v5 = v5 + Math.imul(Z3, lt2) | 0, l6 = l6 + Math.imul(D5, dt2) | 0, s5 = s5 + Math.imul(D5, pt2) | 0, s5 = s5 + Math.imul(q5, dt2) | 0, v5 = v5 + Math.imul(q5, pt2) | 0, l6 = l6 + Math.imul(P3, vt2) | 0, s5 = s5 + Math.imul(P3, mt2) | 0, s5 = s5 + Math.imul(O4, vt2) | 0, v5 = v5 + Math.imul(O4, mt2) | 0, l6 = l6 + Math.imul(B4, gt2) | 0, s5 = s5 + Math.imul(B4, At2) | 0, s5 = s5 + Math.imul(R4, gt2) | 0, v5 = v5 + Math.imul(R4, At2) | 0, l6 = l6 + Math.imul(u5, bt3) | 0, s5 = s5 + Math.imul(u5, yt2) | 0, s5 = s5 + Math.imul(E8, bt3) | 0, v5 = v5 + Math.imul(E8, yt2) | 0;
      var Wr = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (Wr >>> 26) | 0, Wr &= 67108863, l6 = Math.imul(et2, ut2), s5 = Math.imul(et2, ht2), s5 = s5 + Math.imul(rt2, ut2) | 0, v5 = Math.imul(rt2, ht2), l6 = l6 + Math.imul($5, ct2) | 0, s5 = s5 + Math.imul($5, lt2) | 0, s5 = s5 + Math.imul(tt2, ct2) | 0, v5 = v5 + Math.imul(tt2, lt2) | 0, l6 = l6 + Math.imul(X3, dt2) | 0, s5 = s5 + Math.imul(X3, pt2) | 0, s5 = s5 + Math.imul(Z3, dt2) | 0, v5 = v5 + Math.imul(Z3, pt2) | 0, l6 = l6 + Math.imul(D5, vt2) | 0, s5 = s5 + Math.imul(D5, mt2) | 0, s5 = s5 + Math.imul(q5, vt2) | 0, v5 = v5 + Math.imul(q5, mt2) | 0, l6 = l6 + Math.imul(P3, gt2) | 0, s5 = s5 + Math.imul(P3, At2) | 0, s5 = s5 + Math.imul(O4, gt2) | 0, v5 = v5 + Math.imul(O4, At2) | 0, l6 = l6 + Math.imul(B4, bt3) | 0, s5 = s5 + Math.imul(B4, yt2) | 0, s5 = s5 + Math.imul(R4, bt3) | 0, v5 = v5 + Math.imul(R4, yt2) | 0, l6 = l6 + Math.imul(u5, wt2) | 0, s5 = s5 + Math.imul(u5, xt2) | 0, s5 = s5 + Math.imul(E8, wt2) | 0, v5 = v5 + Math.imul(E8, xt2) | 0;
      var Xr = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (Xr >>> 26) | 0, Xr &= 67108863, l6 = Math.imul(it2, ut2), s5 = Math.imul(it2, ht2), s5 = s5 + Math.imul(nt2, ut2) | 0, v5 = Math.imul(nt2, ht2), l6 = l6 + Math.imul(et2, ct2) | 0, s5 = s5 + Math.imul(et2, lt2) | 0, s5 = s5 + Math.imul(rt2, ct2) | 0, v5 = v5 + Math.imul(rt2, lt2) | 0, l6 = l6 + Math.imul($5, dt2) | 0, s5 = s5 + Math.imul($5, pt2) | 0, s5 = s5 + Math.imul(tt2, dt2) | 0, v5 = v5 + Math.imul(tt2, pt2) | 0, l6 = l6 + Math.imul(X3, vt2) | 0, s5 = s5 + Math.imul(X3, mt2) | 0, s5 = s5 + Math.imul(Z3, vt2) | 0, v5 = v5 + Math.imul(Z3, mt2) | 0, l6 = l6 + Math.imul(D5, gt2) | 0, s5 = s5 + Math.imul(D5, At2) | 0, s5 = s5 + Math.imul(q5, gt2) | 0, v5 = v5 + Math.imul(q5, At2) | 0, l6 = l6 + Math.imul(P3, bt3) | 0, s5 = s5 + Math.imul(P3, yt2) | 0, s5 = s5 + Math.imul(O4, bt3) | 0, v5 = v5 + Math.imul(O4, yt2) | 0, l6 = l6 + Math.imul(B4, wt2) | 0, s5 = s5 + Math.imul(B4, xt2) | 0, s5 = s5 + Math.imul(R4, wt2) | 0, v5 = v5 + Math.imul(R4, xt2) | 0, l6 = l6 + Math.imul(u5, Mt3) | 0, s5 = s5 + Math.imul(u5, Et2) | 0, s5 = s5 + Math.imul(E8, Mt3) | 0, v5 = v5 + Math.imul(E8, Et2) | 0;
      var Zr = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, l6 = Math.imul(ft2, ut2), s5 = Math.imul(ft2, ht2), s5 = s5 + Math.imul(ot2, ut2) | 0, v5 = Math.imul(ot2, ht2), l6 = l6 + Math.imul(it2, ct2) | 0, s5 = s5 + Math.imul(it2, lt2) | 0, s5 = s5 + Math.imul(nt2, ct2) | 0, v5 = v5 + Math.imul(nt2, lt2) | 0, l6 = l6 + Math.imul(et2, dt2) | 0, s5 = s5 + Math.imul(et2, pt2) | 0, s5 = s5 + Math.imul(rt2, dt2) | 0, v5 = v5 + Math.imul(rt2, pt2) | 0, l6 = l6 + Math.imul($5, vt2) | 0, s5 = s5 + Math.imul($5, mt2) | 0, s5 = s5 + Math.imul(tt2, vt2) | 0, v5 = v5 + Math.imul(tt2, mt2) | 0, l6 = l6 + Math.imul(X3, gt2) | 0, s5 = s5 + Math.imul(X3, At2) | 0, s5 = s5 + Math.imul(Z3, gt2) | 0, v5 = v5 + Math.imul(Z3, At2) | 0, l6 = l6 + Math.imul(D5, bt3) | 0, s5 = s5 + Math.imul(D5, yt2) | 0, s5 = s5 + Math.imul(q5, bt3) | 0, v5 = v5 + Math.imul(q5, yt2) | 0, l6 = l6 + Math.imul(P3, wt2) | 0, s5 = s5 + Math.imul(P3, xt2) | 0, s5 = s5 + Math.imul(O4, wt2) | 0, v5 = v5 + Math.imul(O4, xt2) | 0, l6 = l6 + Math.imul(B4, Mt3) | 0, s5 = s5 + Math.imul(B4, Et2) | 0, s5 = s5 + Math.imul(R4, Mt3) | 0, v5 = v5 + Math.imul(R4, Et2) | 0, l6 = l6 + Math.imul(u5, St2) | 0, s5 = s5 + Math.imul(u5, Nt2) | 0, s5 = s5 + Math.imul(E8, St2) | 0, v5 = v5 + Math.imul(E8, Nt2) | 0;
      var $r2 = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + ($r2 >>> 26) | 0, $r2 &= 67108863, l6 = Math.imul(st2, ut2), s5 = Math.imul(st2, ht2), s5 = s5 + Math.imul(at2, ut2) | 0, v5 = Math.imul(at2, ht2), l6 = l6 + Math.imul(ft2, ct2) | 0, s5 = s5 + Math.imul(ft2, lt2) | 0, s5 = s5 + Math.imul(ot2, ct2) | 0, v5 = v5 + Math.imul(ot2, lt2) | 0, l6 = l6 + Math.imul(it2, dt2) | 0, s5 = s5 + Math.imul(it2, pt2) | 0, s5 = s5 + Math.imul(nt2, dt2) | 0, v5 = v5 + Math.imul(nt2, pt2) | 0, l6 = l6 + Math.imul(et2, vt2) | 0, s5 = s5 + Math.imul(et2, mt2) | 0, s5 = s5 + Math.imul(rt2, vt2) | 0, v5 = v5 + Math.imul(rt2, mt2) | 0, l6 = l6 + Math.imul($5, gt2) | 0, s5 = s5 + Math.imul($5, At2) | 0, s5 = s5 + Math.imul(tt2, gt2) | 0, v5 = v5 + Math.imul(tt2, At2) | 0, l6 = l6 + Math.imul(X3, bt3) | 0, s5 = s5 + Math.imul(X3, yt2) | 0, s5 = s5 + Math.imul(Z3, bt3) | 0, v5 = v5 + Math.imul(Z3, yt2) | 0, l6 = l6 + Math.imul(D5, wt2) | 0, s5 = s5 + Math.imul(D5, xt2) | 0, s5 = s5 + Math.imul(q5, wt2) | 0, v5 = v5 + Math.imul(q5, xt2) | 0, l6 = l6 + Math.imul(P3, Mt3) | 0, s5 = s5 + Math.imul(P3, Et2) | 0, s5 = s5 + Math.imul(O4, Mt3) | 0, v5 = v5 + Math.imul(O4, Et2) | 0, l6 = l6 + Math.imul(B4, St2) | 0, s5 = s5 + Math.imul(B4, Nt2) | 0, s5 = s5 + Math.imul(R4, St2) | 0, v5 = v5 + Math.imul(R4, Nt2) | 0, l6 = l6 + Math.imul(u5, It2) | 0, s5 = s5 + Math.imul(u5, _t2) | 0, s5 = s5 + Math.imul(E8, It2) | 0, v5 = v5 + Math.imul(E8, _t2) | 0;
      var ti = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (ti >>> 26) | 0, ti &= 67108863, l6 = Math.imul(st2, ct2), s5 = Math.imul(st2, lt2), s5 = s5 + Math.imul(at2, ct2) | 0, v5 = Math.imul(at2, lt2), l6 = l6 + Math.imul(ft2, dt2) | 0, s5 = s5 + Math.imul(ft2, pt2) | 0, s5 = s5 + Math.imul(ot2, dt2) | 0, v5 = v5 + Math.imul(ot2, pt2) | 0, l6 = l6 + Math.imul(it2, vt2) | 0, s5 = s5 + Math.imul(it2, mt2) | 0, s5 = s5 + Math.imul(nt2, vt2) | 0, v5 = v5 + Math.imul(nt2, mt2) | 0, l6 = l6 + Math.imul(et2, gt2) | 0, s5 = s5 + Math.imul(et2, At2) | 0, s5 = s5 + Math.imul(rt2, gt2) | 0, v5 = v5 + Math.imul(rt2, At2) | 0, l6 = l6 + Math.imul($5, bt3) | 0, s5 = s5 + Math.imul($5, yt2) | 0, s5 = s5 + Math.imul(tt2, bt3) | 0, v5 = v5 + Math.imul(tt2, yt2) | 0, l6 = l6 + Math.imul(X3, wt2) | 0, s5 = s5 + Math.imul(X3, xt2) | 0, s5 = s5 + Math.imul(Z3, wt2) | 0, v5 = v5 + Math.imul(Z3, xt2) | 0, l6 = l6 + Math.imul(D5, Mt3) | 0, s5 = s5 + Math.imul(D5, Et2) | 0, s5 = s5 + Math.imul(q5, Mt3) | 0, v5 = v5 + Math.imul(q5, Et2) | 0, l6 = l6 + Math.imul(P3, St2) | 0, s5 = s5 + Math.imul(P3, Nt2) | 0, s5 = s5 + Math.imul(O4, St2) | 0, v5 = v5 + Math.imul(O4, Nt2) | 0, l6 = l6 + Math.imul(B4, It2) | 0, s5 = s5 + Math.imul(B4, _t2) | 0, s5 = s5 + Math.imul(R4, It2) | 0, v5 = v5 + Math.imul(R4, _t2) | 0;
      var ei = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (ei >>> 26) | 0, ei &= 67108863, l6 = Math.imul(st2, dt2), s5 = Math.imul(st2, pt2), s5 = s5 + Math.imul(at2, dt2) | 0, v5 = Math.imul(at2, pt2), l6 = l6 + Math.imul(ft2, vt2) | 0, s5 = s5 + Math.imul(ft2, mt2) | 0, s5 = s5 + Math.imul(ot2, vt2) | 0, v5 = v5 + Math.imul(ot2, mt2) | 0, l6 = l6 + Math.imul(it2, gt2) | 0, s5 = s5 + Math.imul(it2, At2) | 0, s5 = s5 + Math.imul(nt2, gt2) | 0, v5 = v5 + Math.imul(nt2, At2) | 0, l6 = l6 + Math.imul(et2, bt3) | 0, s5 = s5 + Math.imul(et2, yt2) | 0, s5 = s5 + Math.imul(rt2, bt3) | 0, v5 = v5 + Math.imul(rt2, yt2) | 0, l6 = l6 + Math.imul($5, wt2) | 0, s5 = s5 + Math.imul($5, xt2) | 0, s5 = s5 + Math.imul(tt2, wt2) | 0, v5 = v5 + Math.imul(tt2, xt2) | 0, l6 = l6 + Math.imul(X3, Mt3) | 0, s5 = s5 + Math.imul(X3, Et2) | 0, s5 = s5 + Math.imul(Z3, Mt3) | 0, v5 = v5 + Math.imul(Z3, Et2) | 0, l6 = l6 + Math.imul(D5, St2) | 0, s5 = s5 + Math.imul(D5, Nt2) | 0, s5 = s5 + Math.imul(q5, St2) | 0, v5 = v5 + Math.imul(q5, Nt2) | 0, l6 = l6 + Math.imul(P3, It2) | 0, s5 = s5 + Math.imul(P3, _t2) | 0, s5 = s5 + Math.imul(O4, It2) | 0, v5 = v5 + Math.imul(O4, _t2) | 0;
      var ri = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (ri >>> 26) | 0, ri &= 67108863, l6 = Math.imul(st2, vt2), s5 = Math.imul(st2, mt2), s5 = s5 + Math.imul(at2, vt2) | 0, v5 = Math.imul(at2, mt2), l6 = l6 + Math.imul(ft2, gt2) | 0, s5 = s5 + Math.imul(ft2, At2) | 0, s5 = s5 + Math.imul(ot2, gt2) | 0, v5 = v5 + Math.imul(ot2, At2) | 0, l6 = l6 + Math.imul(it2, bt3) | 0, s5 = s5 + Math.imul(it2, yt2) | 0, s5 = s5 + Math.imul(nt2, bt3) | 0, v5 = v5 + Math.imul(nt2, yt2) | 0, l6 = l6 + Math.imul(et2, wt2) | 0, s5 = s5 + Math.imul(et2, xt2) | 0, s5 = s5 + Math.imul(rt2, wt2) | 0, v5 = v5 + Math.imul(rt2, xt2) | 0, l6 = l6 + Math.imul($5, Mt3) | 0, s5 = s5 + Math.imul($5, Et2) | 0, s5 = s5 + Math.imul(tt2, Mt3) | 0, v5 = v5 + Math.imul(tt2, Et2) | 0, l6 = l6 + Math.imul(X3, St2) | 0, s5 = s5 + Math.imul(X3, Nt2) | 0, s5 = s5 + Math.imul(Z3, St2) | 0, v5 = v5 + Math.imul(Z3, Nt2) | 0, l6 = l6 + Math.imul(D5, It2) | 0, s5 = s5 + Math.imul(D5, _t2) | 0, s5 = s5 + Math.imul(q5, It2) | 0, v5 = v5 + Math.imul(q5, _t2) | 0;
      var ii = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (ii >>> 26) | 0, ii &= 67108863, l6 = Math.imul(st2, gt2), s5 = Math.imul(st2, At2), s5 = s5 + Math.imul(at2, gt2) | 0, v5 = Math.imul(at2, At2), l6 = l6 + Math.imul(ft2, bt3) | 0, s5 = s5 + Math.imul(ft2, yt2) | 0, s5 = s5 + Math.imul(ot2, bt3) | 0, v5 = v5 + Math.imul(ot2, yt2) | 0, l6 = l6 + Math.imul(it2, wt2) | 0, s5 = s5 + Math.imul(it2, xt2) | 0, s5 = s5 + Math.imul(nt2, wt2) | 0, v5 = v5 + Math.imul(nt2, xt2) | 0, l6 = l6 + Math.imul(et2, Mt3) | 0, s5 = s5 + Math.imul(et2, Et2) | 0, s5 = s5 + Math.imul(rt2, Mt3) | 0, v5 = v5 + Math.imul(rt2, Et2) | 0, l6 = l6 + Math.imul($5, St2) | 0, s5 = s5 + Math.imul($5, Nt2) | 0, s5 = s5 + Math.imul(tt2, St2) | 0, v5 = v5 + Math.imul(tt2, Nt2) | 0, l6 = l6 + Math.imul(X3, It2) | 0, s5 = s5 + Math.imul(X3, _t2) | 0, s5 = s5 + Math.imul(Z3, It2) | 0, v5 = v5 + Math.imul(Z3, _t2) | 0;
      var ni = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (ni >>> 26) | 0, ni &= 67108863, l6 = Math.imul(st2, bt3), s5 = Math.imul(st2, yt2), s5 = s5 + Math.imul(at2, bt3) | 0, v5 = Math.imul(at2, yt2), l6 = l6 + Math.imul(ft2, wt2) | 0, s5 = s5 + Math.imul(ft2, xt2) | 0, s5 = s5 + Math.imul(ot2, wt2) | 0, v5 = v5 + Math.imul(ot2, xt2) | 0, l6 = l6 + Math.imul(it2, Mt3) | 0, s5 = s5 + Math.imul(it2, Et2) | 0, s5 = s5 + Math.imul(nt2, Mt3) | 0, v5 = v5 + Math.imul(nt2, Et2) | 0, l6 = l6 + Math.imul(et2, St2) | 0, s5 = s5 + Math.imul(et2, Nt2) | 0, s5 = s5 + Math.imul(rt2, St2) | 0, v5 = v5 + Math.imul(rt2, Nt2) | 0, l6 = l6 + Math.imul($5, It2) | 0, s5 = s5 + Math.imul($5, _t2) | 0, s5 = s5 + Math.imul(tt2, It2) | 0, v5 = v5 + Math.imul(tt2, _t2) | 0;
      var fi = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (fi >>> 26) | 0, fi &= 67108863, l6 = Math.imul(st2, wt2), s5 = Math.imul(st2, xt2), s5 = s5 + Math.imul(at2, wt2) | 0, v5 = Math.imul(at2, xt2), l6 = l6 + Math.imul(ft2, Mt3) | 0, s5 = s5 + Math.imul(ft2, Et2) | 0, s5 = s5 + Math.imul(ot2, Mt3) | 0, v5 = v5 + Math.imul(ot2, Et2) | 0, l6 = l6 + Math.imul(it2, St2) | 0, s5 = s5 + Math.imul(it2, Nt2) | 0, s5 = s5 + Math.imul(nt2, St2) | 0, v5 = v5 + Math.imul(nt2, Nt2) | 0, l6 = l6 + Math.imul(et2, It2) | 0, s5 = s5 + Math.imul(et2, _t2) | 0, s5 = s5 + Math.imul(rt2, It2) | 0, v5 = v5 + Math.imul(rt2, _t2) | 0;
      var oi = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (oi >>> 26) | 0, oi &= 67108863, l6 = Math.imul(st2, Mt3), s5 = Math.imul(st2, Et2), s5 = s5 + Math.imul(at2, Mt3) | 0, v5 = Math.imul(at2, Et2), l6 = l6 + Math.imul(ft2, St2) | 0, s5 = s5 + Math.imul(ft2, Nt2) | 0, s5 = s5 + Math.imul(ot2, St2) | 0, v5 = v5 + Math.imul(ot2, Nt2) | 0, l6 = l6 + Math.imul(it2, It2) | 0, s5 = s5 + Math.imul(it2, _t2) | 0, s5 = s5 + Math.imul(nt2, It2) | 0, v5 = v5 + Math.imul(nt2, _t2) | 0;
      var si = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (si >>> 26) | 0, si &= 67108863, l6 = Math.imul(st2, St2), s5 = Math.imul(st2, Nt2), s5 = s5 + Math.imul(at2, St2) | 0, v5 = Math.imul(at2, Nt2), l6 = l6 + Math.imul(ft2, It2) | 0, s5 = s5 + Math.imul(ft2, _t2) | 0, s5 = s5 + Math.imul(ot2, It2) | 0, v5 = v5 + Math.imul(ot2, _t2) | 0;
      var ai = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      M4 = (v5 + (s5 >>> 13) | 0) + (ai >>> 26) | 0, ai &= 67108863, l6 = Math.imul(st2, It2), s5 = Math.imul(st2, _t2), s5 = s5 + Math.imul(at2, It2) | 0, v5 = Math.imul(at2, _t2);
      var ui = (M4 + l6 | 0) + ((s5 & 8191) << 13) | 0;
      return M4 = (v5 + (s5 >>> 13) | 0) + (ui >>> 26) | 0, ui &= 67108863, x5[0] = Me2, x5[1] = Ee2, x5[2] = Se2, x5[3] = Ne2, x5[4] = Ie, x5[5] = Wr, x5[6] = Xr, x5[7] = Zr, x5[8] = $r2, x5[9] = ti, x5[10] = ei, x5[11] = ri, x5[12] = ii, x5[13] = ni, x5[14] = fi, x5[15] = oi, x5[16] = si, x5[17] = ai, x5[18] = ui, M4 !== 0 && (x5[19] = M4, c7.length++), c7;
    };
    Math.imul || (J3 = U4);
    function Bt3(A5, f6, a6) {
      a6.negative = f6.negative ^ A5.negative, a6.length = A5.length + f6.length;
      for (var c7 = 0, d5 = 0, g5 = 0; g5 < a6.length - 1; g5++) {
        var x5 = d5;
        d5 = 0;
        for (var M4 = c7 & 67108863, l6 = Math.min(g5, f6.length - 1), s5 = Math.max(0, g5 - A5.length + 1); s5 <= l6; s5++) {
          var v5 = g5 - s5, k5 = A5.words[v5] | 0, u5 = f6.words[s5] | 0, E8 = k5 * u5, _6 = E8 & 67108863;
          x5 = x5 + (E8 / 67108864 | 0) | 0, _6 = _6 + M4 | 0, M4 = _6 & 67108863, x5 = x5 + (_6 >>> 26) | 0, d5 += x5 >>> 26, x5 &= 67108863;
        }
        a6.words[g5] = M4, c7 = x5, x5 = d5;
      }
      return c7 !== 0 ? a6.words[g5] = c7 : a6.length--, a6._strip();
    }
    function G2(A5, f6, a6) {
      return Bt3(A5, f6, a6);
    }
    o6.prototype.mulTo = function(f6, a6) {
      var c7, d5 = this.length + f6.length;
      return this.length === 10 && f6.length === 10 ? c7 = J3(this, f6, a6) : d5 < 63 ? c7 = U4(this, f6, a6) : d5 < 1024 ? c7 = Bt3(this, f6, a6) : c7 = G2(this, f6, a6), c7;
    }, o6.prototype.mul = function(f6) {
      var a6 = new o6(null);
      return a6.words = new Array(this.length + f6.length), this.mulTo(f6, a6);
    }, o6.prototype.mulf = function(f6) {
      var a6 = new o6(null);
      return a6.words = new Array(this.length + f6.length), G2(this, f6, a6);
    }, o6.prototype.imul = function(f6) {
      return this.clone().mulTo(f6, this);
    }, o6.prototype.imuln = function(f6) {
      var a6 = f6 < 0;
      a6 && (f6 = -f6), i6(typeof f6 == "number"), i6(f6 < 67108864);
      for (var c7 = 0, d5 = 0; d5 < this.length; d5++) {
        var g5 = (this.words[d5] | 0) * f6, x5 = (g5 & 67108863) + (c7 & 67108863);
        c7 >>= 26, c7 += g5 / 67108864 | 0, c7 += x5 >>> 26, this.words[d5] = x5 & 67108863;
      }
      return c7 !== 0 && (this.words[d5] = c7, this.length++), a6 ? this.ineg() : this;
    }, o6.prototype.muln = function(f6) {
      return this.clone().imuln(f6);
    }, o6.prototype.sqr = function() {
      return this.mul(this);
    }, o6.prototype.isqr = function() {
      return this.imul(this.clone());
    }, o6.prototype.pow = function(f6) {
      var a6 = F3(f6);
      if (a6.length === 0) return new o6(1);
      for (var c7 = this, d5 = 0; d5 < a6.length && a6[d5] === 0; d5++, c7 = c7.sqr()) ;
      if (++d5 < a6.length) for (var g5 = c7.sqr(); d5 < a6.length; d5++, g5 = g5.sqr()) a6[d5] !== 0 && (c7 = c7.mul(g5));
      return c7;
    }, o6.prototype.iushln = function(f6) {
      i6(typeof f6 == "number" && f6 >= 0);
      var a6 = f6 % 26, c7 = (f6 - a6) / 26, d5 = 67108863 >>> 26 - a6 << 26 - a6, g5;
      if (a6 !== 0) {
        var x5 = 0;
        for (g5 = 0; g5 < this.length; g5++) {
          var M4 = this.words[g5] & d5, l6 = (this.words[g5] | 0) - M4 << a6;
          this.words[g5] = l6 | x5, x5 = M4 >>> 26 - a6;
        }
        x5 && (this.words[g5] = x5, this.length++);
      }
      if (c7 !== 0) {
        for (g5 = this.length - 1; g5 >= 0; g5--) this.words[g5 + c7] = this.words[g5];
        for (g5 = 0; g5 < c7; g5++) this.words[g5] = 0;
        this.length += c7;
      }
      return this._strip();
    }, o6.prototype.ishln = function(f6) {
      return i6(this.negative === 0), this.iushln(f6);
    }, o6.prototype.iushrn = function(f6, a6, c7) {
      i6(typeof f6 == "number" && f6 >= 0);
      var d5;
      a6 ? d5 = (a6 - a6 % 26) / 26 : d5 = 0;
      var g5 = f6 % 26, x5 = Math.min((f6 - g5) / 26, this.length), M4 = 67108863 ^ 67108863 >>> g5 << g5, l6 = c7;
      if (d5 -= x5, d5 = Math.max(0, d5), l6) {
        for (var s5 = 0; s5 < x5; s5++) l6.words[s5] = this.words[s5];
        l6.length = x5;
      }
      if (x5 !== 0) if (this.length > x5) for (this.length -= x5, s5 = 0; s5 < this.length; s5++) this.words[s5] = this.words[s5 + x5];
      else this.words[0] = 0, this.length = 1;
      var v5 = 0;
      for (s5 = this.length - 1; s5 >= 0 && (v5 !== 0 || s5 >= d5); s5--) {
        var k5 = this.words[s5] | 0;
        this.words[s5] = v5 << 26 - g5 | k5 >>> g5, v5 = k5 & M4;
      }
      return l6 && v5 !== 0 && (l6.words[l6.length++] = v5), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
    }, o6.prototype.ishrn = function(f6, a6, c7) {
      return i6(this.negative === 0), this.iushrn(f6, a6, c7);
    }, o6.prototype.shln = function(f6) {
      return this.clone().ishln(f6);
    }, o6.prototype.ushln = function(f6) {
      return this.clone().iushln(f6);
    }, o6.prototype.shrn = function(f6) {
      return this.clone().ishrn(f6);
    }, o6.prototype.ushrn = function(f6) {
      return this.clone().iushrn(f6);
    }, o6.prototype.testn = function(f6) {
      i6(typeof f6 == "number" && f6 >= 0);
      var a6 = f6 % 26, c7 = (f6 - a6) / 26, d5 = 1 << a6;
      if (this.length <= c7) return false;
      var g5 = this.words[c7];
      return !!(g5 & d5);
    }, o6.prototype.imaskn = function(f6) {
      i6(typeof f6 == "number" && f6 >= 0);
      var a6 = f6 % 26, c7 = (f6 - a6) / 26;
      if (i6(this.negative === 0, "imaskn works only with positive numbers"), this.length <= c7) return this;
      if (a6 !== 0 && c7++, this.length = Math.min(c7, this.length), a6 !== 0) {
        var d5 = 67108863 ^ 67108863 >>> a6 << a6;
        this.words[this.length - 1] &= d5;
      }
      return this._strip();
    }, o6.prototype.maskn = function(f6) {
      return this.clone().imaskn(f6);
    }, o6.prototype.iaddn = function(f6) {
      return i6(typeof f6 == "number"), i6(f6 < 67108864), f6 < 0 ? this.isubn(-f6) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= f6 ? (this.words[0] = f6 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(f6), this.negative = 1, this) : this._iaddn(f6);
    }, o6.prototype._iaddn = function(f6) {
      this.words[0] += f6;
      for (var a6 = 0; a6 < this.length && this.words[a6] >= 67108864; a6++) this.words[a6] -= 67108864, a6 === this.length - 1 ? this.words[a6 + 1] = 1 : this.words[a6 + 1]++;
      return this.length = Math.max(this.length, a6 + 1), this;
    }, o6.prototype.isubn = function(f6) {
      if (i6(typeof f6 == "number"), i6(f6 < 67108864), f6 < 0) return this.iaddn(-f6);
      if (this.negative !== 0) return this.negative = 0, this.iaddn(f6), this.negative = 1, this;
      if (this.words[0] -= f6, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
      else for (var a6 = 0; a6 < this.length && this.words[a6] < 0; a6++) this.words[a6] += 67108864, this.words[a6 + 1] -= 1;
      return this._strip();
    }, o6.prototype.addn = function(f6) {
      return this.clone().iaddn(f6);
    }, o6.prototype.subn = function(f6) {
      return this.clone().isubn(f6);
    }, o6.prototype.iabs = function() {
      return this.negative = 0, this;
    }, o6.prototype.abs = function() {
      return this.clone().iabs();
    }, o6.prototype._ishlnsubmul = function(f6, a6, c7) {
      var d5 = f6.length + c7, g5;
      this._expand(d5);
      var x5, M4 = 0;
      for (g5 = 0; g5 < f6.length; g5++) {
        x5 = (this.words[g5 + c7] | 0) + M4;
        var l6 = (f6.words[g5] | 0) * a6;
        x5 -= l6 & 67108863, M4 = (x5 >> 26) - (l6 / 67108864 | 0), this.words[g5 + c7] = x5 & 67108863;
      }
      for (; g5 < this.length - c7; g5++) x5 = (this.words[g5 + c7] | 0) + M4, M4 = x5 >> 26, this.words[g5 + c7] = x5 & 67108863;
      if (M4 === 0) return this._strip();
      for (i6(M4 === -1), M4 = 0, g5 = 0; g5 < this.length; g5++) x5 = -(this.words[g5] | 0) + M4, M4 = x5 >> 26, this.words[g5] = x5 & 67108863;
      return this.negative = 1, this._strip();
    }, o6.prototype._wordDiv = function(f6, a6) {
      var c7 = this.length - f6.length, d5 = this.clone(), g5 = f6, x5 = g5.words[g5.length - 1] | 0, M4 = this._countBits(x5);
      c7 = 26 - M4, c7 !== 0 && (g5 = g5.ushln(c7), d5.iushln(c7), x5 = g5.words[g5.length - 1] | 0);
      var l6 = d5.length - g5.length, s5;
      if (a6 !== "mod") {
        s5 = new o6(null), s5.length = l6 + 1, s5.words = new Array(s5.length);
        for (var v5 = 0; v5 < s5.length; v5++) s5.words[v5] = 0;
      }
      var k5 = d5.clone()._ishlnsubmul(g5, 1, l6);
      k5.negative === 0 && (d5 = k5, s5 && (s5.words[l6] = 1));
      for (var u5 = l6 - 1; u5 >= 0; u5--) {
        var E8 = (d5.words[g5.length + u5] | 0) * 67108864 + (d5.words[g5.length + u5 - 1] | 0);
        for (E8 = Math.min(E8 / x5 | 0, 67108863), d5._ishlnsubmul(g5, E8, u5); d5.negative !== 0; ) E8--, d5.negative = 0, d5._ishlnsubmul(g5, 1, u5), d5.isZero() || (d5.negative ^= 1);
        s5 && (s5.words[u5] = E8);
      }
      return s5 && s5._strip(), d5._strip(), a6 !== "div" && c7 !== 0 && d5.iushrn(c7), { div: s5 || null, mod: d5 };
    }, o6.prototype.divmod = function(f6, a6, c7) {
      if (i6(!f6.isZero()), this.isZero()) return { div: new o6(0), mod: new o6(0) };
      var d5, g5, x5;
      return this.negative !== 0 && f6.negative === 0 ? (x5 = this.neg().divmod(f6, a6), a6 !== "mod" && (d5 = x5.div.neg()), a6 !== "div" && (g5 = x5.mod.neg(), c7 && g5.negative !== 0 && g5.iadd(f6)), { div: d5, mod: g5 }) : this.negative === 0 && f6.negative !== 0 ? (x5 = this.divmod(f6.neg(), a6), a6 !== "mod" && (d5 = x5.div.neg()), { div: d5, mod: x5.mod }) : this.negative & f6.negative ? (x5 = this.neg().divmod(f6.neg(), a6), a6 !== "div" && (g5 = x5.mod.neg(), c7 && g5.negative !== 0 && g5.isub(f6)), { div: x5.div, mod: g5 }) : f6.length > this.length || this.cmp(f6) < 0 ? { div: new o6(0), mod: this } : f6.length === 1 ? a6 === "div" ? { div: this.divn(f6.words[0]), mod: null } : a6 === "mod" ? { div: null, mod: new o6(this.modrn(f6.words[0])) } : { div: this.divn(f6.words[0]), mod: new o6(this.modrn(f6.words[0])) } : this._wordDiv(f6, a6);
    }, o6.prototype.div = function(f6) {
      return this.divmod(f6, "div", false).div;
    }, o6.prototype.mod = function(f6) {
      return this.divmod(f6, "mod", false).mod;
    }, o6.prototype.umod = function(f6) {
      return this.divmod(f6, "mod", true).mod;
    }, o6.prototype.divRound = function(f6) {
      var a6 = this.divmod(f6);
      if (a6.mod.isZero()) return a6.div;
      var c7 = a6.div.negative !== 0 ? a6.mod.isub(f6) : a6.mod, d5 = f6.ushrn(1), g5 = f6.andln(1), x5 = c7.cmp(d5);
      return x5 < 0 || g5 === 1 && x5 === 0 ? a6.div : a6.div.negative !== 0 ? a6.div.isubn(1) : a6.div.iaddn(1);
    }, o6.prototype.modrn = function(f6) {
      var a6 = f6 < 0;
      a6 && (f6 = -f6), i6(f6 <= 67108863);
      for (var c7 = (1 << 26) % f6, d5 = 0, g5 = this.length - 1; g5 >= 0; g5--) d5 = (c7 * d5 + (this.words[g5] | 0)) % f6;
      return a6 ? -d5 : d5;
    }, o6.prototype.modn = function(f6) {
      return this.modrn(f6);
    }, o6.prototype.idivn = function(f6) {
      var a6 = f6 < 0;
      a6 && (f6 = -f6), i6(f6 <= 67108863);
      for (var c7 = 0, d5 = this.length - 1; d5 >= 0; d5--) {
        var g5 = (this.words[d5] | 0) + c7 * 67108864;
        this.words[d5] = g5 / f6 | 0, c7 = g5 % f6;
      }
      return this._strip(), a6 ? this.ineg() : this;
    }, o6.prototype.divn = function(f6) {
      return this.clone().idivn(f6);
    }, o6.prototype.egcd = function(f6) {
      i6(f6.negative === 0), i6(!f6.isZero());
      var a6 = this, c7 = f6.clone();
      a6.negative !== 0 ? a6 = a6.umod(f6) : a6 = a6.clone();
      for (var d5 = new o6(1), g5 = new o6(0), x5 = new o6(0), M4 = new o6(1), l6 = 0; a6.isEven() && c7.isEven(); ) a6.iushrn(1), c7.iushrn(1), ++l6;
      for (var s5 = c7.clone(), v5 = a6.clone(); !a6.isZero(); ) {
        for (var k5 = 0, u5 = 1; !(a6.words[0] & u5) && k5 < 26; ++k5, u5 <<= 1) ;
        if (k5 > 0) for (a6.iushrn(k5); k5-- > 0; ) (d5.isOdd() || g5.isOdd()) && (d5.iadd(s5), g5.isub(v5)), d5.iushrn(1), g5.iushrn(1);
        for (var E8 = 0, _6 = 1; !(c7.words[0] & _6) && E8 < 26; ++E8, _6 <<= 1) ;
        if (E8 > 0) for (c7.iushrn(E8); E8-- > 0; ) (x5.isOdd() || M4.isOdd()) && (x5.iadd(s5), M4.isub(v5)), x5.iushrn(1), M4.iushrn(1);
        a6.cmp(c7) >= 0 ? (a6.isub(c7), d5.isub(x5), g5.isub(M4)) : (c7.isub(a6), x5.isub(d5), M4.isub(g5));
      }
      return { a: x5, b: M4, gcd: c7.iushln(l6) };
    }, o6.prototype._invmp = function(f6) {
      i6(f6.negative === 0), i6(!f6.isZero());
      var a6 = this, c7 = f6.clone();
      a6.negative !== 0 ? a6 = a6.umod(f6) : a6 = a6.clone();
      for (var d5 = new o6(1), g5 = new o6(0), x5 = c7.clone(); a6.cmpn(1) > 0 && c7.cmpn(1) > 0; ) {
        for (var M4 = 0, l6 = 1; !(a6.words[0] & l6) && M4 < 26; ++M4, l6 <<= 1) ;
        if (M4 > 0) for (a6.iushrn(M4); M4-- > 0; ) d5.isOdd() && d5.iadd(x5), d5.iushrn(1);
        for (var s5 = 0, v5 = 1; !(c7.words[0] & v5) && s5 < 26; ++s5, v5 <<= 1) ;
        if (s5 > 0) for (c7.iushrn(s5); s5-- > 0; ) g5.isOdd() && g5.iadd(x5), g5.iushrn(1);
        a6.cmp(c7) >= 0 ? (a6.isub(c7), d5.isub(g5)) : (c7.isub(a6), g5.isub(d5));
      }
      var k5;
      return a6.cmpn(1) === 0 ? k5 = d5 : k5 = g5, k5.cmpn(0) < 0 && k5.iadd(f6), k5;
    }, o6.prototype.gcd = function(f6) {
      if (this.isZero()) return f6.abs();
      if (f6.isZero()) return this.abs();
      var a6 = this.clone(), c7 = f6.clone();
      a6.negative = 0, c7.negative = 0;
      for (var d5 = 0; a6.isEven() && c7.isEven(); d5++) a6.iushrn(1), c7.iushrn(1);
      do {
        for (; a6.isEven(); ) a6.iushrn(1);
        for (; c7.isEven(); ) c7.iushrn(1);
        var g5 = a6.cmp(c7);
        if (g5 < 0) {
          var x5 = a6;
          a6 = c7, c7 = x5;
        } else if (g5 === 0 || c7.cmpn(1) === 0) break;
        a6.isub(c7);
      } while (true);
      return c7.iushln(d5);
    }, o6.prototype.invm = function(f6) {
      return this.egcd(f6).a.umod(f6);
    }, o6.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, o6.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, o6.prototype.andln = function(f6) {
      return this.words[0] & f6;
    }, o6.prototype.bincn = function(f6) {
      i6(typeof f6 == "number");
      var a6 = f6 % 26, c7 = (f6 - a6) / 26, d5 = 1 << a6;
      if (this.length <= c7) return this._expand(c7 + 1), this.words[c7] |= d5, this;
      for (var g5 = d5, x5 = c7; g5 !== 0 && x5 < this.length; x5++) {
        var M4 = this.words[x5] | 0;
        M4 += g5, g5 = M4 >>> 26, M4 &= 67108863, this.words[x5] = M4;
      }
      return g5 !== 0 && (this.words[x5] = g5, this.length++), this;
    }, o6.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, o6.prototype.cmpn = function(f6) {
      var a6 = f6 < 0;
      if (this.negative !== 0 && !a6) return -1;
      if (this.negative === 0 && a6) return 1;
      this._strip();
      var c7;
      if (this.length > 1) c7 = 1;
      else {
        a6 && (f6 = -f6), i6(f6 <= 67108863, "Number is too big");
        var d5 = this.words[0] | 0;
        c7 = d5 === f6 ? 0 : d5 < f6 ? -1 : 1;
      }
      return this.negative !== 0 ? -c7 | 0 : c7;
    }, o6.prototype.cmp = function(f6) {
      if (this.negative !== 0 && f6.negative === 0) return -1;
      if (this.negative === 0 && f6.negative !== 0) return 1;
      var a6 = this.ucmp(f6);
      return this.negative !== 0 ? -a6 | 0 : a6;
    }, o6.prototype.ucmp = function(f6) {
      if (this.length > f6.length) return 1;
      if (this.length < f6.length) return -1;
      for (var a6 = 0, c7 = this.length - 1; c7 >= 0; c7--) {
        var d5 = this.words[c7] | 0, g5 = f6.words[c7] | 0;
        if (d5 !== g5) {
          d5 < g5 ? a6 = -1 : d5 > g5 && (a6 = 1);
          break;
        }
      }
      return a6;
    }, o6.prototype.gtn = function(f6) {
      return this.cmpn(f6) === 1;
    }, o6.prototype.gt = function(f6) {
      return this.cmp(f6) === 1;
    }, o6.prototype.gten = function(f6) {
      return this.cmpn(f6) >= 0;
    }, o6.prototype.gte = function(f6) {
      return this.cmp(f6) >= 0;
    }, o6.prototype.ltn = function(f6) {
      return this.cmpn(f6) === -1;
    }, o6.prototype.lt = function(f6) {
      return this.cmp(f6) === -1;
    }, o6.prototype.lten = function(f6) {
      return this.cmpn(f6) <= 0;
    }, o6.prototype.lte = function(f6) {
      return this.cmp(f6) <= 0;
    }, o6.prototype.eqn = function(f6) {
      return this.cmpn(f6) === 0;
    }, o6.prototype.eq = function(f6) {
      return this.cmp(f6) === 0;
    }, o6.red = function(f6) {
      return new Y2(f6);
    }, o6.prototype.toRed = function(f6) {
      return i6(!this.red, "Already a number in reduction context"), i6(this.negative === 0, "red works only with positives"), f6.convertTo(this)._forceRed(f6);
    }, o6.prototype.fromRed = function() {
      return i6(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, o6.prototype._forceRed = function(f6) {
      return this.red = f6, this;
    }, o6.prototype.forceRed = function(f6) {
      return i6(!this.red, "Already a number in reduction context"), this._forceRed(f6);
    }, o6.prototype.redAdd = function(f6) {
      return i6(this.red, "redAdd works only with red numbers"), this.red.add(this, f6);
    }, o6.prototype.redIAdd = function(f6) {
      return i6(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, f6);
    }, o6.prototype.redSub = function(f6) {
      return i6(this.red, "redSub works only with red numbers"), this.red.sub(this, f6);
    }, o6.prototype.redISub = function(f6) {
      return i6(this.red, "redISub works only with red numbers"), this.red.isub(this, f6);
    }, o6.prototype.redShl = function(f6) {
      return i6(this.red, "redShl works only with red numbers"), this.red.shl(this, f6);
    }, o6.prototype.redMul = function(f6) {
      return i6(this.red, "redMul works only with red numbers"), this.red._verify2(this, f6), this.red.mul(this, f6);
    }, o6.prototype.redIMul = function(f6) {
      return i6(this.red, "redMul works only with red numbers"), this.red._verify2(this, f6), this.red.imul(this, f6);
    }, o6.prototype.redSqr = function() {
      return i6(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, o6.prototype.redISqr = function() {
      return i6(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, o6.prototype.redSqrt = function() {
      return i6(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, o6.prototype.redInvm = function() {
      return i6(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, o6.prototype.redNeg = function() {
      return i6(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, o6.prototype.redPow = function(f6) {
      return i6(this.red && !f6.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, f6);
    };
    var H3 = { k256: null, p224: null, p192: null, p25519: null };
    function z6(A5, f6) {
      this.name = A5, this.p = new o6(f6, 16), this.n = this.p.bitLength(), this.k = new o6(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    z6.prototype._tmp = function() {
      var f6 = new o6(null);
      return f6.words = new Array(Math.ceil(this.n / 13)), f6;
    }, z6.prototype.ireduce = function(f6) {
      var a6 = f6, c7;
      do
        this.split(a6, this.tmp), a6 = this.imulK(a6), a6 = a6.iadd(this.tmp), c7 = a6.bitLength();
      while (c7 > this.n);
      var d5 = c7 < this.n ? -1 : a6.ucmp(this.p);
      return d5 === 0 ? (a6.words[0] = 0, a6.length = 1) : d5 > 0 ? a6.isub(this.p) : a6.strip !== void 0 ? a6.strip() : a6._strip(), a6;
    }, z6.prototype.split = function(f6, a6) {
      f6.iushrn(this.n, 0, a6);
    }, z6.prototype.imulK = function(f6) {
      return f6.imul(this.k);
    };
    function Pt2() {
      z6.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    n6(Pt2, z6), Pt2.prototype.split = function(f6, a6) {
      for (var c7 = 4194303, d5 = Math.min(f6.length, 9), g5 = 0; g5 < d5; g5++) a6.words[g5] = f6.words[g5];
      if (a6.length = d5, f6.length <= 9) {
        f6.words[0] = 0, f6.length = 1;
        return;
      }
      var x5 = f6.words[9];
      for (a6.words[a6.length++] = x5 & c7, g5 = 10; g5 < f6.length; g5++) {
        var M4 = f6.words[g5] | 0;
        f6.words[g5 - 10] = (M4 & c7) << 4 | x5 >>> 22, x5 = M4;
      }
      x5 >>>= 22, f6.words[g5 - 10] = x5, x5 === 0 && f6.length > 10 ? f6.length -= 10 : f6.length -= 9;
    }, Pt2.prototype.imulK = function(f6) {
      f6.words[f6.length] = 0, f6.words[f6.length + 1] = 0, f6.length += 2;
      for (var a6 = 0, c7 = 0; c7 < f6.length; c7++) {
        var d5 = f6.words[c7] | 0;
        a6 += d5 * 977, f6.words[c7] = a6 & 67108863, a6 = d5 * 64 + (a6 / 67108864 | 0);
      }
      return f6.words[f6.length - 1] === 0 && (f6.length--, f6.words[f6.length - 1] === 0 && f6.length--), f6;
    };
    function W3() {
      z6.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    n6(W3, z6);
    function Rt2() {
      z6.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    n6(Rt2, z6);
    function Yt3() {
      z6.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    n6(Yt3, z6), Yt3.prototype.imulK = function(f6) {
      for (var a6 = 0, c7 = 0; c7 < f6.length; c7++) {
        var d5 = (f6.words[c7] | 0) * 19 + a6, g5 = d5 & 67108863;
        d5 >>>= 26, f6.words[c7] = g5, a6 = d5;
      }
      return a6 !== 0 && (f6.words[f6.length++] = a6), f6;
    }, o6._prime = function(f6) {
      if (H3[f6]) return H3[f6];
      var a6;
      if (f6 === "k256") a6 = new Pt2();
      else if (f6 === "p224") a6 = new W3();
      else if (f6 === "p192") a6 = new Rt2();
      else if (f6 === "p25519") a6 = new Yt3();
      else throw new Error("Unknown prime " + f6);
      return H3[f6] = a6, a6;
    };
    function Y2(A5) {
      if (typeof A5 == "string") {
        var f6 = o6._prime(A5);
        this.m = f6.p, this.prime = f6;
      } else i6(A5.gtn(1), "modulus must be greater than 1"), this.m = A5, this.prime = null;
    }
    Y2.prototype._verify1 = function(f6) {
      i6(f6.negative === 0, "red works only with positives"), i6(f6.red, "red works only with red numbers");
    }, Y2.prototype._verify2 = function(f6, a6) {
      i6((f6.negative | a6.negative) === 0, "red works only with positives"), i6(f6.red && f6.red === a6.red, "red works only with red numbers");
    }, Y2.prototype.imod = function(f6) {
      return this.prime ? this.prime.ireduce(f6)._forceRed(this) : (w7(f6, f6.umod(this.m)._forceRed(this)), f6);
    }, Y2.prototype.neg = function(f6) {
      return f6.isZero() ? f6.clone() : this.m.sub(f6)._forceRed(this);
    }, Y2.prototype.add = function(f6, a6) {
      this._verify2(f6, a6);
      var c7 = f6.add(a6);
      return c7.cmp(this.m) >= 0 && c7.isub(this.m), c7._forceRed(this);
    }, Y2.prototype.iadd = function(f6, a6) {
      this._verify2(f6, a6);
      var c7 = f6.iadd(a6);
      return c7.cmp(this.m) >= 0 && c7.isub(this.m), c7;
    }, Y2.prototype.sub = function(f6, a6) {
      this._verify2(f6, a6);
      var c7 = f6.sub(a6);
      return c7.cmpn(0) < 0 && c7.iadd(this.m), c7._forceRed(this);
    }, Y2.prototype.isub = function(f6, a6) {
      this._verify2(f6, a6);
      var c7 = f6.isub(a6);
      return c7.cmpn(0) < 0 && c7.iadd(this.m), c7;
    }, Y2.prototype.shl = function(f6, a6) {
      return this._verify1(f6), this.imod(f6.ushln(a6));
    }, Y2.prototype.imul = function(f6, a6) {
      return this._verify2(f6, a6), this.imod(f6.imul(a6));
    }, Y2.prototype.mul = function(f6, a6) {
      return this._verify2(f6, a6), this.imod(f6.mul(a6));
    }, Y2.prototype.isqr = function(f6) {
      return this.imul(f6, f6.clone());
    }, Y2.prototype.sqr = function(f6) {
      return this.mul(f6, f6);
    }, Y2.prototype.sqrt = function(f6) {
      if (f6.isZero()) return f6.clone();
      var a6 = this.m.andln(3);
      if (i6(a6 % 2 === 1), a6 === 3) {
        var c7 = this.m.add(new o6(1)).iushrn(2);
        return this.pow(f6, c7);
      }
      for (var d5 = this.m.subn(1), g5 = 0; !d5.isZero() && d5.andln(1) === 0; ) g5++, d5.iushrn(1);
      i6(!d5.isZero());
      var x5 = new o6(1).toRed(this), M4 = x5.redNeg(), l6 = this.m.subn(1).iushrn(1), s5 = this.m.bitLength();
      for (s5 = new o6(2 * s5 * s5).toRed(this); this.pow(s5, l6).cmp(M4) !== 0; ) s5.redIAdd(M4);
      for (var v5 = this.pow(s5, d5), k5 = this.pow(f6, d5.addn(1).iushrn(1)), u5 = this.pow(f6, d5), E8 = g5; u5.cmp(x5) !== 0; ) {
        for (var _6 = u5, B4 = 0; _6.cmp(x5) !== 0; B4++) _6 = _6.redSqr();
        i6(B4 < E8);
        var R4 = this.pow(v5, new o6(1).iushln(E8 - B4 - 1));
        k5 = k5.redMul(R4), v5 = R4.redSqr(), u5 = u5.redMul(v5), E8 = B4;
      }
      return k5;
    }, Y2.prototype.invm = function(f6) {
      var a6 = f6._invmp(this.m);
      return a6.negative !== 0 ? (a6.negative = 0, this.imod(a6).redNeg()) : this.imod(a6);
    }, Y2.prototype.pow = function(f6, a6) {
      if (a6.isZero()) return new o6(1).toRed(this);
      if (a6.cmpn(1) === 0) return f6.clone();
      var c7 = 4, d5 = new Array(1 << c7);
      d5[0] = new o6(1).toRed(this), d5[1] = f6;
      for (var g5 = 2; g5 < d5.length; g5++) d5[g5] = this.mul(d5[g5 - 1], f6);
      var x5 = d5[0], M4 = 0, l6 = 0, s5 = a6.bitLength() % 26;
      for (s5 === 0 && (s5 = 26), g5 = a6.length - 1; g5 >= 0; g5--) {
        for (var v5 = a6.words[g5], k5 = s5 - 1; k5 >= 0; k5--) {
          var u5 = v5 >> k5 & 1;
          if (x5 !== d5[0] && (x5 = this.sqr(x5)), u5 === 0 && M4 === 0) {
            l6 = 0;
            continue;
          }
          M4 <<= 1, M4 |= u5, l6++, !(l6 !== c7 && (g5 !== 0 || k5 !== 0)) && (x5 = this.mul(x5, d5[M4]), l6 = 0, M4 = 0);
        }
        s5 = 26;
      }
      return x5;
    }, Y2.prototype.convertTo = function(f6) {
      var a6 = f6.umod(this.m);
      return a6 === f6 ? a6.clone() : a6;
    }, Y2.prototype.convertFrom = function(f6) {
      var a6 = f6.clone();
      return a6.red = null, a6;
    }, o6.mont = function(f6) {
      return new Vt3(f6);
    };
    function Vt3(A5) {
      Y2.call(this, A5), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o6(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    n6(Vt3, Y2), Vt3.prototype.convertTo = function(f6) {
      return this.imod(f6.ushln(this.shift));
    }, Vt3.prototype.convertFrom = function(f6) {
      var a6 = this.imod(f6.mul(this.rinv));
      return a6.red = null, a6;
    }, Vt3.prototype.imul = function(f6, a6) {
      if (f6.isZero() || a6.isZero()) return f6.words[0] = 0, f6.length = 1, f6;
      var c7 = f6.imul(a6), d5 = c7.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), g5 = c7.isub(d5).iushrn(this.shift), x5 = g5;
      return g5.cmp(this.m) >= 0 ? x5 = g5.isub(this.m) : g5.cmpn(0) < 0 && (x5 = g5.iadd(this.m)), x5._forceRed(this);
    }, Vt3.prototype.mul = function(f6, a6) {
      if (f6.isZero() || a6.isZero()) return new o6(0)._forceRed(this);
      var c7 = f6.mul(a6), d5 = c7.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), g5 = c7.isub(d5).iushrn(this.shift), x5 = g5;
      return g5.cmp(this.m) >= 0 ? x5 = g5.isub(this.m) : g5.cmpn(0) < 0 && (x5 = g5.iadd(this.m)), x5._forceRed(this);
    }, Vt3.prototype.invm = function(f6) {
      var a6 = this.imod(f6._invmp(this.m).mul(this.r2));
      return a6._forceRed(this);
    };
  })(e4, On);
})(Ln);
var K3 = Ln.exports;
var jn = "bignumber/5.7.0";
var Rr = K3.BN;
var Ae = new L4(jn);
var wi = {};
var Qn = 9007199254740991;
function C0(e4) {
  return e4 != null && (V2.isBigNumber(e4) || typeof e4 == "number" && e4 % 1 === 0 || typeof e4 == "string" && !!e4.match(/^-?[0-9]+$/) || Qt(e4) || typeof e4 == "bigint" || ir(e4));
}
var Jn = false;
var V2 = class _V {
  constructor(t3, r5) {
    t3 !== wi && Ae.throwError("cannot call constructor directly; use BigNumber.from", L4.errors.UNSUPPORTED_OPERATION, { operation: "new (BigNumber)" }), this._hex = r5, this._isBigNumber = true, Object.freeze(this);
  }
  fromTwos(t3) {
    return Lt(j4(this).fromTwos(t3));
  }
  toTwos(t3) {
    return Lt(j4(this).toTwos(t3));
  }
  abs() {
    return this._hex[0] === "-" ? _V.from(this._hex.substring(1)) : this;
  }
  add(t3) {
    return Lt(j4(this).add(j4(t3)));
  }
  sub(t3) {
    return Lt(j4(this).sub(j4(t3)));
  }
  div(t3) {
    return _V.from(t3).isZero() && Wt("division-by-zero", "div"), Lt(j4(this).div(j4(t3)));
  }
  mul(t3) {
    return Lt(j4(this).mul(j4(t3)));
  }
  mod(t3) {
    const r5 = j4(t3);
    return r5.isNeg() && Wt("division-by-zero", "mod"), Lt(j4(this).umod(r5));
  }
  pow(t3) {
    const r5 = j4(t3);
    return r5.isNeg() && Wt("negative-power", "pow"), Lt(j4(this).pow(r5));
  }
  and(t3) {
    const r5 = j4(t3);
    return (this.isNegative() || r5.isNeg()) && Wt("unbound-bitwise-result", "and"), Lt(j4(this).and(r5));
  }
  or(t3) {
    const r5 = j4(t3);
    return (this.isNegative() || r5.isNeg()) && Wt("unbound-bitwise-result", "or"), Lt(j4(this).or(r5));
  }
  xor(t3) {
    const r5 = j4(t3);
    return (this.isNegative() || r5.isNeg()) && Wt("unbound-bitwise-result", "xor"), Lt(j4(this).xor(r5));
  }
  mask(t3) {
    return (this.isNegative() || t3 < 0) && Wt("negative-width", "mask"), Lt(j4(this).maskn(t3));
  }
  shl(t3) {
    return (this.isNegative() || t3 < 0) && Wt("negative-width", "shl"), Lt(j4(this).shln(t3));
  }
  shr(t3) {
    return (this.isNegative() || t3 < 0) && Wt("negative-width", "shr"), Lt(j4(this).shrn(t3));
  }
  eq(t3) {
    return j4(this).eq(j4(t3));
  }
  lt(t3) {
    return j4(this).lt(j4(t3));
  }
  lte(t3) {
    return j4(this).lte(j4(t3));
  }
  gt(t3) {
    return j4(this).gt(j4(t3));
  }
  gte(t3) {
    return j4(this).gte(j4(t3));
  }
  isNegative() {
    return this._hex[0] === "-";
  }
  isZero() {
    return j4(this).isZero();
  }
  toNumber() {
    try {
      return j4(this).toNumber();
    } catch {
      Wt("overflow", "toNumber", this.toString());
    }
    return null;
  }
  toBigInt() {
    try {
      return BigInt(this.toString());
    } catch {
    }
    return Ae.throwError("this platform does not support BigInt", L4.errors.UNSUPPORTED_OPERATION, { value: this.toString() });
  }
  toString() {
    return arguments.length > 0 && (arguments[0] === 10 ? Jn || (Jn = true, Ae.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : arguments[0] === 16 ? Ae.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", L4.errors.UNEXPECTED_ARGUMENT, {}) : Ae.throwError("BigNumber.toString does not accept parameters", L4.errors.UNEXPECTED_ARGUMENT, {})), j4(this).toString(10);
  }
  toHexString() {
    return this._hex;
  }
  toJSON(t3) {
    return { type: "BigNumber", hex: this.toHexString() };
  }
  static from(t3) {
    if (t3 instanceof _V) return t3;
    if (typeof t3 == "string") return t3.match(/^-?0x[0-9a-f]+$/i) ? new _V(wi, vr(t3)) : t3.match(/^-?[0-9]+$/) ? new _V(wi, vr(new Rr(t3))) : Ae.throwArgumentError("invalid BigNumber string", "value", t3);
    if (typeof t3 == "number") return t3 % 1 && Wt("underflow", "BigNumber.from", t3), (t3 >= Qn || t3 <= -Qn) && Wt("overflow", "BigNumber.from", t3), _V.from(String(t3));
    const r5 = t3;
    if (typeof r5 == "bigint") return _V.from(r5.toString());
    if (ir(r5)) return _V.from(Kt(r5));
    if (r5) if (r5.toHexString) {
      const i6 = r5.toHexString();
      if (typeof i6 == "string") return _V.from(i6);
    } else {
      let i6 = r5._hex;
      if (i6 == null && r5.type === "BigNumber" && (i6 = r5.hex), typeof i6 == "string" && (Qt(i6) || i6[0] === "-" && Qt(i6.substring(1)))) return _V.from(i6);
    }
    return Ae.throwArgumentError("invalid BigNumber value", "value", t3);
  }
  static isBigNumber(t3) {
    return !!(t3 && t3._isBigNumber);
  }
};
function vr(e4) {
  if (typeof e4 != "string") return vr(e4.toString(16));
  if (e4[0] === "-") return e4 = e4.substring(1), e4[0] === "-" && Ae.throwArgumentError("invalid hex", "value", e4), e4 = vr(e4), e4 === "0x00" ? e4 : "-" + e4;
  if (e4.substring(0, 2) !== "0x" && (e4 = "0x" + e4), e4 === "0x") return "0x00";
  for (e4.length % 2 && (e4 = "0x0" + e4.substring(2)); e4.length > 4 && e4.substring(0, 4) === "0x00"; ) e4 = "0x" + e4.substring(4);
  return e4;
}
function Lt(e4) {
  return V2.from(vr(e4));
}
function j4(e4) {
  const t3 = V2.from(e4).toHexString();
  return t3[0] === "-" ? new Rr("-" + t3.substring(3), 16) : new Rr(t3.substring(2), 16);
}
function Wt(e4, t3, r5) {
  const i6 = { fault: e4, operation: t3 };
  return r5 != null && (i6.value = r5), Ae.throwError(e4, L4.errors.NUMERIC_FAULT, i6);
}
function R0(e4) {
  return new Rr(e4, 36).toString(16);
}
var Ht = new L4(jn);
var mr = {};
var Gn = V2.from(0);
var Yn = V2.from(-1);
function Vn(e4, t3, r5, i6) {
  const n6 = { fault: t3, operation: r5 };
  return i6 !== void 0 && (n6.value = i6), Ht.throwError(e4, L4.errors.NUMERIC_FAULT, n6);
}
var gr = "0";
for (; gr.length < 256; ) gr += gr;
function xi(e4) {
  if (typeof e4 != "number") try {
    e4 = V2.from(e4).toNumber();
  } catch {
  }
  return typeof e4 == "number" && e4 >= 0 && e4 <= 256 && !(e4 % 1) ? "1" + gr.substring(0, e4) : Ht.throwArgumentError("invalid decimal size", "decimals", e4);
}
function Mi(e4, t3) {
  t3 == null && (t3 = 0);
  const r5 = xi(t3);
  e4 = V2.from(e4);
  const i6 = e4.lt(Gn);
  i6 && (e4 = e4.mul(Yn));
  let n6 = e4.mod(r5).toString();
  for (; n6.length < r5.length - 1; ) n6 = "0" + n6;
  n6 = n6.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  const o6 = e4.div(r5).toString();
  return r5.length === 1 ? e4 = o6 : e4 = o6 + "." + n6, i6 && (e4 = "-" + e4), e4;
}
function be(e4, t3) {
  t3 == null && (t3 = 0);
  const r5 = xi(t3);
  (typeof e4 != "string" || !e4.match(/^-?[0-9.]+$/)) && Ht.throwArgumentError("invalid decimal value", "value", e4);
  const i6 = e4.substring(0, 1) === "-";
  i6 && (e4 = e4.substring(1)), e4 === "." && Ht.throwArgumentError("missing value", "value", e4);
  const n6 = e4.split(".");
  n6.length > 2 && Ht.throwArgumentError("too many decimal points", "value", e4);
  let o6 = n6[0], h7 = n6[1];
  for (o6 || (o6 = "0"), h7 || (h7 = "0"); h7[h7.length - 1] === "0"; ) h7 = h7.substring(0, h7.length - 1);
  for (h7.length > r5.length - 1 && Vn("fractional component exceeds decimals", "underflow", "parseFixed"), h7 === "" && (h7 = "0"); h7.length < r5.length - 1; ) h7 += "0";
  const p5 = V2.from(o6), b5 = V2.from(h7);
  let m5 = p5.mul(r5).add(b5);
  return i6 && (m5 = m5.mul(Yn)), m5;
}
var dr = class _dr {
  constructor(t3, r5, i6, n6) {
    t3 !== mr && Ht.throwError("cannot use FixedFormat constructor; use FixedFormat.from", L4.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.signed = r5, this.width = i6, this.decimals = n6, this.name = (r5 ? "" : "u") + "fixed" + String(i6) + "x" + String(n6), this._multiplier = xi(n6), Object.freeze(this);
  }
  static from(t3) {
    if (t3 instanceof _dr) return t3;
    typeof t3 == "number" && (t3 = `fixed128x${t3}`);
    let r5 = true, i6 = 128, n6 = 18;
    if (typeof t3 == "string") {
      if (t3 !== "fixed") if (t3 === "ufixed") r5 = false;
      else {
        const o6 = t3.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
        o6 || Ht.throwArgumentError("invalid fixed format", "format", t3), r5 = o6[1] !== "u", i6 = parseInt(o6[2]), n6 = parseInt(o6[3]);
      }
    } else if (t3) {
      const o6 = (h7, p5, b5) => t3[h7] == null ? b5 : (typeof t3[h7] !== p5 && Ht.throwArgumentError("invalid fixed format (" + h7 + " not " + p5 + ")", "format." + h7, t3[h7]), t3[h7]);
      r5 = o6("signed", "boolean", r5), i6 = o6("width", "number", i6), n6 = o6("decimals", "number", n6);
    }
    return i6 % 8 && Ht.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", i6), n6 > 80 && Ht.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", n6), new _dr(mr, r5, i6, n6);
  }
};
var Ut = class _Ut {
  constructor(t3, r5, i6, n6) {
    t3 !== mr && Ht.throwError("cannot use FixedNumber constructor; use FixedNumber.from", L4.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.format = n6, this._hex = r5, this._value = i6, this._isFixedNumber = true, Object.freeze(this);
  }
  _checkFormat(t3) {
    this.format.name !== t3.format.name && Ht.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", t3);
  }
  addUnsafe(t3) {
    this._checkFormat(t3);
    const r5 = be(this._value, this.format.decimals), i6 = be(t3._value, t3.format.decimals);
    return _Ut.fromValue(r5.add(i6), this.format.decimals, this.format);
  }
  subUnsafe(t3) {
    this._checkFormat(t3);
    const r5 = be(this._value, this.format.decimals), i6 = be(t3._value, t3.format.decimals);
    return _Ut.fromValue(r5.sub(i6), this.format.decimals, this.format);
  }
  mulUnsafe(t3) {
    this._checkFormat(t3);
    const r5 = be(this._value, this.format.decimals), i6 = be(t3._value, t3.format.decimals);
    return _Ut.fromValue(r5.mul(i6).div(this.format._multiplier), this.format.decimals, this.format);
  }
  divUnsafe(t3) {
    this._checkFormat(t3);
    const r5 = be(this._value, this.format.decimals), i6 = be(t3._value, t3.format.decimals);
    return _Ut.fromValue(r5.mul(this.format._multiplier).div(i6), this.format.decimals, this.format);
  }
  floor() {
    const t3 = this.toString().split(".");
    t3.length === 1 && t3.push("0");
    let r5 = _Ut.from(t3[0], this.format);
    const i6 = !t3[1].match(/^(0*)$/);
    return this.isNegative() && i6 && (r5 = r5.subUnsafe(Wn.toFormat(r5.format))), r5;
  }
  ceiling() {
    const t3 = this.toString().split(".");
    t3.length === 1 && t3.push("0");
    let r5 = _Ut.from(t3[0], this.format);
    const i6 = !t3[1].match(/^(0*)$/);
    return !this.isNegative() && i6 && (r5 = r5.addUnsafe(Wn.toFormat(r5.format))), r5;
  }
  round(t3) {
    t3 == null && (t3 = 0);
    const r5 = this.toString().split(".");
    if (r5.length === 1 && r5.push("0"), (t3 < 0 || t3 > 80 || t3 % 1) && Ht.throwArgumentError("invalid decimal count", "decimals", t3), r5[1].length <= t3) return this;
    const i6 = _Ut.from("1" + gr.substring(0, t3), this.format), n6 = O0.toFormat(this.format);
    return this.mulUnsafe(i6).addUnsafe(n6).floor().divUnsafe(i6);
  }
  isZero() {
    return this._value === "0.0" || this._value === "0";
  }
  isNegative() {
    return this._value[0] === "-";
  }
  toString() {
    return this._value;
  }
  toHexString(t3) {
    if (t3 == null) return this._hex;
    t3 % 8 && Ht.throwArgumentError("invalid byte width", "width", t3);
    const r5 = V2.from(this._hex).fromTwos(this.format.width).toTwos(t3).toHexString();
    return oe(r5, t3 / 8);
  }
  toUnsafeFloat() {
    return parseFloat(this.toString());
  }
  toFormat(t3) {
    return _Ut.fromString(this._value, t3);
  }
  static fromValue(t3, r5, i6) {
    return i6 == null && r5 != null && !C0(r5) && (i6 = r5, r5 = null), r5 == null && (r5 = 0), i6 == null && (i6 = "fixed"), _Ut.fromString(Mi(t3, r5), dr.from(i6));
  }
  static fromString(t3, r5) {
    r5 == null && (r5 = "fixed");
    const i6 = dr.from(r5), n6 = be(t3, i6.decimals);
    !i6.signed && n6.lt(Gn) && Vn("unsigned value cannot be negative", "overflow", "value", t3);
    let o6 = null;
    i6.signed ? o6 = n6.toTwos(i6.width).toHexString() : (o6 = n6.toHexString(), o6 = oe(o6, i6.width / 8));
    const h7 = Mi(n6, i6.decimals);
    return new _Ut(mr, o6, h7, i6);
  }
  static fromBytes(t3, r5) {
    r5 == null && (r5 = "fixed");
    const i6 = dr.from(r5);
    if (Ot(t3).length > i6.width / 8) throw new Error("overflow");
    let n6 = V2.from(t3);
    i6.signed && (n6 = n6.fromTwos(i6.width));
    const o6 = n6.toTwos((i6.signed ? 0 : 1) + i6.width).toHexString(), h7 = Mi(n6, i6.decimals);
    return new _Ut(mr, o6, h7, i6);
  }
  static from(t3, r5) {
    if (typeof t3 == "string") return _Ut.fromString(t3, r5);
    if (ir(t3)) return _Ut.fromBytes(t3, r5);
    try {
      return _Ut.fromValue(t3, 0, r5);
    } catch (i6) {
      if (i6.code !== L4.errors.INVALID_ARGUMENT) throw i6;
    }
    return Ht.throwArgumentError("invalid FixedNumber value", "value", t3);
  }
  static isFixedNumber(t3) {
    return !!(t3 && t3._isFixedNumber);
  }
};
var Wn = Ut.from(1);
var O0 = Ut.from("0.5");
var P0 = "strings/5.7.0";
var Xn = new L4(P0);
var Or;
(function(e4) {
  e4.current = "", e4.NFC = "NFC", e4.NFD = "NFD", e4.NFKC = "NFKC", e4.NFKD = "NFKD";
})(Or || (Or = {}));
var nr;
(function(e4) {
  e4.UNEXPECTED_CONTINUE = "unexpected continuation byte", e4.BAD_PREFIX = "bad codepoint prefix", e4.OVERRUN = "string overrun", e4.MISSING_CONTINUE = "missing continuation byte", e4.OUT_OF_RANGE = "out of UTF-8 range", e4.UTF16_SURROGATE = "UTF-16 surrogate", e4.OVERLONG = "overlong representation";
})(nr || (nr = {}));
function D0(e4, t3, r5, i6, n6) {
  return Xn.throwArgumentError(`invalid codepoint at offset ${t3}; ${e4}`, "bytes", r5);
}
function Zn(e4, t3, r5, i6, n6) {
  if (e4 === nr.BAD_PREFIX || e4 === nr.UNEXPECTED_CONTINUE) {
    let o6 = 0;
    for (let h7 = t3 + 1; h7 < r5.length && r5[h7] >> 6 === 2; h7++) o6++;
    return o6;
  }
  return e4 === nr.OVERRUN ? r5.length - t3 - 1 : 0;
}
function F0(e4, t3, r5, i6, n6) {
  return e4 === nr.OVERLONG ? (i6.push(n6), 0) : (i6.push(65533), Zn(e4, t3, r5));
}
Object.freeze({ error: D0, ignore: Zn, replace: F0 });
function Ei(e4, t3 = Or.current) {
  t3 != Or.current && (Xn.checkNormalize(), e4 = e4.normalize(t3));
  let r5 = [];
  for (let i6 = 0; i6 < e4.length; i6++) {
    const n6 = e4.charCodeAt(i6);
    if (n6 < 128) r5.push(n6);
    else if (n6 < 2048) r5.push(n6 >> 6 | 192), r5.push(n6 & 63 | 128);
    else if ((n6 & 64512) == 55296) {
      i6++;
      const o6 = e4.charCodeAt(i6);
      if (i6 >= e4.length || (o6 & 64512) !== 56320) throw new Error("invalid utf-8 string");
      const h7 = 65536 + ((n6 & 1023) << 10) + (o6 & 1023);
      r5.push(h7 >> 18 | 240), r5.push(h7 >> 12 & 63 | 128), r5.push(h7 >> 6 & 63 | 128), r5.push(h7 & 63 | 128);
    } else r5.push(n6 >> 12 | 224), r5.push(n6 >> 6 & 63 | 128), r5.push(n6 & 63 | 128);
  }
  return Ot(r5);
}
function T0(e4) {
  if (e4.length % 4 !== 0) throw new Error("bad data");
  let t3 = [];
  for (let r5 = 0; r5 < e4.length; r5 += 4) t3.push(parseInt(e4.substring(r5, r5 + 4), 16));
  return t3;
}
function Si(e4, t3) {
  t3 || (t3 = function(n6) {
    return [parseInt(n6, 16)];
  });
  let r5 = 0, i6 = {};
  return e4.split(",").forEach((n6) => {
    let o6 = n6.split(":");
    r5 += parseInt(o6[0], 16), i6[r5] = t3(o6[1]);
  }), i6;
}
function $n(e4) {
  let t3 = 0;
  return e4.split(",").map((r5) => {
    let i6 = r5.split("-");
    i6.length === 1 ? i6[1] = "0" : i6[1] === "" && (i6[1] = "1");
    let n6 = t3 + parseInt(i6[0], 16);
    return t3 = parseInt(i6[1], 16), { l: n6, h: t3 };
  });
}
$n("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"), "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((e4) => parseInt(e4, 16)), Si("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"), Si("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"), Si("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", T0), $n("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
var tf = "hash/5.7.0";
function U0(e4) {
  e4 = atob(e4);
  const t3 = [];
  for (let r5 = 0; r5 < e4.length; r5++) t3.push(e4.charCodeAt(r5));
  return Ot(t3);
}
function ef(e4, t3) {
  t3 == null && (t3 = 1);
  const r5 = [], i6 = r5.forEach, n6 = function(o6, h7) {
    i6.call(o6, function(p5) {
      h7 > 0 && Array.isArray(p5) ? n6(p5, h7 - 1) : r5.push(p5);
    });
  };
  return n6(e4, t3), r5;
}
function k0(e4) {
  const t3 = {};
  for (let r5 = 0; r5 < e4.length; r5++) {
    const i6 = e4[r5];
    t3[i6[0]] = i6[1];
  }
  return t3;
}
function q0(e4) {
  let t3 = 0;
  function r5() {
    return e4[t3++] << 8 | e4[t3++];
  }
  let i6 = r5(), n6 = 1, o6 = [0, 1];
  for (let H3 = 1; H3 < i6; H3++) o6.push(n6 += r5());
  let h7 = r5(), p5 = t3;
  t3 += h7;
  let b5 = 0, m5 = 0;
  function w7() {
    return b5 == 0 && (m5 = m5 << 8 | e4[t3++], b5 = 8), m5 >> --b5 & 1;
  }
  const y8 = 31, S5 = Math.pow(2, y8), I5 = S5 >>> 1, N10 = I5 >> 1, C6 = S5 - 1;
  let F3 = 0;
  for (let H3 = 0; H3 < y8; H3++) F3 = F3 << 1 | w7();
  let U4 = [], J3 = 0, Bt3 = S5;
  for (; ; ) {
    let H3 = Math.floor(((F3 - J3 + 1) * n6 - 1) / Bt3), z6 = 0, Pt2 = i6;
    for (; Pt2 - z6 > 1; ) {
      let Yt3 = z6 + Pt2 >>> 1;
      H3 < o6[Yt3] ? Pt2 = Yt3 : z6 = Yt3;
    }
    if (z6 == 0) break;
    U4.push(z6);
    let W3 = J3 + Math.floor(Bt3 * o6[z6] / n6), Rt2 = J3 + Math.floor(Bt3 * o6[z6 + 1] / n6) - 1;
    for (; !((W3 ^ Rt2) & I5); ) F3 = F3 << 1 & C6 | w7(), W3 = W3 << 1 & C6, Rt2 = Rt2 << 1 & C6 | 1;
    for (; W3 & ~Rt2 & N10; ) F3 = F3 & I5 | F3 << 1 & C6 >>> 1 | w7(), W3 = W3 << 1 ^ I5, Rt2 = (Rt2 ^ I5) << 1 | I5 | 1;
    J3 = W3, Bt3 = 1 + Rt2 - W3;
  }
  let G2 = i6 - 4;
  return U4.map((H3) => {
    switch (H3 - G2) {
      case 3:
        return G2 + 65792 + (e4[p5++] << 16 | e4[p5++] << 8 | e4[p5++]);
      case 2:
        return G2 + 256 + (e4[p5++] << 8 | e4[p5++]);
      case 1:
        return G2 + e4[p5++];
      default:
        return H3 - 1;
    }
  });
}
function K0(e4) {
  let t3 = 0;
  return () => e4[t3++];
}
function H0(e4) {
  return K0(q0(e4));
}
function z0(e4) {
  return e4 & 1 ? ~e4 >> 1 : e4 >> 1;
}
function L0(e4, t3) {
  let r5 = Array(e4);
  for (let i6 = 0; i6 < e4; i6++) r5[i6] = 1 + t3();
  return r5;
}
function rf(e4, t3) {
  let r5 = Array(e4);
  for (let i6 = 0, n6 = -1; i6 < e4; i6++) r5[i6] = n6 += 1 + t3();
  return r5;
}
function j0(e4, t3) {
  let r5 = Array(e4);
  for (let i6 = 0, n6 = 0; i6 < e4; i6++) r5[i6] = n6 += z0(t3());
  return r5;
}
function Pr(e4, t3) {
  let r5 = rf(e4(), e4), i6 = e4(), n6 = rf(i6, e4), o6 = L0(i6, e4);
  for (let h7 = 0; h7 < i6; h7++) for (let p5 = 0; p5 < o6[h7]; p5++) r5.push(n6[h7] + p5);
  return t3 ? r5.map((h7) => t3[h7]) : r5;
}
function Q0(e4) {
  let t3 = [];
  for (; ; ) {
    let r5 = e4();
    if (r5 == 0) break;
    t3.push(G0(r5, e4));
  }
  for (; ; ) {
    let r5 = e4() - 1;
    if (r5 < 0) break;
    t3.push(Y0(r5, e4));
  }
  return k0(ef(t3));
}
function J0(e4) {
  let t3 = [];
  for (; ; ) {
    let r5 = e4();
    if (r5 == 0) break;
    t3.push(r5);
  }
  return t3;
}
function nf(e4, t3, r5) {
  let i6 = Array(e4).fill(void 0).map(() => []);
  for (let n6 = 0; n6 < t3; n6++) j0(e4, r5).forEach((o6, h7) => i6[h7].push(o6));
  return i6;
}
function G0(e4, t3) {
  let r5 = 1 + t3(), i6 = t3(), n6 = J0(t3), o6 = nf(n6.length, 1 + e4, t3);
  return ef(o6.map((h7, p5) => {
    const b5 = h7[0], m5 = h7.slice(1);
    return Array(n6[p5]).fill(void 0).map((w7, y8) => {
      let S5 = y8 * i6;
      return [b5 + y8 * r5, m5.map((I5) => I5 + S5)];
    });
  }));
}
function Y0(e4, t3) {
  let r5 = 1 + t3();
  return nf(r5, 1 + e4, t3).map((n6) => [n6[0], n6.slice(1)]);
}
function V0(e4) {
  let t3 = Pr(e4).sort((i6, n6) => i6 - n6);
  return r5();
  function r5() {
    let i6 = [];
    for (; ; ) {
      let m5 = Pr(e4, t3);
      if (m5.length == 0) break;
      i6.push({ set: new Set(m5), node: r5() });
    }
    i6.sort((m5, w7) => w7.set.size - m5.set.size);
    let n6 = e4(), o6 = n6 % 3;
    n6 = n6 / 3 | 0;
    let h7 = !!(n6 & 1);
    n6 >>= 1;
    let p5 = n6 == 1, b5 = n6 == 2;
    return { branches: i6, valid: o6, fe0f: h7, save: p5, check: b5 };
  }
}
function W0() {
  return H0(U0(""));
}
var Dr = W0();
new Set(Pr(Dr)), new Set(Pr(Dr)), Q0(Dr), V0(Dr), new L4(tf);
var X0 = new Uint8Array(32);
X0.fill(0);
var Z0 = `Ethereum Signed Message:
`;
function ff(e4) {
  return typeof e4 == "string" && (e4 = Ei(e4)), yi(E0([Ei(Z0), Ei(String(e4.length)), e4]));
}
var $0 = "rlp/5.7.0";
new L4($0);
var ts = "address/5.7.0";
var Ar = new L4(ts);
function of(e4) {
  Qt(e4, 20) || Ar.throwArgumentError("invalid address", "address", e4), e4 = e4.toLowerCase();
  const t3 = e4.substring(2).split(""), r5 = new Uint8Array(40);
  for (let n6 = 0; n6 < 40; n6++) r5[n6] = t3[n6].charCodeAt(0);
  const i6 = Ot(yi(r5));
  for (let n6 = 0; n6 < 40; n6 += 2) i6[n6 >> 1] >> 4 >= 8 && (t3[n6] = t3[n6].toUpperCase()), (i6[n6 >> 1] & 15) >= 8 && (t3[n6 + 1] = t3[n6 + 1].toUpperCase());
  return "0x" + t3.join("");
}
var es = 9007199254740991;
function rs(e4) {
  return Math.log10 ? Math.log10(e4) : Math.log(e4) / Math.LN10;
}
var Ni = {};
for (let e4 = 0; e4 < 10; e4++) Ni[String(e4)] = String(e4);
for (let e4 = 0; e4 < 26; e4++) Ni[String.fromCharCode(65 + e4)] = String(10 + e4);
var sf = Math.floor(rs(es));
function is(e4) {
  e4 = e4.toUpperCase(), e4 = e4.substring(4) + e4.substring(0, 2) + "00";
  let t3 = e4.split("").map((i6) => Ni[i6]).join("");
  for (; t3.length >= sf; ) {
    let i6 = t3.substring(0, sf);
    t3 = parseInt(i6, 10) % 97 + t3.substring(i6.length);
  }
  let r5 = String(98 - parseInt(t3, 10) % 97);
  for (; r5.length < 2; ) r5 = "0" + r5;
  return r5;
}
function ns(e4) {
  let t3 = null;
  if (typeof e4 != "string" && Ar.throwArgumentError("invalid address", "address", e4), e4.match(/^(0x)?[0-9a-fA-F]{40}$/)) e4.substring(0, 2) !== "0x" && (e4 = "0x" + e4), t3 = of(e4), e4.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t3 !== e4 && Ar.throwArgumentError("bad address checksum", "address", e4);
  else if (e4.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    for (e4.substring(2, 4) !== is(e4) && Ar.throwArgumentError("bad icap checksum", "address", e4), t3 = R0(e4.substring(4)); t3.length < 40; ) t3 = "0" + t3;
    t3 = of("0x" + t3);
  } else Ar.throwArgumentError("invalid address", "address", e4);
  return t3;
}
var fs = "properties/5.7.0";
new L4(fs);
function br(e4, t3, r5) {
  Object.defineProperty(e4, t3, { enumerable: true, value: r5, writable: false });
}
new L4(tf);
var os = new Uint8Array(32);
os.fill(0), V2.from(-1);
var ss = V2.from(0);
var as = V2.from(1);
V2.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), oe(as.toHexString(), 32), oe(ss.toHexString(), 32);
var se = {};
var Q2 = {};
var yr = af;
function af(e4, t3) {
  if (!e4) throw new Error(t3 || "Assertion failed");
}
af.equal = function(t3, r5, i6) {
  if (t3 != r5) throw new Error(i6 || "Assertion failed: " + t3 + " != " + r5);
};
var Ii = { exports: {} };
typeof Object.create == "function" ? Ii.exports = function(t3, r5) {
  r5 && (t3.super_ = r5, t3.prototype = Object.create(r5.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } }));
} : Ii.exports = function(t3, r5) {
  if (r5) {
    t3.super_ = r5;
    var i6 = function() {
    };
    i6.prototype = r5.prototype, t3.prototype = new i6(), t3.prototype.constructor = t3;
  }
};
var us = yr;
var hs = Ii.exports;
Q2.inherits = hs;
function cs(e4, t3) {
  return (e4.charCodeAt(t3) & 64512) !== 55296 || t3 < 0 || t3 + 1 >= e4.length ? false : (e4.charCodeAt(t3 + 1) & 64512) === 56320;
}
function ls(e4, t3) {
  if (Array.isArray(e4)) return e4.slice();
  if (!e4) return [];
  var r5 = [];
  if (typeof e4 == "string") if (t3) {
    if (t3 === "hex") for (e4 = e4.replace(/[^a-z0-9]+/ig, ""), e4.length % 2 !== 0 && (e4 = "0" + e4), n6 = 0; n6 < e4.length; n6 += 2) r5.push(parseInt(e4[n6] + e4[n6 + 1], 16));
  } else for (var i6 = 0, n6 = 0; n6 < e4.length; n6++) {
    var o6 = e4.charCodeAt(n6);
    o6 < 128 ? r5[i6++] = o6 : o6 < 2048 ? (r5[i6++] = o6 >> 6 | 192, r5[i6++] = o6 & 63 | 128) : cs(e4, n6) ? (o6 = 65536 + ((o6 & 1023) << 10) + (e4.charCodeAt(++n6) & 1023), r5[i6++] = o6 >> 18 | 240, r5[i6++] = o6 >> 12 & 63 | 128, r5[i6++] = o6 >> 6 & 63 | 128, r5[i6++] = o6 & 63 | 128) : (r5[i6++] = o6 >> 12 | 224, r5[i6++] = o6 >> 6 & 63 | 128, r5[i6++] = o6 & 63 | 128);
  }
  else for (n6 = 0; n6 < e4.length; n6++) r5[n6] = e4[n6] | 0;
  return r5;
}
Q2.toArray = ls;
function ds(e4) {
  for (var t3 = "", r5 = 0; r5 < e4.length; r5++) t3 += hf(e4[r5].toString(16));
  return t3;
}
Q2.toHex = ds;
function uf(e4) {
  var t3 = e4 >>> 24 | e4 >>> 8 & 65280 | e4 << 8 & 16711680 | (e4 & 255) << 24;
  return t3 >>> 0;
}
Q2.htonl = uf;
function ps(e4, t3) {
  for (var r5 = "", i6 = 0; i6 < e4.length; i6++) {
    var n6 = e4[i6];
    t3 === "little" && (n6 = uf(n6)), r5 += cf(n6.toString(16));
  }
  return r5;
}
Q2.toHex32 = ps;
function hf(e4) {
  return e4.length === 1 ? "0" + e4 : e4;
}
Q2.zero2 = hf;
function cf(e4) {
  return e4.length === 7 ? "0" + e4 : e4.length === 6 ? "00" + e4 : e4.length === 5 ? "000" + e4 : e4.length === 4 ? "0000" + e4 : e4.length === 3 ? "00000" + e4 : e4.length === 2 ? "000000" + e4 : e4.length === 1 ? "0000000" + e4 : e4;
}
Q2.zero8 = cf;
function vs(e4, t3, r5, i6) {
  var n6 = r5 - t3;
  us(n6 % 4 === 0);
  for (var o6 = new Array(n6 / 4), h7 = 0, p5 = t3; h7 < o6.length; h7++, p5 += 4) {
    var b5;
    i6 === "big" ? b5 = e4[p5] << 24 | e4[p5 + 1] << 16 | e4[p5 + 2] << 8 | e4[p5 + 3] : b5 = e4[p5 + 3] << 24 | e4[p5 + 2] << 16 | e4[p5 + 1] << 8 | e4[p5], o6[h7] = b5 >>> 0;
  }
  return o6;
}
Q2.join32 = vs;
function ms(e4, t3) {
  for (var r5 = new Array(e4.length * 4), i6 = 0, n6 = 0; i6 < e4.length; i6++, n6 += 4) {
    var o6 = e4[i6];
    t3 === "big" ? (r5[n6] = o6 >>> 24, r5[n6 + 1] = o6 >>> 16 & 255, r5[n6 + 2] = o6 >>> 8 & 255, r5[n6 + 3] = o6 & 255) : (r5[n6 + 3] = o6 >>> 24, r5[n6 + 2] = o6 >>> 16 & 255, r5[n6 + 1] = o6 >>> 8 & 255, r5[n6] = o6 & 255);
  }
  return r5;
}
Q2.split32 = ms;
function gs(e4, t3) {
  return e4 >>> t3 | e4 << 32 - t3;
}
Q2.rotr32 = gs;
function As(e4, t3) {
  return e4 << t3 | e4 >>> 32 - t3;
}
Q2.rotl32 = As;
function bs(e4, t3) {
  return e4 + t3 >>> 0;
}
Q2.sum32 = bs;
function ys(e4, t3, r5) {
  return e4 + t3 + r5 >>> 0;
}
Q2.sum32_3 = ys;
function ws(e4, t3, r5, i6) {
  return e4 + t3 + r5 + i6 >>> 0;
}
Q2.sum32_4 = ws;
function xs(e4, t3, r5, i6, n6) {
  return e4 + t3 + r5 + i6 + n6 >>> 0;
}
Q2.sum32_5 = xs;
function Ms(e4, t3, r5, i6) {
  var n6 = e4[t3], o6 = e4[t3 + 1], h7 = i6 + o6 >>> 0, p5 = (h7 < i6 ? 1 : 0) + r5 + n6;
  e4[t3] = p5 >>> 0, e4[t3 + 1] = h7;
}
Q2.sum64 = Ms;
function Es(e4, t3, r5, i6) {
  var n6 = t3 + i6 >>> 0, o6 = (n6 < t3 ? 1 : 0) + e4 + r5;
  return o6 >>> 0;
}
Q2.sum64_hi = Es;
function Ss(e4, t3, r5, i6) {
  var n6 = t3 + i6;
  return n6 >>> 0;
}
Q2.sum64_lo = Ss;
function Ns(e4, t3, r5, i6, n6, o6, h7, p5) {
  var b5 = 0, m5 = t3;
  m5 = m5 + i6 >>> 0, b5 += m5 < t3 ? 1 : 0, m5 = m5 + o6 >>> 0, b5 += m5 < o6 ? 1 : 0, m5 = m5 + p5 >>> 0, b5 += m5 < p5 ? 1 : 0;
  var w7 = e4 + r5 + n6 + h7 + b5;
  return w7 >>> 0;
}
Q2.sum64_4_hi = Ns;
function Is(e4, t3, r5, i6, n6, o6, h7, p5) {
  var b5 = t3 + i6 + o6 + p5;
  return b5 >>> 0;
}
Q2.sum64_4_lo = Is;
function _s(e4, t3, r5, i6, n6, o6, h7, p5, b5, m5) {
  var w7 = 0, y8 = t3;
  y8 = y8 + i6 >>> 0, w7 += y8 < t3 ? 1 : 0, y8 = y8 + o6 >>> 0, w7 += y8 < o6 ? 1 : 0, y8 = y8 + p5 >>> 0, w7 += y8 < p5 ? 1 : 0, y8 = y8 + m5 >>> 0, w7 += y8 < m5 ? 1 : 0;
  var S5 = e4 + r5 + n6 + h7 + b5 + w7;
  return S5 >>> 0;
}
Q2.sum64_5_hi = _s;
function Bs(e4, t3, r5, i6, n6, o6, h7, p5, b5, m5) {
  var w7 = t3 + i6 + o6 + p5 + m5;
  return w7 >>> 0;
}
Q2.sum64_5_lo = Bs;
function Cs(e4, t3, r5) {
  var i6 = t3 << 32 - r5 | e4 >>> r5;
  return i6 >>> 0;
}
Q2.rotr64_hi = Cs;
function Rs(e4, t3, r5) {
  var i6 = e4 << 32 - r5 | t3 >>> r5;
  return i6 >>> 0;
}
Q2.rotr64_lo = Rs;
function Os(e4, t3, r5) {
  return e4 >>> r5;
}
Q2.shr64_hi = Os;
function Ps(e4, t3, r5) {
  var i6 = e4 << 32 - r5 | t3 >>> r5;
  return i6 >>> 0;
}
Q2.shr64_lo = Ps;
var fr = {};
var lf = Q2;
var Ds = yr;
function Fr() {
  this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
}
fr.BlockHash = Fr, Fr.prototype.update = function(t3, r5) {
  if (t3 = lf.toArray(t3, r5), this.pending ? this.pending = this.pending.concat(t3) : this.pending = t3, this.pendingTotal += t3.length, this.pending.length >= this._delta8) {
    t3 = this.pending;
    var i6 = t3.length % this._delta8;
    this.pending = t3.slice(t3.length - i6, t3.length), this.pending.length === 0 && (this.pending = null), t3 = lf.join32(t3, 0, t3.length - i6, this.endian);
    for (var n6 = 0; n6 < t3.length; n6 += this._delta32) this._update(t3, n6, n6 + this._delta32);
  }
  return this;
}, Fr.prototype.digest = function(t3) {
  return this.update(this._pad()), Ds(this.pending === null), this._digest(t3);
}, Fr.prototype._pad = function() {
  var t3 = this.pendingTotal, r5 = this._delta8, i6 = r5 - (t3 + this.padLength) % r5, n6 = new Array(i6 + this.padLength);
  n6[0] = 128;
  for (var o6 = 1; o6 < i6; o6++) n6[o6] = 0;
  if (t3 <<= 3, this.endian === "big") {
    for (var h7 = 8; h7 < this.padLength; h7++) n6[o6++] = 0;
    n6[o6++] = 0, n6[o6++] = 0, n6[o6++] = 0, n6[o6++] = 0, n6[o6++] = t3 >>> 24 & 255, n6[o6++] = t3 >>> 16 & 255, n6[o6++] = t3 >>> 8 & 255, n6[o6++] = t3 & 255;
  } else for (n6[o6++] = t3 & 255, n6[o6++] = t3 >>> 8 & 255, n6[o6++] = t3 >>> 16 & 255, n6[o6++] = t3 >>> 24 & 255, n6[o6++] = 0, n6[o6++] = 0, n6[o6++] = 0, n6[o6++] = 0, h7 = 8; h7 < this.padLength; h7++) n6[o6++] = 0;
  return n6;
};
var or2 = {};
var ae = {};
var Fs = Q2;
var ue = Fs.rotr32;
function Ts(e4, t3, r5, i6) {
  if (e4 === 0) return df(t3, r5, i6);
  if (e4 === 1 || e4 === 3) return vf(t3, r5, i6);
  if (e4 === 2) return pf(t3, r5, i6);
}
ae.ft_1 = Ts;
function df(e4, t3, r5) {
  return e4 & t3 ^ ~e4 & r5;
}
ae.ch32 = df;
function pf(e4, t3, r5) {
  return e4 & t3 ^ e4 & r5 ^ t3 & r5;
}
ae.maj32 = pf;
function vf(e4, t3, r5) {
  return e4 ^ t3 ^ r5;
}
ae.p32 = vf;
function Us(e4) {
  return ue(e4, 2) ^ ue(e4, 13) ^ ue(e4, 22);
}
ae.s0_256 = Us;
function ks(e4) {
  return ue(e4, 6) ^ ue(e4, 11) ^ ue(e4, 25);
}
ae.s1_256 = ks;
function qs(e4) {
  return ue(e4, 7) ^ ue(e4, 18) ^ e4 >>> 3;
}
ae.g0_256 = qs;
function Ks(e4) {
  return ue(e4, 17) ^ ue(e4, 19) ^ e4 >>> 10;
}
ae.g1_256 = Ks;
var sr = Q2;
var Hs = fr;
var zs = ae;
var _i = sr.rotl32;
var wr = sr.sum32;
var Ls = sr.sum32_5;
var js = zs.ft_1;
var mf = Hs.BlockHash;
var Qs = [1518500249, 1859775393, 2400959708, 3395469782];
function he() {
  if (!(this instanceof he)) return new he();
  mf.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
}
sr.inherits(he, mf);
var Js = he;
he.blockSize = 512, he.outSize = 160, he.hmacStrength = 80, he.padLength = 64, he.prototype._update = function(t3, r5) {
  for (var i6 = this.W, n6 = 0; n6 < 16; n6++) i6[n6] = t3[r5 + n6];
  for (; n6 < i6.length; n6++) i6[n6] = _i(i6[n6 - 3] ^ i6[n6 - 8] ^ i6[n6 - 14] ^ i6[n6 - 16], 1);
  var o6 = this.h[0], h7 = this.h[1], p5 = this.h[2], b5 = this.h[3], m5 = this.h[4];
  for (n6 = 0; n6 < i6.length; n6++) {
    var w7 = ~~(n6 / 20), y8 = Ls(_i(o6, 5), js(w7, h7, p5, b5), m5, i6[n6], Qs[w7]);
    m5 = b5, b5 = p5, p5 = _i(h7, 30), h7 = o6, o6 = y8;
  }
  this.h[0] = wr(this.h[0], o6), this.h[1] = wr(this.h[1], h7), this.h[2] = wr(this.h[2], p5), this.h[3] = wr(this.h[3], b5), this.h[4] = wr(this.h[4], m5);
}, he.prototype._digest = function(t3) {
  return t3 === "hex" ? sr.toHex32(this.h, "big") : sr.split32(this.h, "big");
};
var ar = Q2;
var Gs = fr;
var ur = ae;
var Ys = yr;
var ie = ar.sum32;
var Vs = ar.sum32_4;
var Ws = ar.sum32_5;
var Xs = ur.ch32;
var Zs = ur.maj32;
var $s = ur.s0_256;
var ta = ur.s1_256;
var ea = ur.g0_256;
var ra = ur.g1_256;
var gf = Gs.BlockHash;
var ia = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
function ce() {
  if (!(this instanceof ce)) return new ce();
  gf.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = ia, this.W = new Array(64);
}
ar.inherits(ce, gf);
var Af = ce;
ce.blockSize = 512, ce.outSize = 256, ce.hmacStrength = 192, ce.padLength = 64, ce.prototype._update = function(t3, r5) {
  for (var i6 = this.W, n6 = 0; n6 < 16; n6++) i6[n6] = t3[r5 + n6];
  for (; n6 < i6.length; n6++) i6[n6] = Vs(ra(i6[n6 - 2]), i6[n6 - 7], ea(i6[n6 - 15]), i6[n6 - 16]);
  var o6 = this.h[0], h7 = this.h[1], p5 = this.h[2], b5 = this.h[3], m5 = this.h[4], w7 = this.h[5], y8 = this.h[6], S5 = this.h[7];
  for (Ys(this.k.length === i6.length), n6 = 0; n6 < i6.length; n6++) {
    var I5 = Ws(S5, ta(m5), Xs(m5, w7, y8), this.k[n6], i6[n6]), N10 = ie($s(o6), Zs(o6, h7, p5));
    S5 = y8, y8 = w7, w7 = m5, m5 = ie(b5, I5), b5 = p5, p5 = h7, h7 = o6, o6 = ie(I5, N10);
  }
  this.h[0] = ie(this.h[0], o6), this.h[1] = ie(this.h[1], h7), this.h[2] = ie(this.h[2], p5), this.h[3] = ie(this.h[3], b5), this.h[4] = ie(this.h[4], m5), this.h[5] = ie(this.h[5], w7), this.h[6] = ie(this.h[6], y8), this.h[7] = ie(this.h[7], S5);
}, ce.prototype._digest = function(t3) {
  return t3 === "hex" ? ar.toHex32(this.h, "big") : ar.split32(this.h, "big");
};
var Bi = Q2;
var bf = Af;
function ye() {
  if (!(this instanceof ye)) return new ye();
  bf.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
}
Bi.inherits(ye, bf);
var na = ye;
ye.blockSize = 512, ye.outSize = 224, ye.hmacStrength = 192, ye.padLength = 64, ye.prototype._digest = function(t3) {
  return t3 === "hex" ? Bi.toHex32(this.h.slice(0, 7), "big") : Bi.split32(this.h.slice(0, 7), "big");
};
var jt = Q2;
var fa = fr;
var oa = yr;
var le = jt.rotr64_hi;
var de = jt.rotr64_lo;
var yf = jt.shr64_hi;
var wf = jt.shr64_lo;
var Be = jt.sum64;
var Ci = jt.sum64_hi;
var Ri = jt.sum64_lo;
var sa = jt.sum64_4_hi;
var aa = jt.sum64_4_lo;
var ua = jt.sum64_5_hi;
var ha = jt.sum64_5_lo;
var xf = fa.BlockHash;
var ca = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
function ne() {
  if (!(this instanceof ne)) return new ne();
  xf.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = ca, this.W = new Array(160);
}
jt.inherits(ne, xf);
var Mf = ne;
ne.blockSize = 1024, ne.outSize = 512, ne.hmacStrength = 192, ne.padLength = 128, ne.prototype._prepareBlock = function(t3, r5) {
  for (var i6 = this.W, n6 = 0; n6 < 32; n6++) i6[n6] = t3[r5 + n6];
  for (; n6 < i6.length; n6 += 2) {
    var o6 = xa(i6[n6 - 4], i6[n6 - 3]), h7 = Ma(i6[n6 - 4], i6[n6 - 3]), p5 = i6[n6 - 14], b5 = i6[n6 - 13], m5 = ya(i6[n6 - 30], i6[n6 - 29]), w7 = wa(i6[n6 - 30], i6[n6 - 29]), y8 = i6[n6 - 32], S5 = i6[n6 - 31];
    i6[n6] = sa(o6, h7, p5, b5, m5, w7, y8, S5), i6[n6 + 1] = aa(o6, h7, p5, b5, m5, w7, y8, S5);
  }
}, ne.prototype._update = function(t3, r5) {
  this._prepareBlock(t3, r5);
  var i6 = this.W, n6 = this.h[0], o6 = this.h[1], h7 = this.h[2], p5 = this.h[3], b5 = this.h[4], m5 = this.h[5], w7 = this.h[6], y8 = this.h[7], S5 = this.h[8], I5 = this.h[9], N10 = this.h[10], C6 = this.h[11], F3 = this.h[12], U4 = this.h[13], J3 = this.h[14], Bt3 = this.h[15];
  oa(this.k.length === i6.length);
  for (var G2 = 0; G2 < i6.length; G2 += 2) {
    var H3 = J3, z6 = Bt3, Pt2 = Aa(S5, I5), W3 = ba(S5, I5), Rt2 = la(S5, I5, N10, C6, F3), Yt3 = da(S5, I5, N10, C6, F3, U4), Y2 = this.k[G2], Vt3 = this.k[G2 + 1], A5 = i6[G2], f6 = i6[G2 + 1], a6 = ua(H3, z6, Pt2, W3, Rt2, Yt3, Y2, Vt3, A5, f6), c7 = ha(H3, z6, Pt2, W3, Rt2, Yt3, Y2, Vt3, A5, f6);
    H3 = ma(n6, o6), z6 = ga(n6, o6), Pt2 = pa(n6, o6, h7, p5, b5), W3 = va(n6, o6, h7, p5, b5, m5);
    var d5 = Ci(H3, z6, Pt2, W3), g5 = Ri(H3, z6, Pt2, W3);
    J3 = F3, Bt3 = U4, F3 = N10, U4 = C6, N10 = S5, C6 = I5, S5 = Ci(w7, y8, a6, c7), I5 = Ri(y8, y8, a6, c7), w7 = b5, y8 = m5, b5 = h7, m5 = p5, h7 = n6, p5 = o6, n6 = Ci(a6, c7, d5, g5), o6 = Ri(a6, c7, d5, g5);
  }
  Be(this.h, 0, n6, o6), Be(this.h, 2, h7, p5), Be(this.h, 4, b5, m5), Be(this.h, 6, w7, y8), Be(this.h, 8, S5, I5), Be(this.h, 10, N10, C6), Be(this.h, 12, F3, U4), Be(this.h, 14, J3, Bt3);
}, ne.prototype._digest = function(t3) {
  return t3 === "hex" ? jt.toHex32(this.h, "big") : jt.split32(this.h, "big");
};
function la(e4, t3, r5, i6, n6) {
  var o6 = e4 & r5 ^ ~e4 & n6;
  return o6 < 0 && (o6 += 4294967296), o6;
}
function da(e4, t3, r5, i6, n6, o6) {
  var h7 = t3 & i6 ^ ~t3 & o6;
  return h7 < 0 && (h7 += 4294967296), h7;
}
function pa(e4, t3, r5, i6, n6) {
  var o6 = e4 & r5 ^ e4 & n6 ^ r5 & n6;
  return o6 < 0 && (o6 += 4294967296), o6;
}
function va(e4, t3, r5, i6, n6, o6) {
  var h7 = t3 & i6 ^ t3 & o6 ^ i6 & o6;
  return h7 < 0 && (h7 += 4294967296), h7;
}
function ma(e4, t3) {
  var r5 = le(e4, t3, 28), i6 = le(t3, e4, 2), n6 = le(t3, e4, 7), o6 = r5 ^ i6 ^ n6;
  return o6 < 0 && (o6 += 4294967296), o6;
}
function ga(e4, t3) {
  var r5 = de(e4, t3, 28), i6 = de(t3, e4, 2), n6 = de(t3, e4, 7), o6 = r5 ^ i6 ^ n6;
  return o6 < 0 && (o6 += 4294967296), o6;
}
function Aa(e4, t3) {
  var r5 = le(e4, t3, 14), i6 = le(e4, t3, 18), n6 = le(t3, e4, 9), o6 = r5 ^ i6 ^ n6;
  return o6 < 0 && (o6 += 4294967296), o6;
}
function ba(e4, t3) {
  var r5 = de(e4, t3, 14), i6 = de(e4, t3, 18), n6 = de(t3, e4, 9), o6 = r5 ^ i6 ^ n6;
  return o6 < 0 && (o6 += 4294967296), o6;
}
function ya(e4, t3) {
  var r5 = le(e4, t3, 1), i6 = le(e4, t3, 8), n6 = yf(e4, t3, 7), o6 = r5 ^ i6 ^ n6;
  return o6 < 0 && (o6 += 4294967296), o6;
}
function wa(e4, t3) {
  var r5 = de(e4, t3, 1), i6 = de(e4, t3, 8), n6 = wf(e4, t3, 7), o6 = r5 ^ i6 ^ n6;
  return o6 < 0 && (o6 += 4294967296), o6;
}
function xa(e4, t3) {
  var r5 = le(e4, t3, 19), i6 = le(t3, e4, 29), n6 = yf(e4, t3, 6), o6 = r5 ^ i6 ^ n6;
  return o6 < 0 && (o6 += 4294967296), o6;
}
function Ma(e4, t3) {
  var r5 = de(e4, t3, 19), i6 = de(t3, e4, 29), n6 = wf(e4, t3, 6), o6 = r5 ^ i6 ^ n6;
  return o6 < 0 && (o6 += 4294967296), o6;
}
var Oi = Q2;
var Ef = Mf;
function we() {
  if (!(this instanceof we)) return new we();
  Ef.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
}
Oi.inherits(we, Ef);
var Ea = we;
we.blockSize = 1024, we.outSize = 384, we.hmacStrength = 192, we.padLength = 128, we.prototype._digest = function(t3) {
  return t3 === "hex" ? Oi.toHex32(this.h.slice(0, 12), "big") : Oi.split32(this.h.slice(0, 12), "big");
}, or2.sha1 = Js, or2.sha224 = na, or2.sha256 = Af, or2.sha384 = Ea, or2.sha512 = Mf;
var Sf = {};
var Xe = Q2;
var Sa = fr;
var Tr = Xe.rotl32;
var Nf = Xe.sum32;
var xr = Xe.sum32_3;
var If = Xe.sum32_4;
var _f = Sa.BlockHash;
function pe() {
  if (!(this instanceof pe)) return new pe();
  _f.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
}
Xe.inherits(pe, _f), Sf.ripemd160 = pe, pe.blockSize = 512, pe.outSize = 160, pe.hmacStrength = 192, pe.padLength = 64, pe.prototype._update = function(t3, r5) {
  for (var i6 = this.h[0], n6 = this.h[1], o6 = this.h[2], h7 = this.h[3], p5 = this.h[4], b5 = i6, m5 = n6, w7 = o6, y8 = h7, S5 = p5, I5 = 0; I5 < 80; I5++) {
    var N10 = Nf(Tr(If(i6, Bf(I5, n6, o6, h7), t3[_a[I5] + r5], Na(I5)), Ca[I5]), p5);
    i6 = p5, p5 = h7, h7 = Tr(o6, 10), o6 = n6, n6 = N10, N10 = Nf(Tr(If(b5, Bf(79 - I5, m5, w7, y8), t3[Ba[I5] + r5], Ia(I5)), Ra[I5]), S5), b5 = S5, S5 = y8, y8 = Tr(w7, 10), w7 = m5, m5 = N10;
  }
  N10 = xr(this.h[1], o6, y8), this.h[1] = xr(this.h[2], h7, S5), this.h[2] = xr(this.h[3], p5, b5), this.h[3] = xr(this.h[4], i6, m5), this.h[4] = xr(this.h[0], n6, w7), this.h[0] = N10;
}, pe.prototype._digest = function(t3) {
  return t3 === "hex" ? Xe.toHex32(this.h, "little") : Xe.split32(this.h, "little");
};
function Bf(e4, t3, r5, i6) {
  return e4 <= 15 ? t3 ^ r5 ^ i6 : e4 <= 31 ? t3 & r5 | ~t3 & i6 : e4 <= 47 ? (t3 | ~r5) ^ i6 : e4 <= 63 ? t3 & i6 | r5 & ~i6 : t3 ^ (r5 | ~i6);
}
function Na(e4) {
  return e4 <= 15 ? 0 : e4 <= 31 ? 1518500249 : e4 <= 47 ? 1859775393 : e4 <= 63 ? 2400959708 : 2840853838;
}
function Ia(e4) {
  return e4 <= 15 ? 1352829926 : e4 <= 31 ? 1548603684 : e4 <= 47 ? 1836072691 : e4 <= 63 ? 2053994217 : 0;
}
var _a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];
var Ba = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];
var Ca = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];
var Ra = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
var Oa = Q2;
var Pa = yr;
function hr(e4, t3, r5) {
  if (!(this instanceof hr)) return new hr(e4, t3, r5);
  this.Hash = e4, this.blockSize = e4.blockSize / 8, this.outSize = e4.outSize / 8, this.inner = null, this.outer = null, this._init(Oa.toArray(t3, r5));
}
var Da = hr;
hr.prototype._init = function(t3) {
  t3.length > this.blockSize && (t3 = new this.Hash().update(t3).digest()), Pa(t3.length <= this.blockSize);
  for (var r5 = t3.length; r5 < this.blockSize; r5++) t3.push(0);
  for (r5 = 0; r5 < t3.length; r5++) t3[r5] ^= 54;
  for (this.inner = new this.Hash().update(t3), r5 = 0; r5 < t3.length; r5++) t3[r5] ^= 106;
  this.outer = new this.Hash().update(t3);
}, hr.prototype.update = function(t3, r5) {
  return this.inner.update(t3, r5), this;
}, hr.prototype.digest = function(t3) {
  return this.outer.update(this.inner.digest()), this.outer.digest(t3);
}, function(e4) {
  var t3 = e4;
  t3.utils = Q2, t3.common = fr, t3.sha = or2, t3.ripemd = Sf, t3.hmac = Da, t3.sha1 = t3.sha.sha1, t3.sha256 = t3.sha.sha256, t3.sha224 = t3.sha.sha224, t3.sha384 = t3.sha.sha384, t3.sha512 = t3.sha.sha512, t3.ripemd160 = t3.ripemd.ripemd160;
}(se);
function cr(e4, t3, r5) {
  return r5 = { path: t3, exports: {}, require: function(i6, n6) {
    return Fa(i6, n6 ?? r5.path);
  } }, e4(r5, r5.exports), r5.exports;
}
function Fa() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var Pi = Cf;
function Cf(e4, t3) {
  if (!e4) throw new Error(t3 || "Assertion failed");
}
Cf.equal = function(t3, r5, i6) {
  if (t3 != r5) throw new Error(i6 || "Assertion failed: " + t3 + " != " + r5);
};
var fe = cr(function(e4, t3) {
  var r5 = t3;
  function i6(h7, p5) {
    if (Array.isArray(h7)) return h7.slice();
    if (!h7) return [];
    var b5 = [];
    if (typeof h7 != "string") {
      for (var m5 = 0; m5 < h7.length; m5++) b5[m5] = h7[m5] | 0;
      return b5;
    }
    if (p5 === "hex") {
      h7 = h7.replace(/[^a-z0-9]+/ig, ""), h7.length % 2 !== 0 && (h7 = "0" + h7);
      for (var m5 = 0; m5 < h7.length; m5 += 2) b5.push(parseInt(h7[m5] + h7[m5 + 1], 16));
    } else for (var m5 = 0; m5 < h7.length; m5++) {
      var w7 = h7.charCodeAt(m5), y8 = w7 >> 8, S5 = w7 & 255;
      y8 ? b5.push(y8, S5) : b5.push(S5);
    }
    return b5;
  }
  r5.toArray = i6;
  function n6(h7) {
    return h7.length === 1 ? "0" + h7 : h7;
  }
  r5.zero2 = n6;
  function o6(h7) {
    for (var p5 = "", b5 = 0; b5 < h7.length; b5++) p5 += n6(h7[b5].toString(16));
    return p5;
  }
  r5.toHex = o6, r5.encode = function(p5, b5) {
    return b5 === "hex" ? o6(p5) : p5;
  };
});
var Jt = cr(function(e4, t3) {
  var r5 = t3;
  r5.assert = Pi, r5.toArray = fe.toArray, r5.zero2 = fe.zero2, r5.toHex = fe.toHex, r5.encode = fe.encode;
  function i6(b5, m5, w7) {
    var y8 = new Array(Math.max(b5.bitLength(), w7) + 1);
    y8.fill(0);
    for (var S5 = 1 << m5 + 1, I5 = b5.clone(), N10 = 0; N10 < y8.length; N10++) {
      var C6, F3 = I5.andln(S5 - 1);
      I5.isOdd() ? (F3 > (S5 >> 1) - 1 ? C6 = (S5 >> 1) - F3 : C6 = F3, I5.isubn(C6)) : C6 = 0, y8[N10] = C6, I5.iushrn(1);
    }
    return y8;
  }
  r5.getNAF = i6;
  function n6(b5, m5) {
    var w7 = [[], []];
    b5 = b5.clone(), m5 = m5.clone();
    for (var y8 = 0, S5 = 0, I5; b5.cmpn(-y8) > 0 || m5.cmpn(-S5) > 0; ) {
      var N10 = b5.andln(3) + y8 & 3, C6 = m5.andln(3) + S5 & 3;
      N10 === 3 && (N10 = -1), C6 === 3 && (C6 = -1);
      var F3;
      N10 & 1 ? (I5 = b5.andln(7) + y8 & 7, (I5 === 3 || I5 === 5) && C6 === 2 ? F3 = -N10 : F3 = N10) : F3 = 0, w7[0].push(F3);
      var U4;
      C6 & 1 ? (I5 = m5.andln(7) + S5 & 7, (I5 === 3 || I5 === 5) && N10 === 2 ? U4 = -C6 : U4 = C6) : U4 = 0, w7[1].push(U4), 2 * y8 === F3 + 1 && (y8 = 1 - y8), 2 * S5 === U4 + 1 && (S5 = 1 - S5), b5.iushrn(1), m5.iushrn(1);
    }
    return w7;
  }
  r5.getJSF = n6;
  function o6(b5, m5, w7) {
    var y8 = "_" + m5;
    b5.prototype[m5] = function() {
      return this[y8] !== void 0 ? this[y8] : this[y8] = w7.call(this);
    };
  }
  r5.cachedProperty = o6;
  function h7(b5) {
    return typeof b5 == "string" ? r5.toArray(b5, "hex") : b5;
  }
  r5.parseBytes = h7;
  function p5(b5) {
    return new K3(b5, "hex", "le");
  }
  r5.intFromLE = p5;
});
var Ur = Jt.getNAF;
var Ta = Jt.getJSF;
var kr = Jt.assert;
function Ce(e4, t3) {
  this.type = e4, this.p = new K3(t3.p, 16), this.red = t3.prime ? K3.red(t3.prime) : K3.mont(this.p), this.zero = new K3(0).toRed(this.red), this.one = new K3(1).toRed(this.red), this.two = new K3(2).toRed(this.red), this.n = t3.n && new K3(t3.n, 16), this.g = t3.g && this.pointFromJSON(t3.g, t3.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
  var r5 = this.n && this.p.div(this.n);
  !r5 || r5.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
}
var Ze = Ce;
Ce.prototype.point = function() {
  throw new Error("Not implemented");
}, Ce.prototype.validate = function() {
  throw new Error("Not implemented");
}, Ce.prototype._fixedNafMul = function(t3, r5) {
  kr(t3.precomputed);
  var i6 = t3._getDoubles(), n6 = Ur(r5, 1, this._bitLength), o6 = (1 << i6.step + 1) - (i6.step % 2 === 0 ? 2 : 1);
  o6 /= 3;
  var h7 = [], p5, b5;
  for (p5 = 0; p5 < n6.length; p5 += i6.step) {
    b5 = 0;
    for (var m5 = p5 + i6.step - 1; m5 >= p5; m5--) b5 = (b5 << 1) + n6[m5];
    h7.push(b5);
  }
  for (var w7 = this.jpoint(null, null, null), y8 = this.jpoint(null, null, null), S5 = o6; S5 > 0; S5--) {
    for (p5 = 0; p5 < h7.length; p5++) b5 = h7[p5], b5 === S5 ? y8 = y8.mixedAdd(i6.points[p5]) : b5 === -S5 && (y8 = y8.mixedAdd(i6.points[p5].neg()));
    w7 = w7.add(y8);
  }
  return w7.toP();
}, Ce.prototype._wnafMul = function(t3, r5) {
  var i6 = 4, n6 = t3._getNAFPoints(i6);
  i6 = n6.wnd;
  for (var o6 = n6.points, h7 = Ur(r5, i6, this._bitLength), p5 = this.jpoint(null, null, null), b5 = h7.length - 1; b5 >= 0; b5--) {
    for (var m5 = 0; b5 >= 0 && h7[b5] === 0; b5--) m5++;
    if (b5 >= 0 && m5++, p5 = p5.dblp(m5), b5 < 0) break;
    var w7 = h7[b5];
    kr(w7 !== 0), t3.type === "affine" ? w7 > 0 ? p5 = p5.mixedAdd(o6[w7 - 1 >> 1]) : p5 = p5.mixedAdd(o6[-w7 - 1 >> 1].neg()) : w7 > 0 ? p5 = p5.add(o6[w7 - 1 >> 1]) : p5 = p5.add(o6[-w7 - 1 >> 1].neg());
  }
  return t3.type === "affine" ? p5.toP() : p5;
}, Ce.prototype._wnafMulAdd = function(t3, r5, i6, n6, o6) {
  var h7 = this._wnafT1, p5 = this._wnafT2, b5 = this._wnafT3, m5 = 0, w7, y8, S5;
  for (w7 = 0; w7 < n6; w7++) {
    S5 = r5[w7];
    var I5 = S5._getNAFPoints(t3);
    h7[w7] = I5.wnd, p5[w7] = I5.points;
  }
  for (w7 = n6 - 1; w7 >= 1; w7 -= 2) {
    var N10 = w7 - 1, C6 = w7;
    if (h7[N10] !== 1 || h7[C6] !== 1) {
      b5[N10] = Ur(i6[N10], h7[N10], this._bitLength), b5[C6] = Ur(i6[C6], h7[C6], this._bitLength), m5 = Math.max(b5[N10].length, m5), m5 = Math.max(b5[C6].length, m5);
      continue;
    }
    var F3 = [r5[N10], null, null, r5[C6]];
    r5[N10].y.cmp(r5[C6].y) === 0 ? (F3[1] = r5[N10].add(r5[C6]), F3[2] = r5[N10].toJ().mixedAdd(r5[C6].neg())) : r5[N10].y.cmp(r5[C6].y.redNeg()) === 0 ? (F3[1] = r5[N10].toJ().mixedAdd(r5[C6]), F3[2] = r5[N10].add(r5[C6].neg())) : (F3[1] = r5[N10].toJ().mixedAdd(r5[C6]), F3[2] = r5[N10].toJ().mixedAdd(r5[C6].neg()));
    var U4 = [-3, -1, -5, -7, 0, 7, 5, 1, 3], J3 = Ta(i6[N10], i6[C6]);
    for (m5 = Math.max(J3[0].length, m5), b5[N10] = new Array(m5), b5[C6] = new Array(m5), y8 = 0; y8 < m5; y8++) {
      var Bt3 = J3[0][y8] | 0, G2 = J3[1][y8] | 0;
      b5[N10][y8] = U4[(Bt3 + 1) * 3 + (G2 + 1)], b5[C6][y8] = 0, p5[N10] = F3;
    }
  }
  var H3 = this.jpoint(null, null, null), z6 = this._wnafT4;
  for (w7 = m5; w7 >= 0; w7--) {
    for (var Pt2 = 0; w7 >= 0; ) {
      var W3 = true;
      for (y8 = 0; y8 < n6; y8++) z6[y8] = b5[y8][w7] | 0, z6[y8] !== 0 && (W3 = false);
      if (!W3) break;
      Pt2++, w7--;
    }
    if (w7 >= 0 && Pt2++, H3 = H3.dblp(Pt2), w7 < 0) break;
    for (y8 = 0; y8 < n6; y8++) {
      var Rt2 = z6[y8];
      Rt2 !== 0 && (Rt2 > 0 ? S5 = p5[y8][Rt2 - 1 >> 1] : Rt2 < 0 && (S5 = p5[y8][-Rt2 - 1 >> 1].neg()), S5.type === "affine" ? H3 = H3.mixedAdd(S5) : H3 = H3.add(S5));
    }
  }
  for (w7 = 0; w7 < n6; w7++) p5[w7] = null;
  return o6 ? H3 : H3.toP();
};
function Xt(e4, t3) {
  this.curve = e4, this.type = t3, this.precomputed = null;
}
Ce.BasePoint = Xt, Xt.prototype.eq = function() {
  throw new Error("Not implemented");
}, Xt.prototype.validate = function() {
  return this.curve.validate(this);
}, Ce.prototype.decodePoint = function(t3, r5) {
  t3 = Jt.toArray(t3, r5);
  var i6 = this.p.byteLength();
  if ((t3[0] === 4 || t3[0] === 6 || t3[0] === 7) && t3.length - 1 === 2 * i6) {
    t3[0] === 6 ? kr(t3[t3.length - 1] % 2 === 0) : t3[0] === 7 && kr(t3[t3.length - 1] % 2 === 1);
    var n6 = this.point(t3.slice(1, 1 + i6), t3.slice(1 + i6, 1 + 2 * i6));
    return n6;
  } else if ((t3[0] === 2 || t3[0] === 3) && t3.length - 1 === i6) return this.pointFromX(t3.slice(1, 1 + i6), t3[0] === 3);
  throw new Error("Unknown point format");
}, Xt.prototype.encodeCompressed = function(t3) {
  return this.encode(t3, true);
}, Xt.prototype._encode = function(t3) {
  var r5 = this.curve.p.byteLength(), i6 = this.getX().toArray("be", r5);
  return t3 ? [this.getY().isEven() ? 2 : 3].concat(i6) : [4].concat(i6, this.getY().toArray("be", r5));
}, Xt.prototype.encode = function(t3, r5) {
  return Jt.encode(this._encode(r5), t3);
}, Xt.prototype.precompute = function(t3) {
  if (this.precomputed) return this;
  var r5 = { doubles: null, naf: null, beta: null };
  return r5.naf = this._getNAFPoints(8), r5.doubles = this._getDoubles(4, t3), r5.beta = this._getBeta(), this.precomputed = r5, this;
}, Xt.prototype._hasDoubles = function(t3) {
  if (!this.precomputed) return false;
  var r5 = this.precomputed.doubles;
  return r5 ? r5.points.length >= Math.ceil((t3.bitLength() + 1) / r5.step) : false;
}, Xt.prototype._getDoubles = function(t3, r5) {
  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
  for (var i6 = [this], n6 = this, o6 = 0; o6 < r5; o6 += t3) {
    for (var h7 = 0; h7 < t3; h7++) n6 = n6.dbl();
    i6.push(n6);
  }
  return { step: t3, points: i6 };
}, Xt.prototype._getNAFPoints = function(t3) {
  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
  for (var r5 = [this], i6 = (1 << t3) - 1, n6 = i6 === 1 ? null : this.dbl(), o6 = 1; o6 < i6; o6++) r5[o6] = r5[o6 - 1].add(n6);
  return { wnd: t3, points: r5 };
}, Xt.prototype._getBeta = function() {
  return null;
}, Xt.prototype.dblp = function(t3) {
  for (var r5 = this, i6 = 0; i6 < t3; i6++) r5 = r5.dbl();
  return r5;
};
var Di = cr(function(e4) {
  typeof Object.create == "function" ? e4.exports = function(r5, i6) {
    i6 && (r5.super_ = i6, r5.prototype = Object.create(i6.prototype, { constructor: { value: r5, enumerable: false, writable: true, configurable: true } }));
  } : e4.exports = function(r5, i6) {
    if (i6) {
      r5.super_ = i6;
      var n6 = function() {
      };
      n6.prototype = i6.prototype, r5.prototype = new n6(), r5.prototype.constructor = r5;
    }
  };
});
var Ua = Jt.assert;
function Zt(e4) {
  Ze.call(this, "short", e4), this.a = new K3(e4.a, 16).toRed(this.red), this.b = new K3(e4.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e4), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
}
Di(Zt, Ze);
var ka = Zt;
Zt.prototype._getEndomorphism = function(t3) {
  if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
    var r5, i6;
    if (t3.beta) r5 = new K3(t3.beta, 16).toRed(this.red);
    else {
      var n6 = this._getEndoRoots(this.p);
      r5 = n6[0].cmp(n6[1]) < 0 ? n6[0] : n6[1], r5 = r5.toRed(this.red);
    }
    if (t3.lambda) i6 = new K3(t3.lambda, 16);
    else {
      var o6 = this._getEndoRoots(this.n);
      this.g.mul(o6[0]).x.cmp(this.g.x.redMul(r5)) === 0 ? i6 = o6[0] : (i6 = o6[1], Ua(this.g.mul(i6).x.cmp(this.g.x.redMul(r5)) === 0));
    }
    var h7;
    return t3.basis ? h7 = t3.basis.map(function(p5) {
      return { a: new K3(p5.a, 16), b: new K3(p5.b, 16) };
    }) : h7 = this._getEndoBasis(i6), { beta: r5, lambda: i6, basis: h7 };
  }
}, Zt.prototype._getEndoRoots = function(t3) {
  var r5 = t3 === this.p ? this.red : K3.mont(t3), i6 = new K3(2).toRed(r5).redInvm(), n6 = i6.redNeg(), o6 = new K3(3).toRed(r5).redNeg().redSqrt().redMul(i6), h7 = n6.redAdd(o6).fromRed(), p5 = n6.redSub(o6).fromRed();
  return [h7, p5];
}, Zt.prototype._getEndoBasis = function(t3) {
  for (var r5 = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), i6 = t3, n6 = this.n.clone(), o6 = new K3(1), h7 = new K3(0), p5 = new K3(0), b5 = new K3(1), m5, w7, y8, S5, I5, N10, C6, F3 = 0, U4, J3; i6.cmpn(0) !== 0; ) {
    var Bt3 = n6.div(i6);
    U4 = n6.sub(Bt3.mul(i6)), J3 = p5.sub(Bt3.mul(o6));
    var G2 = b5.sub(Bt3.mul(h7));
    if (!y8 && U4.cmp(r5) < 0) m5 = C6.neg(), w7 = o6, y8 = U4.neg(), S5 = J3;
    else if (y8 && ++F3 === 2) break;
    C6 = U4, n6 = i6, i6 = U4, p5 = o6, o6 = J3, b5 = h7, h7 = G2;
  }
  I5 = U4.neg(), N10 = J3;
  var H3 = y8.sqr().add(S5.sqr()), z6 = I5.sqr().add(N10.sqr());
  return z6.cmp(H3) >= 0 && (I5 = m5, N10 = w7), y8.negative && (y8 = y8.neg(), S5 = S5.neg()), I5.negative && (I5 = I5.neg(), N10 = N10.neg()), [{ a: y8, b: S5 }, { a: I5, b: N10 }];
}, Zt.prototype._endoSplit = function(t3) {
  var r5 = this.endo.basis, i6 = r5[0], n6 = r5[1], o6 = n6.b.mul(t3).divRound(this.n), h7 = i6.b.neg().mul(t3).divRound(this.n), p5 = o6.mul(i6.a), b5 = h7.mul(n6.a), m5 = o6.mul(i6.b), w7 = h7.mul(n6.b), y8 = t3.sub(p5).sub(b5), S5 = m5.add(w7).neg();
  return { k1: y8, k2: S5 };
}, Zt.prototype.pointFromX = function(t3, r5) {
  t3 = new K3(t3, 16), t3.red || (t3 = t3.toRed(this.red));
  var i6 = t3.redSqr().redMul(t3).redIAdd(t3.redMul(this.a)).redIAdd(this.b), n6 = i6.redSqrt();
  if (n6.redSqr().redSub(i6).cmp(this.zero) !== 0) throw new Error("invalid point");
  var o6 = n6.fromRed().isOdd();
  return (r5 && !o6 || !r5 && o6) && (n6 = n6.redNeg()), this.point(t3, n6);
}, Zt.prototype.validate = function(t3) {
  if (t3.inf) return true;
  var r5 = t3.x, i6 = t3.y, n6 = this.a.redMul(r5), o6 = r5.redSqr().redMul(r5).redIAdd(n6).redIAdd(this.b);
  return i6.redSqr().redISub(o6).cmpn(0) === 0;
}, Zt.prototype._endoWnafMulAdd = function(t3, r5, i6) {
  for (var n6 = this._endoWnafT1, o6 = this._endoWnafT2, h7 = 0; h7 < t3.length; h7++) {
    var p5 = this._endoSplit(r5[h7]), b5 = t3[h7], m5 = b5._getBeta();
    p5.k1.negative && (p5.k1.ineg(), b5 = b5.neg(true)), p5.k2.negative && (p5.k2.ineg(), m5 = m5.neg(true)), n6[h7 * 2] = b5, n6[h7 * 2 + 1] = m5, o6[h7 * 2] = p5.k1, o6[h7 * 2 + 1] = p5.k2;
  }
  for (var w7 = this._wnafMulAdd(1, n6, o6, h7 * 2, i6), y8 = 0; y8 < h7 * 2; y8++) n6[y8] = null, o6[y8] = null;
  return w7;
};
function Ft(e4, t3, r5, i6) {
  Ze.BasePoint.call(this, e4, "affine"), t3 === null && r5 === null ? (this.x = null, this.y = null, this.inf = true) : (this.x = new K3(t3, 16), this.y = new K3(r5, 16), i6 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
}
Di(Ft, Ze.BasePoint), Zt.prototype.point = function(t3, r5, i6) {
  return new Ft(this, t3, r5, i6);
}, Zt.prototype.pointFromJSON = function(t3, r5) {
  return Ft.fromJSON(this, t3, r5);
}, Ft.prototype._getBeta = function() {
  if (this.curve.endo) {
    var t3 = this.precomputed;
    if (t3 && t3.beta) return t3.beta;
    var r5 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (t3) {
      var i6 = this.curve, n6 = function(o6) {
        return i6.point(o6.x.redMul(i6.endo.beta), o6.y);
      };
      t3.beta = r5, r5.precomputed = { beta: null, naf: t3.naf && { wnd: t3.naf.wnd, points: t3.naf.points.map(n6) }, doubles: t3.doubles && { step: t3.doubles.step, points: t3.doubles.points.map(n6) } };
    }
    return r5;
  }
}, Ft.prototype.toJSON = function() {
  return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
}, Ft.fromJSON = function(t3, r5, i6) {
  typeof r5 == "string" && (r5 = JSON.parse(r5));
  var n6 = t3.point(r5[0], r5[1], i6);
  if (!r5[2]) return n6;
  function o6(p5) {
    return t3.point(p5[0], p5[1], i6);
  }
  var h7 = r5[2];
  return n6.precomputed = { beta: null, doubles: h7.doubles && { step: h7.doubles.step, points: [n6].concat(h7.doubles.points.map(o6)) }, naf: h7.naf && { wnd: h7.naf.wnd, points: [n6].concat(h7.naf.points.map(o6)) } }, n6;
}, Ft.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
}, Ft.prototype.isInfinity = function() {
  return this.inf;
}, Ft.prototype.add = function(t3) {
  if (this.inf) return t3;
  if (t3.inf) return this;
  if (this.eq(t3)) return this.dbl();
  if (this.neg().eq(t3)) return this.curve.point(null, null);
  if (this.x.cmp(t3.x) === 0) return this.curve.point(null, null);
  var r5 = this.y.redSub(t3.y);
  r5.cmpn(0) !== 0 && (r5 = r5.redMul(this.x.redSub(t3.x).redInvm()));
  var i6 = r5.redSqr().redISub(this.x).redISub(t3.x), n6 = r5.redMul(this.x.redSub(i6)).redISub(this.y);
  return this.curve.point(i6, n6);
}, Ft.prototype.dbl = function() {
  if (this.inf) return this;
  var t3 = this.y.redAdd(this.y);
  if (t3.cmpn(0) === 0) return this.curve.point(null, null);
  var r5 = this.curve.a, i6 = this.x.redSqr(), n6 = t3.redInvm(), o6 = i6.redAdd(i6).redIAdd(i6).redIAdd(r5).redMul(n6), h7 = o6.redSqr().redISub(this.x.redAdd(this.x)), p5 = o6.redMul(this.x.redSub(h7)).redISub(this.y);
  return this.curve.point(h7, p5);
}, Ft.prototype.getX = function() {
  return this.x.fromRed();
}, Ft.prototype.getY = function() {
  return this.y.fromRed();
}, Ft.prototype.mul = function(t3) {
  return t3 = new K3(t3, 16), this.isInfinity() ? this : this._hasDoubles(t3) ? this.curve._fixedNafMul(this, t3) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t3]) : this.curve._wnafMul(this, t3);
}, Ft.prototype.mulAdd = function(t3, r5, i6) {
  var n6 = [this, r5], o6 = [t3, i6];
  return this.curve.endo ? this.curve._endoWnafMulAdd(n6, o6) : this.curve._wnafMulAdd(1, n6, o6, 2);
}, Ft.prototype.jmulAdd = function(t3, r5, i6) {
  var n6 = [this, r5], o6 = [t3, i6];
  return this.curve.endo ? this.curve._endoWnafMulAdd(n6, o6, true) : this.curve._wnafMulAdd(1, n6, o6, 2, true);
}, Ft.prototype.eq = function(t3) {
  return this === t3 || this.inf === t3.inf && (this.inf || this.x.cmp(t3.x) === 0 && this.y.cmp(t3.y) === 0);
}, Ft.prototype.neg = function(t3) {
  if (this.inf) return this;
  var r5 = this.curve.point(this.x, this.y.redNeg());
  if (t3 && this.precomputed) {
    var i6 = this.precomputed, n6 = function(o6) {
      return o6.neg();
    };
    r5.precomputed = { naf: i6.naf && { wnd: i6.naf.wnd, points: i6.naf.points.map(n6) }, doubles: i6.doubles && { step: i6.doubles.step, points: i6.doubles.points.map(n6) } };
  }
  return r5;
}, Ft.prototype.toJ = function() {
  if (this.inf) return this.curve.jpoint(null, null, null);
  var t3 = this.curve.jpoint(this.x, this.y, this.curve.one);
  return t3;
};
function Tt(e4, t3, r5, i6) {
  Ze.BasePoint.call(this, e4, "jacobian"), t3 === null && r5 === null && i6 === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new K3(0)) : (this.x = new K3(t3, 16), this.y = new K3(r5, 16), this.z = new K3(i6, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
}
Di(Tt, Ze.BasePoint), Zt.prototype.jpoint = function(t3, r5, i6) {
  return new Tt(this, t3, r5, i6);
}, Tt.prototype.toP = function() {
  if (this.isInfinity()) return this.curve.point(null, null);
  var t3 = this.z.redInvm(), r5 = t3.redSqr(), i6 = this.x.redMul(r5), n6 = this.y.redMul(r5).redMul(t3);
  return this.curve.point(i6, n6);
}, Tt.prototype.neg = function() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
}, Tt.prototype.add = function(t3) {
  if (this.isInfinity()) return t3;
  if (t3.isInfinity()) return this;
  var r5 = t3.z.redSqr(), i6 = this.z.redSqr(), n6 = this.x.redMul(r5), o6 = t3.x.redMul(i6), h7 = this.y.redMul(r5.redMul(t3.z)), p5 = t3.y.redMul(i6.redMul(this.z)), b5 = n6.redSub(o6), m5 = h7.redSub(p5);
  if (b5.cmpn(0) === 0) return m5.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var w7 = b5.redSqr(), y8 = w7.redMul(b5), S5 = n6.redMul(w7), I5 = m5.redSqr().redIAdd(y8).redISub(S5).redISub(S5), N10 = m5.redMul(S5.redISub(I5)).redISub(h7.redMul(y8)), C6 = this.z.redMul(t3.z).redMul(b5);
  return this.curve.jpoint(I5, N10, C6);
}, Tt.prototype.mixedAdd = function(t3) {
  if (this.isInfinity()) return t3.toJ();
  if (t3.isInfinity()) return this;
  var r5 = this.z.redSqr(), i6 = this.x, n6 = t3.x.redMul(r5), o6 = this.y, h7 = t3.y.redMul(r5).redMul(this.z), p5 = i6.redSub(n6), b5 = o6.redSub(h7);
  if (p5.cmpn(0) === 0) return b5.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var m5 = p5.redSqr(), w7 = m5.redMul(p5), y8 = i6.redMul(m5), S5 = b5.redSqr().redIAdd(w7).redISub(y8).redISub(y8), I5 = b5.redMul(y8.redISub(S5)).redISub(o6.redMul(w7)), N10 = this.z.redMul(p5);
  return this.curve.jpoint(S5, I5, N10);
}, Tt.prototype.dblp = function(t3) {
  if (t3 === 0) return this;
  if (this.isInfinity()) return this;
  if (!t3) return this.dbl();
  var r5;
  if (this.curve.zeroA || this.curve.threeA) {
    var i6 = this;
    for (r5 = 0; r5 < t3; r5++) i6 = i6.dbl();
    return i6;
  }
  var n6 = this.curve.a, o6 = this.curve.tinv, h7 = this.x, p5 = this.y, b5 = this.z, m5 = b5.redSqr().redSqr(), w7 = p5.redAdd(p5);
  for (r5 = 0; r5 < t3; r5++) {
    var y8 = h7.redSqr(), S5 = w7.redSqr(), I5 = S5.redSqr(), N10 = y8.redAdd(y8).redIAdd(y8).redIAdd(n6.redMul(m5)), C6 = h7.redMul(S5), F3 = N10.redSqr().redISub(C6.redAdd(C6)), U4 = C6.redISub(F3), J3 = N10.redMul(U4);
    J3 = J3.redIAdd(J3).redISub(I5);
    var Bt3 = w7.redMul(b5);
    r5 + 1 < t3 && (m5 = m5.redMul(I5)), h7 = F3, b5 = Bt3, w7 = J3;
  }
  return this.curve.jpoint(h7, w7.redMul(o6), b5);
}, Tt.prototype.dbl = function() {
  return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
}, Tt.prototype._zeroDbl = function() {
  var t3, r5, i6;
  if (this.zOne) {
    var n6 = this.x.redSqr(), o6 = this.y.redSqr(), h7 = o6.redSqr(), p5 = this.x.redAdd(o6).redSqr().redISub(n6).redISub(h7);
    p5 = p5.redIAdd(p5);
    var b5 = n6.redAdd(n6).redIAdd(n6), m5 = b5.redSqr().redISub(p5).redISub(p5), w7 = h7.redIAdd(h7);
    w7 = w7.redIAdd(w7), w7 = w7.redIAdd(w7), t3 = m5, r5 = b5.redMul(p5.redISub(m5)).redISub(w7), i6 = this.y.redAdd(this.y);
  } else {
    var y8 = this.x.redSqr(), S5 = this.y.redSqr(), I5 = S5.redSqr(), N10 = this.x.redAdd(S5).redSqr().redISub(y8).redISub(I5);
    N10 = N10.redIAdd(N10);
    var C6 = y8.redAdd(y8).redIAdd(y8), F3 = C6.redSqr(), U4 = I5.redIAdd(I5);
    U4 = U4.redIAdd(U4), U4 = U4.redIAdd(U4), t3 = F3.redISub(N10).redISub(N10), r5 = C6.redMul(N10.redISub(t3)).redISub(U4), i6 = this.y.redMul(this.z), i6 = i6.redIAdd(i6);
  }
  return this.curve.jpoint(t3, r5, i6);
}, Tt.prototype._threeDbl = function() {
  var t3, r5, i6;
  if (this.zOne) {
    var n6 = this.x.redSqr(), o6 = this.y.redSqr(), h7 = o6.redSqr(), p5 = this.x.redAdd(o6).redSqr().redISub(n6).redISub(h7);
    p5 = p5.redIAdd(p5);
    var b5 = n6.redAdd(n6).redIAdd(n6).redIAdd(this.curve.a), m5 = b5.redSqr().redISub(p5).redISub(p5);
    t3 = m5;
    var w7 = h7.redIAdd(h7);
    w7 = w7.redIAdd(w7), w7 = w7.redIAdd(w7), r5 = b5.redMul(p5.redISub(m5)).redISub(w7), i6 = this.y.redAdd(this.y);
  } else {
    var y8 = this.z.redSqr(), S5 = this.y.redSqr(), I5 = this.x.redMul(S5), N10 = this.x.redSub(y8).redMul(this.x.redAdd(y8));
    N10 = N10.redAdd(N10).redIAdd(N10);
    var C6 = I5.redIAdd(I5);
    C6 = C6.redIAdd(C6);
    var F3 = C6.redAdd(C6);
    t3 = N10.redSqr().redISub(F3), i6 = this.y.redAdd(this.z).redSqr().redISub(S5).redISub(y8);
    var U4 = S5.redSqr();
    U4 = U4.redIAdd(U4), U4 = U4.redIAdd(U4), U4 = U4.redIAdd(U4), r5 = N10.redMul(C6.redISub(t3)).redISub(U4);
  }
  return this.curve.jpoint(t3, r5, i6);
}, Tt.prototype._dbl = function() {
  var t3 = this.curve.a, r5 = this.x, i6 = this.y, n6 = this.z, o6 = n6.redSqr().redSqr(), h7 = r5.redSqr(), p5 = i6.redSqr(), b5 = h7.redAdd(h7).redIAdd(h7).redIAdd(t3.redMul(o6)), m5 = r5.redAdd(r5);
  m5 = m5.redIAdd(m5);
  var w7 = m5.redMul(p5), y8 = b5.redSqr().redISub(w7.redAdd(w7)), S5 = w7.redISub(y8), I5 = p5.redSqr();
  I5 = I5.redIAdd(I5), I5 = I5.redIAdd(I5), I5 = I5.redIAdd(I5);
  var N10 = b5.redMul(S5).redISub(I5), C6 = i6.redAdd(i6).redMul(n6);
  return this.curve.jpoint(y8, N10, C6);
}, Tt.prototype.trpl = function() {
  if (!this.curve.zeroA) return this.dbl().add(this);
  var t3 = this.x.redSqr(), r5 = this.y.redSqr(), i6 = this.z.redSqr(), n6 = r5.redSqr(), o6 = t3.redAdd(t3).redIAdd(t3), h7 = o6.redSqr(), p5 = this.x.redAdd(r5).redSqr().redISub(t3).redISub(n6);
  p5 = p5.redIAdd(p5), p5 = p5.redAdd(p5).redIAdd(p5), p5 = p5.redISub(h7);
  var b5 = p5.redSqr(), m5 = n6.redIAdd(n6);
  m5 = m5.redIAdd(m5), m5 = m5.redIAdd(m5), m5 = m5.redIAdd(m5);
  var w7 = o6.redIAdd(p5).redSqr().redISub(h7).redISub(b5).redISub(m5), y8 = r5.redMul(w7);
  y8 = y8.redIAdd(y8), y8 = y8.redIAdd(y8);
  var S5 = this.x.redMul(b5).redISub(y8);
  S5 = S5.redIAdd(S5), S5 = S5.redIAdd(S5);
  var I5 = this.y.redMul(w7.redMul(m5.redISub(w7)).redISub(p5.redMul(b5)));
  I5 = I5.redIAdd(I5), I5 = I5.redIAdd(I5), I5 = I5.redIAdd(I5);
  var N10 = this.z.redAdd(p5).redSqr().redISub(i6).redISub(b5);
  return this.curve.jpoint(S5, I5, N10);
}, Tt.prototype.mul = function(t3, r5) {
  return t3 = new K3(t3, r5), this.curve._wnafMul(this, t3);
}, Tt.prototype.eq = function(t3) {
  if (t3.type === "affine") return this.eq(t3.toJ());
  if (this === t3) return true;
  var r5 = this.z.redSqr(), i6 = t3.z.redSqr();
  if (this.x.redMul(i6).redISub(t3.x.redMul(r5)).cmpn(0) !== 0) return false;
  var n6 = r5.redMul(this.z), o6 = i6.redMul(t3.z);
  return this.y.redMul(o6).redISub(t3.y.redMul(n6)).cmpn(0) === 0;
}, Tt.prototype.eqXToP = function(t3) {
  var r5 = this.z.redSqr(), i6 = t3.toRed(this.curve.red).redMul(r5);
  if (this.x.cmp(i6) === 0) return true;
  for (var n6 = t3.clone(), o6 = this.curve.redN.redMul(r5); ; ) {
    if (n6.iadd(this.curve.n), n6.cmp(this.curve.p) >= 0) return false;
    if (i6.redIAdd(o6), this.x.cmp(i6) === 0) return true;
  }
}, Tt.prototype.inspect = function() {
  return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
}, Tt.prototype.isInfinity = function() {
  return this.z.cmpn(0) === 0;
};
var qr = cr(function(e4, t3) {
  var r5 = t3;
  r5.base = Ze, r5.short = ka, r5.mont = null, r5.edwards = null;
});
var Kr = cr(function(e4, t3) {
  var r5 = t3, i6 = Jt.assert;
  function n6(p5) {
    p5.type === "short" ? this.curve = new qr.short(p5) : p5.type === "edwards" ? this.curve = new qr.edwards(p5) : this.curve = new qr.mont(p5), this.g = this.curve.g, this.n = this.curve.n, this.hash = p5.hash, i6(this.g.validate(), "Invalid curve"), i6(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  r5.PresetCurve = n6;
  function o6(p5, b5) {
    Object.defineProperty(r5, p5, { configurable: true, enumerable: true, get: function() {
      var m5 = new n6(b5);
      return Object.defineProperty(r5, p5, { configurable: true, enumerable: true, value: m5 }), m5;
    } });
  }
  o6("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: se.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), o6("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: se.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), o6("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: se.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), o6("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: se.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }), o6("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: se.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] }), o6("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: se.sha256, gRed: false, g: ["9"] }), o6("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: se.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
  var h7;
  try {
    h7 = null.crash();
  } catch {
    h7 = void 0;
  }
  o6("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: se.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", h7] });
});
function Re(e4) {
  if (!(this instanceof Re)) return new Re(e4);
  this.hash = e4.hash, this.predResist = !!e4.predResist, this.outLen = this.hash.outSize, this.minEntropy = e4.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
  var t3 = fe.toArray(e4.entropy, e4.entropyEnc || "hex"), r5 = fe.toArray(e4.nonce, e4.nonceEnc || "hex"), i6 = fe.toArray(e4.pers, e4.persEnc || "hex");
  Pi(t3.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t3, r5, i6);
}
var Rf = Re;
Re.prototype._init = function(t3, r5, i6) {
  var n6 = t3.concat(r5).concat(i6);
  this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
  for (var o6 = 0; o6 < this.V.length; o6++) this.K[o6] = 0, this.V[o6] = 1;
  this._update(n6), this._reseed = 1, this.reseedInterval = 281474976710656;
}, Re.prototype._hmac = function() {
  return new se.hmac(this.hash, this.K);
}, Re.prototype._update = function(t3) {
  var r5 = this._hmac().update(this.V).update([0]);
  t3 && (r5 = r5.update(t3)), this.K = r5.digest(), this.V = this._hmac().update(this.V).digest(), t3 && (this.K = this._hmac().update(this.V).update([1]).update(t3).digest(), this.V = this._hmac().update(this.V).digest());
}, Re.prototype.reseed = function(t3, r5, i6, n6) {
  typeof r5 != "string" && (n6 = i6, i6 = r5, r5 = null), t3 = fe.toArray(t3, r5), i6 = fe.toArray(i6, n6), Pi(t3.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t3.concat(i6 || [])), this._reseed = 1;
}, Re.prototype.generate = function(t3, r5, i6, n6) {
  if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
  typeof r5 != "string" && (n6 = i6, i6 = r5, r5 = null), i6 && (i6 = fe.toArray(i6, n6 || "hex"), this._update(i6));
  for (var o6 = []; o6.length < t3; ) this.V = this._hmac().update(this.V).digest(), o6 = o6.concat(this.V);
  var h7 = o6.slice(0, t3);
  return this._update(i6), this._reseed++, fe.encode(h7, r5);
};
var Fi = Jt.assert;
function kt(e4, t3) {
  this.ec = e4, this.priv = null, this.pub = null, t3.priv && this._importPrivate(t3.priv, t3.privEnc), t3.pub && this._importPublic(t3.pub, t3.pubEnc);
}
var Ti = kt;
kt.fromPublic = function(t3, r5, i6) {
  return r5 instanceof kt ? r5 : new kt(t3, { pub: r5, pubEnc: i6 });
}, kt.fromPrivate = function(t3, r5, i6) {
  return r5 instanceof kt ? r5 : new kt(t3, { priv: r5, privEnc: i6 });
}, kt.prototype.validate = function() {
  var t3 = this.getPublic();
  return t3.isInfinity() ? { result: false, reason: "Invalid public key" } : t3.validate() ? t3.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
}, kt.prototype.getPublic = function(t3, r5) {
  return typeof t3 == "string" && (r5 = t3, t3 = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r5 ? this.pub.encode(r5, t3) : this.pub;
}, kt.prototype.getPrivate = function(t3) {
  return t3 === "hex" ? this.priv.toString(16, 2) : this.priv;
}, kt.prototype._importPrivate = function(t3, r5) {
  this.priv = new K3(t3, r5 || 16), this.priv = this.priv.umod(this.ec.curve.n);
}, kt.prototype._importPublic = function(t3, r5) {
  if (t3.x || t3.y) {
    this.ec.curve.type === "mont" ? Fi(t3.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && Fi(t3.x && t3.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(t3.x, t3.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(t3, r5);
}, kt.prototype.derive = function(t3) {
  return t3.validate() || Fi(t3.validate(), "public point not validated"), t3.mul(this.priv).getX();
}, kt.prototype.sign = function(t3, r5, i6) {
  return this.ec.sign(t3, this, r5, i6);
}, kt.prototype.verify = function(t3, r5) {
  return this.ec.verify(t3, r5, this);
}, kt.prototype.inspect = function() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var qa = Jt.assert;
function Hr(e4, t3) {
  if (e4 instanceof Hr) return e4;
  this._importDER(e4, t3) || (qa(e4.r && e4.s, "Signature without r or s"), this.r = new K3(e4.r, 16), this.s = new K3(e4.s, 16), e4.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e4.recoveryParam);
}
var zr = Hr;
function Ka() {
  this.place = 0;
}
function Ui(e4, t3) {
  var r5 = e4[t3.place++];
  if (!(r5 & 128)) return r5;
  var i6 = r5 & 15;
  if (i6 === 0 || i6 > 4) return false;
  for (var n6 = 0, o6 = 0, h7 = t3.place; o6 < i6; o6++, h7++) n6 <<= 8, n6 |= e4[h7], n6 >>>= 0;
  return n6 <= 127 ? false : (t3.place = h7, n6);
}
function Of(e4) {
  for (var t3 = 0, r5 = e4.length - 1; !e4[t3] && !(e4[t3 + 1] & 128) && t3 < r5; ) t3++;
  return t3 === 0 ? e4 : e4.slice(t3);
}
Hr.prototype._importDER = function(t3, r5) {
  t3 = Jt.toArray(t3, r5);
  var i6 = new Ka();
  if (t3[i6.place++] !== 48) return false;
  var n6 = Ui(t3, i6);
  if (n6 === false || n6 + i6.place !== t3.length || t3[i6.place++] !== 2) return false;
  var o6 = Ui(t3, i6);
  if (o6 === false) return false;
  var h7 = t3.slice(i6.place, o6 + i6.place);
  if (i6.place += o6, t3[i6.place++] !== 2) return false;
  var p5 = Ui(t3, i6);
  if (p5 === false || t3.length !== p5 + i6.place) return false;
  var b5 = t3.slice(i6.place, p5 + i6.place);
  if (h7[0] === 0) if (h7[1] & 128) h7 = h7.slice(1);
  else return false;
  if (b5[0] === 0) if (b5[1] & 128) b5 = b5.slice(1);
  else return false;
  return this.r = new K3(h7), this.s = new K3(b5), this.recoveryParam = null, true;
};
function ki(e4, t3) {
  if (t3 < 128) {
    e4.push(t3);
    return;
  }
  var r5 = 1 + (Math.log(t3) / Math.LN2 >>> 3);
  for (e4.push(r5 | 128); --r5; ) e4.push(t3 >>> (r5 << 3) & 255);
  e4.push(t3);
}
Hr.prototype.toDER = function(t3) {
  var r5 = this.r.toArray(), i6 = this.s.toArray();
  for (r5[0] & 128 && (r5 = [0].concat(r5)), i6[0] & 128 && (i6 = [0].concat(i6)), r5 = Of(r5), i6 = Of(i6); !i6[0] && !(i6[1] & 128); ) i6 = i6.slice(1);
  var n6 = [2];
  ki(n6, r5.length), n6 = n6.concat(r5), n6.push(2), ki(n6, i6.length);
  var o6 = n6.concat(i6), h7 = [48];
  return ki(h7, o6.length), h7 = h7.concat(o6), Jt.encode(h7, t3);
};
var Ha = function() {
  throw new Error("unsupported");
};
var Pf = Jt.assert;
function $t(e4) {
  if (!(this instanceof $t)) return new $t(e4);
  typeof e4 == "string" && (Pf(Object.prototype.hasOwnProperty.call(Kr, e4), "Unknown curve " + e4), e4 = Kr[e4]), e4 instanceof Kr.PresetCurve && (e4 = { curve: e4 }), this.curve = e4.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e4.curve.g, this.g.precompute(e4.curve.n.bitLength() + 1), this.hash = e4.hash || e4.curve.hash;
}
var za = $t;
$t.prototype.keyPair = function(t3) {
  return new Ti(this, t3);
}, $t.prototype.keyFromPrivate = function(t3, r5) {
  return Ti.fromPrivate(this, t3, r5);
}, $t.prototype.keyFromPublic = function(t3, r5) {
  return Ti.fromPublic(this, t3, r5);
}, $t.prototype.genKeyPair = function(t3) {
  t3 || (t3 = {});
  for (var r5 = new Rf({ hash: this.hash, pers: t3.pers, persEnc: t3.persEnc || "utf8", entropy: t3.entropy || Ha(this.hash.hmacStrength), entropyEnc: t3.entropy && t3.entropyEnc || "utf8", nonce: this.n.toArray() }), i6 = this.n.byteLength(), n6 = this.n.sub(new K3(2)); ; ) {
    var o6 = new K3(r5.generate(i6));
    if (!(o6.cmp(n6) > 0)) return o6.iaddn(1), this.keyFromPrivate(o6);
  }
}, $t.prototype._truncateToN = function(t3, r5) {
  var i6 = t3.byteLength() * 8 - this.n.bitLength();
  return i6 > 0 && (t3 = t3.ushrn(i6)), !r5 && t3.cmp(this.n) >= 0 ? t3.sub(this.n) : t3;
}, $t.prototype.sign = function(t3, r5, i6, n6) {
  typeof i6 == "object" && (n6 = i6, i6 = null), n6 || (n6 = {}), r5 = this.keyFromPrivate(r5, i6), t3 = this._truncateToN(new K3(t3, 16));
  for (var o6 = this.n.byteLength(), h7 = r5.getPrivate().toArray("be", o6), p5 = t3.toArray("be", o6), b5 = new Rf({ hash: this.hash, entropy: h7, nonce: p5, pers: n6.pers, persEnc: n6.persEnc || "utf8" }), m5 = this.n.sub(new K3(1)), w7 = 0; ; w7++) {
    var y8 = n6.k ? n6.k(w7) : new K3(b5.generate(this.n.byteLength()));
    if (y8 = this._truncateToN(y8, true), !(y8.cmpn(1) <= 0 || y8.cmp(m5) >= 0)) {
      var S5 = this.g.mul(y8);
      if (!S5.isInfinity()) {
        var I5 = S5.getX(), N10 = I5.umod(this.n);
        if (N10.cmpn(0) !== 0) {
          var C6 = y8.invm(this.n).mul(N10.mul(r5.getPrivate()).iadd(t3));
          if (C6 = C6.umod(this.n), C6.cmpn(0) !== 0) {
            var F3 = (S5.getY().isOdd() ? 1 : 0) | (I5.cmp(N10) !== 0 ? 2 : 0);
            return n6.canonical && C6.cmp(this.nh) > 0 && (C6 = this.n.sub(C6), F3 ^= 1), new zr({ r: N10, s: C6, recoveryParam: F3 });
          }
        }
      }
    }
  }
}, $t.prototype.verify = function(t3, r5, i6, n6) {
  t3 = this._truncateToN(new K3(t3, 16)), i6 = this.keyFromPublic(i6, n6), r5 = new zr(r5, "hex");
  var o6 = r5.r, h7 = r5.s;
  if (o6.cmpn(1) < 0 || o6.cmp(this.n) >= 0 || h7.cmpn(1) < 0 || h7.cmp(this.n) >= 0) return false;
  var p5 = h7.invm(this.n), b5 = p5.mul(t3).umod(this.n), m5 = p5.mul(o6).umod(this.n), w7;
  return this.curve._maxwellTrick ? (w7 = this.g.jmulAdd(b5, i6.getPublic(), m5), w7.isInfinity() ? false : w7.eqXToP(o6)) : (w7 = this.g.mulAdd(b5, i6.getPublic(), m5), w7.isInfinity() ? false : w7.getX().umod(this.n).cmp(o6) === 0);
}, $t.prototype.recoverPubKey = function(e4, t3, r5, i6) {
  Pf((3 & r5) === r5, "The recovery param is more than two bits"), t3 = new zr(t3, i6);
  var n6 = this.n, o6 = new K3(e4), h7 = t3.r, p5 = t3.s, b5 = r5 & 1, m5 = r5 >> 1;
  if (h7.cmp(this.curve.p.umod(this.curve.n)) >= 0 && m5) throw new Error("Unable to find sencond key candinate");
  m5 ? h7 = this.curve.pointFromX(h7.add(this.curve.n), b5) : h7 = this.curve.pointFromX(h7, b5);
  var w7 = t3.r.invm(n6), y8 = n6.sub(o6).mul(w7).umod(n6), S5 = p5.mul(w7).umod(n6);
  return this.g.mulAdd(y8, h7, S5);
}, $t.prototype.getKeyRecoveryParam = function(e4, t3, r5, i6) {
  if (t3 = new zr(t3, i6), t3.recoveryParam !== null) return t3.recoveryParam;
  for (var n6 = 0; n6 < 4; n6++) {
    var o6;
    try {
      o6 = this.recoverPubKey(e4, t3, n6);
    } catch {
      continue;
    }
    if (o6.eq(r5)) return n6;
  }
  throw new Error("Unable to find valid recovery factor");
};
var La = cr(function(e4, t3) {
  var r5 = t3;
  r5.version = "6.5.4", r5.utils = Jt, r5.rand = function() {
    throw new Error("unsupported");
  }, r5.curve = qr, r5.curves = Kr, r5.ec = za, r5.eddsa = null;
});
var ja = La.ec;
var Qa = "signing-key/5.7.0";
var qi = new L4(Qa);
var Ki = null;
function ve() {
  return Ki || (Ki = new ja("secp256k1")), Ki;
}
var Ja = class {
  constructor(t3) {
    br(this, "curve", "secp256k1"), br(this, "privateKey", Kt(t3)), N0(this.privateKey) !== 32 && qi.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
    const r5 = ve().keyFromPrivate(Ot(this.privateKey));
    br(this, "publicKey", "0x" + r5.getPublic(false, "hex")), br(this, "compressedPublicKey", "0x" + r5.getPublic(true, "hex")), br(this, "_isSigningKey", true);
  }
  _addPoint(t3) {
    const r5 = ve().keyFromPublic(Ot(this.publicKey)), i6 = ve().keyFromPublic(Ot(t3));
    return "0x" + r5.pub.add(i6.pub).encodeCompressed("hex");
  }
  signDigest(t3) {
    const r5 = ve().keyFromPrivate(Ot(this.privateKey)), i6 = Ot(t3);
    i6.length !== 32 && qi.throwArgumentError("bad digest length", "digest", t3);
    const n6 = r5.sign(i6, { canonical: true });
    return zn({ recoveryParam: n6.recoveryParam, r: oe("0x" + n6.r.toString(16), 32), s: oe("0x" + n6.s.toString(16), 32) });
  }
  computeSharedSecret(t3) {
    const r5 = ve().keyFromPrivate(Ot(this.privateKey)), i6 = ve().keyFromPublic(Ot(Df(t3)));
    return oe("0x" + r5.derive(i6.getPublic()).toString(16), 32);
  }
  static isSigningKey(t3) {
    return !!(t3 && t3._isSigningKey);
  }
};
function Ga(e4, t3) {
  const r5 = zn(t3), i6 = { r: Ot(r5.r), s: Ot(r5.s) };
  return "0x" + ve().recoverPubKey(Ot(e4), i6, r5.recoveryParam).encode("hex", false);
}
function Df(e4, t3) {
  const r5 = Ot(e4);
  if (r5.length === 32) {
    const i6 = new Ja(r5);
    return t3 ? "0x" + ve().keyFromPrivate(r5).getPublic(true, "hex") : i6.publicKey;
  } else {
    if (r5.length === 33) return t3 ? Kt(r5) : "0x" + ve().keyFromPublic(r5).getPublic(false, "hex");
    if (r5.length === 65) return t3 ? "0x" + ve().keyFromPublic(r5).getPublic(true, "hex") : Kt(r5);
  }
  return qi.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}
var Ya = "transactions/5.7.0";
new L4(Ya);
var Ff;
(function(e4) {
  e4[e4.legacy = 0] = "legacy", e4[e4.eip2930 = 1] = "eip2930", e4[e4.eip1559 = 2] = "eip1559";
})(Ff || (Ff = {}));
function Va(e4) {
  const t3 = Df(e4);
  return ns(Hn(yi(Hn(t3, 1)), 12));
}
function Wa(e4, t3) {
  return Va(Ga(Ot(e4), t3));
}
var Xa = "https://rpc.walletconnect.com/v1";
async function Tf(e4, t3, r5, i6, n6, o6) {
  switch (r5.t) {
    case "eip191":
      return Uf(e4, t3, r5.s);
    case "eip1271":
      return await kf(e4, t3, r5.s, i6, n6, o6);
    default:
      throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${r5.t}`);
  }
}
function Uf(e4, t3, r5) {
  return Wa(ff(t3), r5).toLowerCase() === e4.toLowerCase();
}
async function kf(e4, t3, r5, i6, n6, o6) {
  try {
    const h7 = "0x1626ba7e", p5 = "0000000000000000000000000000000000000000000000000000000000000040", b5 = "0000000000000000000000000000000000000000000000000000000000000041", m5 = r5.substring(2), w7 = ff(t3).substring(2), y8 = h7 + w7 + p5 + b5 + m5, S5 = await fetch(`${o6 || Xa}/?chainId=${i6}&projectId=${n6}`, { method: "POST", body: JSON.stringify({ id: Za(), jsonrpc: "2.0", method: "eth_call", params: [{ to: e4, data: y8 }, "latest"] }) }), { result: I5 } = await S5.json();
    return I5 ? I5.slice(0, h7.length).toLowerCase() === h7.toLowerCase() : false;
  } catch (h7) {
    return console.error("isValidEip1271Signature: ", h7), false;
  }
}
function Za() {
  return Date.now() + Math.floor(Math.random() * 1e3);
}
var $a = Object.defineProperty;
var tu = Object.defineProperties;
var eu = Object.getOwnPropertyDescriptors;
var qf = Object.getOwnPropertySymbols;
var ru = Object.prototype.hasOwnProperty;
var iu = Object.prototype.propertyIsEnumerable;
var Kf = (e4, t3, r5) => t3 in e4 ? $a(e4, t3, { enumerable: true, configurable: true, writable: true, value: r5 }) : e4[t3] = r5;
var Hi = (e4, t3) => {
  for (var r5 in t3 || (t3 = {})) ru.call(t3, r5) && Kf(e4, r5, t3[r5]);
  if (qf) for (var r5 of qf(t3)) iu.call(t3, r5) && Kf(e4, r5, t3[r5]);
  return e4;
};
var Hf = (e4, t3) => tu(e4, eu(t3));
var nu = "did:pkh:";
var Lr = (e4) => e4 == null ? void 0 : e4.split(":");
var zi = (e4) => {
  const t3 = e4 && Lr(e4);
  if (t3) return e4.includes(nu) ? t3[3] : t3[1];
};
var fu = (e4) => {
  const t3 = e4 && Lr(e4);
  if (t3) return t3[2] + ":" + t3[3];
};
var Li = (e4) => {
  const t3 = e4 && Lr(e4);
  if (t3) return t3.pop();
};
async function ou(e4) {
  const { cacao: t3, projectId: r5 } = e4, { s: i6, p: n6 } = t3, o6 = zf(n6, n6.iss), h7 = Li(n6.iss);
  return await Tf(h7, o6, i6, zi(n6.iss), r5);
}
var zf = (e4, t3) => {
  const r5 = `${e4.domain} wants you to sign in with your Ethereum account:`, i6 = Li(t3);
  if (!e4.aud && !e4.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
  let n6 = e4.statement || void 0;
  const o6 = `URI: ${e4.aud || e4.uri}`, h7 = `Version: ${e4.version}`, p5 = `Chain ID: ${zi(t3)}`, b5 = `Nonce: ${e4.nonce}`, m5 = `Issued At: ${e4.iat}`, w7 = e4.exp ? `Expiration Time: ${e4.exp}` : void 0, y8 = e4.nbf ? `Not Before: ${e4.nbf}` : void 0, S5 = e4.requestId ? `Request ID: ${e4.requestId}` : void 0, I5 = e4.resources ? `Resources:${e4.resources.map((C6) => `
- ${C6}`).join("")}` : void 0, N10 = Qr(e4.resources);
  if (N10) {
    const C6 = Oe(N10);
    n6 = Ji(n6, C6);
  }
  return [r5, i6, "", n6, "", o6, h7, p5, b5, m5, w7, y8, S5, I5].filter((C6) => C6 != null).join(`
`);
};
function Jf(e4) {
  return Buffer.from(JSON.stringify(e4)).toString("base64");
}
function Gf(e4) {
  return JSON.parse(Buffer.from(e4, "base64").toString("utf-8"));
}
function me(e4) {
  if (!e4) throw new Error("No recap provided, value is undefined");
  if (!e4.att) throw new Error("No `att` property found");
  const t3 = Object.keys(e4.att);
  if (!(t3 != null && t3.length)) throw new Error("No resources found in `att` property");
  t3.forEach((r5) => {
    const i6 = e4.att[r5];
    if (Array.isArray(i6)) throw new Error(`Resource must be an object: ${r5}`);
    if (typeof i6 != "object") throw new Error(`Resource must be an object: ${r5}`);
    if (!Object.keys(i6).length) throw new Error(`Resource object is empty: ${r5}`);
    Object.keys(i6).forEach((n6) => {
      const o6 = i6[n6];
      if (!Array.isArray(o6)) throw new Error(`Ability limits ${n6} must be an array of objects, found: ${o6}`);
      if (!o6.length) throw new Error(`Value of ${n6} is empty array, must be an array with objects`);
      o6.forEach((h7) => {
        if (typeof h7 != "object") throw new Error(`Ability limits (${n6}) must be an array of objects, found: ${h7}`);
      });
    });
  });
}
function Yf(e4, t3, r5, i6 = {}) {
  return r5 == null ? void 0 : r5.sort((n6, o6) => n6.localeCompare(o6)), { att: { [e4]: ji(t3, r5, i6) } };
}
function ji(e4, t3, r5 = {}) {
  t3 = t3 == null ? void 0 : t3.sort((n6, o6) => n6.localeCompare(o6));
  const i6 = t3.map((n6) => ({ [`${e4}/${n6}`]: [r5] }));
  return Object.assign({}, ...i6);
}
function jr(e4) {
  return me(e4), `urn:recap:${Jf(e4).replace(/=/g, "")}`;
}
function Oe(e4) {
  const t3 = Gf(e4.replace("urn:recap:", ""));
  return me(t3), t3;
}
function cu(e4, t3, r5) {
  const i6 = Yf(e4, t3, r5);
  return jr(i6);
}
function Qi(e4) {
  return e4 && e4.includes("urn:recap:");
}
function lu(e4, t3) {
  const r5 = Oe(e4), i6 = Oe(t3), n6 = Wf(r5, i6);
  return jr(n6);
}
function Wf(e4, t3) {
  me(e4), me(t3);
  const r5 = Object.keys(e4.att).concat(Object.keys(t3.att)).sort((n6, o6) => n6.localeCompare(o6)), i6 = { att: {} };
  return r5.forEach((n6) => {
    var o6, h7;
    Object.keys(((o6 = e4.att) == null ? void 0 : o6[n6]) || {}).concat(Object.keys(((h7 = t3.att) == null ? void 0 : h7[n6]) || {})).sort((p5, b5) => p5.localeCompare(b5)).forEach((p5) => {
      var b5, m5;
      i6.att[n6] = Hf(Hi({}, i6.att[n6]), { [p5]: ((b5 = e4.att[n6]) == null ? void 0 : b5[p5]) || ((m5 = t3.att[n6]) == null ? void 0 : m5[p5]) });
    });
  }), i6;
}
function Ji(e4 = "", t3) {
  me(t3);
  const r5 = "I further authorize the stated URI to perform the following actions on my behalf: ";
  if (e4.includes(r5)) return e4;
  const i6 = [];
  let n6 = 0;
  Object.keys(t3.att).forEach((p5) => {
    const b5 = Object.keys(t3.att[p5]).map((y8) => ({ ability: y8.split("/")[0], action: y8.split("/")[1] }));
    b5.sort((y8, S5) => y8.action.localeCompare(S5.action));
    const m5 = {};
    b5.forEach((y8) => {
      m5[y8.ability] || (m5[y8.ability] = []), m5[y8.ability].push(y8.action);
    });
    const w7 = Object.keys(m5).map((y8) => (n6++, `(${n6}) '${y8}': '${m5[y8].join("', '")}' for '${p5}'.`));
    i6.push(w7.join(", ").replace(".,", "."));
  });
  const o6 = i6.join(" "), h7 = `${r5}${o6}`;
  return `${e4 ? e4 + " " : ""}${h7}`;
}
function du(e4) {
  var t3;
  const r5 = Oe(e4);
  me(r5);
  const i6 = (t3 = r5.att) == null ? void 0 : t3.eip155;
  return i6 ? Object.keys(i6).map((n6) => n6.split("/")[1]) : [];
}
function pu(e4) {
  const t3 = Oe(e4);
  me(t3);
  const r5 = [];
  return Object.values(t3.att).forEach((i6) => {
    Object.values(i6).forEach((n6) => {
      var o6;
      (o6 = n6 == null ? void 0 : n6[0]) != null && o6.chains && r5.push(n6[0].chains);
    });
  }), [...new Set(r5.flat())];
}
function Qr(e4) {
  if (!e4) return;
  const t3 = e4 == null ? void 0 : e4[e4.length - 1];
  return Qi(t3) ? t3 : void 0;
}
var Gi = "base10";
var zt = "base16";
var Jr = "base64pad";
var Gr = "utf8";
var Yi = 0;
var lr = 1;
var vu = 0;
var Zf = 1;
var Vi = 12;
var Wi = 32;
function mu() {
  const e4 = cn.generateKeyPair();
  return { privateKey: toString2(e4.secretKey, zt), publicKey: toString2(e4.publicKey, zt) };
}
function gu() {
  const e4 = (0, import_random2.randomBytes)(Wi);
  return toString2(e4, zt);
}
function Au(e4, t3) {
  const r5 = cn.sharedKey(fromString2(e4, zt), fromString2(t3, zt), true), i6 = new import_hkdf.HKDF(import_sha256.SHA256, r5).expand(Wi);
  return toString2(i6, zt);
}
function bu(e4) {
  const t3 = (0, import_sha256.hash)(fromString2(e4, zt));
  return toString2(t3, zt);
}
function yu(e4) {
  const t3 = (0, import_sha256.hash)(fromString2(e4, Gr));
  return toString2(t3, zt);
}
function $f(e4) {
  return fromString2(`${e4}`, Gi);
}
function Mr(e4) {
  return Number(toString2(e4, Gi));
}
function wu(e4) {
  const t3 = $f(typeof e4.type < "u" ? e4.type : Yi);
  if (Mr(t3) === lr && typeof e4.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
  const r5 = typeof e4.senderPublicKey < "u" ? fromString2(e4.senderPublicKey, zt) : void 0, i6 = typeof e4.iv < "u" ? fromString2(e4.iv, zt) : (0, import_random2.randomBytes)(Vi), n6 = new import_chacha20poly1305.ChaCha20Poly1305(fromString2(e4.symKey, zt)).seal(i6, fromString2(e4.message, Gr));
  return to({ type: t3, sealed: n6, iv: i6, senderPublicKey: r5 });
}
function xu(e4) {
  const t3 = new import_chacha20poly1305.ChaCha20Poly1305(fromString2(e4.symKey, zt)), { sealed: r5, iv: i6 } = Xi(e4.encoded), n6 = t3.open(i6, r5);
  if (n6 === null) throw new Error("Failed to decrypt");
  return toString2(n6, Gr);
}
function to(e4) {
  if (Mr(e4.type) === lr) {
    if (typeof e4.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
    return toString2(concat([e4.type, e4.senderPublicKey, e4.iv, e4.sealed]), Jr);
  }
  return toString2(concat([e4.type, e4.iv, e4.sealed]), Jr);
}
function Xi(e4) {
  const t3 = fromString2(e4, Jr), r5 = t3.slice(vu, Zf), i6 = Zf;
  if (Mr(r5) === lr) {
    const p5 = i6 + Wi, b5 = p5 + Vi, m5 = t3.slice(i6, p5), w7 = t3.slice(p5, b5), y8 = t3.slice(b5);
    return { type: r5, sealed: y8, iv: w7, senderPublicKey: m5 };
  }
  const n6 = i6 + Vi, o6 = t3.slice(i6, n6), h7 = t3.slice(n6);
  return { type: r5, sealed: h7, iv: o6 };
}
function Mu(e4, t3) {
  const r5 = Xi(e4);
  return eo({ type: Mr(r5.type), senderPublicKey: typeof r5.senderPublicKey < "u" ? toString2(r5.senderPublicKey, zt) : void 0, receiverPublicKey: t3 == null ? void 0 : t3.receiverPublicKey });
}
function eo(e4) {
  const t3 = (e4 == null ? void 0 : e4.type) || Yi;
  if (t3 === lr) {
    if (typeof (e4 == null ? void 0 : e4.senderPublicKey) > "u") throw new Error("missing sender public key");
    if (typeof (e4 == null ? void 0 : e4.receiverPublicKey) > "u") throw new Error("missing receiver public key");
  }
  return { type: t3, senderPublicKey: e4 == null ? void 0 : e4.senderPublicKey, receiverPublicKey: e4 == null ? void 0 : e4.receiverPublicKey };
}
function Eu(e4) {
  return e4.type === lr && typeof e4.senderPublicKey == "string" && typeof e4.receiverPublicKey == "string";
}
var ro = "irn";
function Su(e4) {
  return (e4 == null ? void 0 : e4.relay) || { protocol: ro };
}
function Nu(e4) {
  const t3 = C4[e4];
  if (typeof t3 > "u") throw new Error(`Relay Protocol not supported: ${e4}`);
  return t3;
}
var Iu = Object.defineProperty;
var _u = Object.defineProperties;
var Bu = Object.getOwnPropertyDescriptors;
var io = Object.getOwnPropertySymbols;
var Cu = Object.prototype.hasOwnProperty;
var Ru = Object.prototype.propertyIsEnumerable;
var no = (e4, t3, r5) => t3 in e4 ? Iu(e4, t3, { enumerable: true, configurable: true, writable: true, value: r5 }) : e4[t3] = r5;
var fo = (e4, t3) => {
  for (var r5 in t3 || (t3 = {})) Cu.call(t3, r5) && no(e4, r5, t3[r5]);
  if (io) for (var r5 of io(t3)) Ru.call(t3, r5) && no(e4, r5, t3[r5]);
  return e4;
};
var Ou = (e4, t3) => _u(e4, Bu(t3));
function oo(e4, t3 = "-") {
  const r5 = {}, i6 = "relay" + t3;
  return Object.keys(e4).forEach((n6) => {
    if (n6.startsWith(i6)) {
      const o6 = n6.replace(i6, ""), h7 = e4[n6];
      r5[o6] = h7;
    }
  }), r5;
}
function Pu(e4) {
  e4 = e4.includes("wc://") ? e4.replace("wc://", "") : e4, e4 = e4.includes("wc:") ? e4.replace("wc:", "") : e4;
  const t3 = e4.indexOf(":"), r5 = e4.indexOf("?") !== -1 ? e4.indexOf("?") : void 0, i6 = e4.substring(0, t3), n6 = e4.substring(t3 + 1, r5).split("@"), o6 = typeof r5 < "u" ? e4.substring(r5) : "", h7 = Nr.parse(o6), p5 = typeof h7.methods == "string" ? h7.methods.split(",") : void 0;
  return { protocol: i6, topic: so(n6[0]), version: parseInt(n6[1], 10), symKey: h7.symKey, relay: oo(h7), methods: p5, expiryTimestamp: h7.expiryTimestamp ? parseInt(h7.expiryTimestamp, 10) : void 0 };
}
function so(e4) {
  return e4.startsWith("//") ? e4.substring(2) : e4;
}
function ao(e4, t3 = "-") {
  const r5 = "relay", i6 = {};
  return Object.keys(e4).forEach((n6) => {
    const o6 = r5 + t3 + n6;
    e4[n6] && (i6[o6] = e4[n6]);
  }), i6;
}
function Du(e4) {
  return `${e4.protocol}:${e4.topic}@${e4.version}?` + Nr.stringify(fo(Ou(fo({ symKey: e4.symKey }, ao(e4.relay)), { expiryTimestamp: e4.expiryTimestamp }), e4.methods ? { methods: e4.methods.join(",") } : {}));
}
function $e(e4) {
  const t3 = [];
  return e4.forEach((r5) => {
    const [i6, n6] = r5.split(":");
    t3.push(`${i6}:${n6}`);
  }), t3;
}
function co(e4) {
  const t3 = [];
  return Object.values(e4).forEach((r5) => {
    t3.push(...$e(r5.accounts));
  }), t3;
}
function lo(e4, t3) {
  const r5 = [];
  return Object.values(e4).forEach((i6) => {
    $e(i6.accounts).includes(t3) && r5.push(...i6.methods);
  }), r5;
}
function po(e4, t3) {
  const r5 = [];
  return Object.values(e4).forEach((i6) => {
    $e(i6.accounts).includes(t3) && r5.push(...i6.events);
  }), r5;
}
function mo(e4) {
  const t3 = {};
  return e4 == null ? void 0 : e4.forEach((r5) => {
    const [i6, n6] = r5.split(":");
    t3[i6] || (t3[i6] = { accounts: [], chains: [], events: [] }), t3[i6].accounts.push(r5), t3[i6].chains.push(`${i6}:${n6}`);
  }), t3;
}
function ju(e4, t3) {
  t3 = t3.map((i6) => i6.replace("did:pkh:", ""));
  const r5 = mo(t3);
  for (const [i6, n6] of Object.entries(r5)) n6.methods ? n6.methods = ge(n6.methods, e4) : n6.methods = e4, n6.events = ["chainChanged", "accountsChanged"];
  return r5;
}
var go = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
var Ao = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
function xe(e4, t3) {
  const { message: r5, code: i6 } = Ao[e4];
  return { message: t3 ? `${r5} ${t3}` : r5, code: i6 };
}
function tr(e4, t3) {
  const { message: r5, code: i6 } = go[e4];
  return { message: t3 ? `${r5} ${t3}` : r5, code: i6 };
}
function Er(e4, t3) {
  return Array.isArray(e4) ? typeof t3 < "u" && e4.length ? e4.every(t3) : true : false;
}
function Yr(e4) {
  return Object.getPrototypeOf(e4) === Object.prototype && Object.keys(e4).length;
}
function Pe(e4) {
  return typeof e4 > "u";
}
function Gt(e4, t3) {
  return t3 && Pe(e4) ? true : typeof e4 == "string" && !!e4.trim().length;
}
function Vr(e4, t3) {
  return t3 && Pe(e4) ? true : typeof e4 == "number" && !isNaN(e4);
}
function Qu(e4, t3) {
  const { requiredNamespaces: r5 } = t3, i6 = Object.keys(e4.namespaces), n6 = Object.keys(r5);
  let o6 = true;
  return _e(n6, i6) ? (i6.forEach((h7) => {
    const { accounts: p5, methods: b5, events: m5 } = e4.namespaces[h7], w7 = $e(p5), y8 = r5[h7];
    (!_e(_r(h7, y8), w7) || !_e(y8.methods, b5) || !_e(y8.events, m5)) && (o6 = false);
  }), o6) : false;
}
function Sr(e4) {
  return Gt(e4, false) && e4.includes(":") ? e4.split(":").length === 2 : false;
}
function bo(e4) {
  if (Gt(e4, false) && e4.includes(":")) {
    const t3 = e4.split(":");
    if (t3.length === 3) {
      const r5 = t3[0] + ":" + t3[1];
      return !!t3[2] && Sr(r5);
    }
  }
  return false;
}
function Ju(e4) {
  if (Gt(e4, false)) try {
    return typeof new URL(e4) < "u";
  } catch {
    return false;
  }
  return false;
}
function Gu(e4) {
  var t3;
  return (t3 = e4 == null ? void 0 : e4.proposer) == null ? void 0 : t3.publicKey;
}
function Yu(e4) {
  return e4 == null ? void 0 : e4.topic;
}
function Vu(e4, t3) {
  let r5 = null;
  return Gt(e4 == null ? void 0 : e4.publicKey, false) || (r5 = xe("MISSING_OR_INVALID", `${t3} controller public key should be a string`)), r5;
}
function tn(e4) {
  let t3 = true;
  return Er(e4) ? e4.length && (t3 = e4.every((r5) => Gt(r5, false))) : t3 = false, t3;
}
function yo(e4, t3, r5) {
  let i6 = null;
  return Er(t3) && t3.length ? t3.forEach((n6) => {
    i6 || Sr(n6) || (i6 = tr("UNSUPPORTED_CHAINS", `${r5}, chain ${n6} should be a string and conform to "namespace:chainId" format`));
  }) : Sr(e4) || (i6 = tr("UNSUPPORTED_CHAINS", `${r5}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), i6;
}
function wo(e4, t3, r5) {
  let i6 = null;
  return Object.entries(e4).forEach(([n6, o6]) => {
    if (i6) return;
    const h7 = yo(n6, _r(n6, o6), `${t3} ${r5}`);
    h7 && (i6 = h7);
  }), i6;
}
function xo(e4, t3) {
  let r5 = null;
  return Er(e4) ? e4.forEach((i6) => {
    r5 || bo(i6) || (r5 = tr("UNSUPPORTED_ACCOUNTS", `${t3}, account ${i6} should be a string and conform to "namespace:chainId:address" format`));
  }) : r5 = tr("UNSUPPORTED_ACCOUNTS", `${t3}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), r5;
}
function Mo(e4, t3) {
  let r5 = null;
  return Object.values(e4).forEach((i6) => {
    if (r5) return;
    const n6 = xo(i6 == null ? void 0 : i6.accounts, `${t3} namespace`);
    n6 && (r5 = n6);
  }), r5;
}
function Eo(e4, t3) {
  let r5 = null;
  return tn(e4 == null ? void 0 : e4.methods) ? tn(e4 == null ? void 0 : e4.events) || (r5 = tr("UNSUPPORTED_EVENTS", `${t3}, events should be an array of strings or empty array for no events`)) : r5 = tr("UNSUPPORTED_METHODS", `${t3}, methods should be an array of strings or empty array for no methods`), r5;
}
function en(e4, t3) {
  let r5 = null;
  return Object.values(e4).forEach((i6) => {
    if (r5) return;
    const n6 = Eo(i6, `${t3}, namespace`);
    n6 && (r5 = n6);
  }), r5;
}
function Wu(e4, t3, r5) {
  let i6 = null;
  if (e4 && Yr(e4)) {
    const n6 = en(e4, t3);
    n6 && (i6 = n6);
    const o6 = wo(e4, t3, r5);
    o6 && (i6 = o6);
  } else i6 = xe("MISSING_OR_INVALID", `${t3}, ${r5} should be an object with data`);
  return i6;
}
function So(e4, t3) {
  let r5 = null;
  if (e4 && Yr(e4)) {
    const i6 = en(e4, t3);
    i6 && (r5 = i6);
    const n6 = Mo(e4, t3);
    n6 && (r5 = n6);
  } else r5 = xe("MISSING_OR_INVALID", `${t3}, namespaces should be an object with data`);
  return r5;
}
function No(e4) {
  return Gt(e4.protocol, true);
}
function Xu(e4, t3) {
  let r5 = false;
  return t3 && !e4 ? r5 = true : e4 && Er(e4) && e4.length && e4.forEach((i6) => {
    r5 = No(i6);
  }), r5;
}
function Zu(e4) {
  return typeof e4 == "number";
}
function $u(e4) {
  return typeof e4 < "u" && typeof e4 !== null;
}
function th(e4) {
  return !(!e4 || typeof e4 != "object" || !e4.code || !Vr(e4.code, false) || !e4.message || !Gt(e4.message, false));
}
function eh(e4) {
  return !(Pe(e4) || !Gt(e4.method, false));
}
function rh(e4) {
  return !(Pe(e4) || Pe(e4.result) && Pe(e4.error) || !Vr(e4.id, false) || !Gt(e4.jsonrpc, false));
}
function ih(e4) {
  return !(Pe(e4) || !Gt(e4.name, false));
}
function nh(e4, t3) {
  return !(!Sr(t3) || !co(e4).includes(t3));
}
function fh(e4, t3, r5) {
  return Gt(r5, false) ? lo(e4, t3).includes(r5) : false;
}
function oh(e4, t3, r5) {
  return Gt(r5, false) ? po(e4, t3).includes(r5) : false;
}
function Io(e4, t3, r5) {
  let i6 = null;
  const n6 = sh(e4), o6 = ah(t3), h7 = Object.keys(n6), p5 = Object.keys(o6), b5 = _o(Object.keys(e4)), m5 = _o(Object.keys(t3)), w7 = b5.filter((y8) => !m5.includes(y8));
  return w7.length && (i6 = xe("NON_CONFORMING_NAMESPACES", `${r5} namespaces keys don't satisfy requiredNamespaces.
      Required: ${w7.toString()}
      Received: ${Object.keys(t3).toString()}`)), _e(h7, p5) || (i6 = xe("NON_CONFORMING_NAMESPACES", `${r5} namespaces chains don't satisfy required namespaces.
      Required: ${h7.toString()}
      Approved: ${p5.toString()}`)), Object.keys(t3).forEach((y8) => {
    if (!y8.includes(":") || i6) return;
    const S5 = $e(t3[y8].accounts);
    S5.includes(y8) || (i6 = xe("NON_CONFORMING_NAMESPACES", `${r5} namespaces accounts don't satisfy namespace accounts for ${y8}
        Required: ${y8}
        Approved: ${S5.toString()}`));
  }), h7.forEach((y8) => {
    i6 || (_e(n6[y8].methods, o6[y8].methods) ? _e(n6[y8].events, o6[y8].events) || (i6 = xe("NON_CONFORMING_NAMESPACES", `${r5} namespaces events don't satisfy namespace events for ${y8}`)) : i6 = xe("NON_CONFORMING_NAMESPACES", `${r5} namespaces methods don't satisfy namespace methods for ${y8}`));
  }), i6;
}
function sh(e4) {
  const t3 = {};
  return Object.keys(e4).forEach((r5) => {
    var i6;
    r5.includes(":") ? t3[r5] = e4[r5] : (i6 = e4[r5].chains) == null || i6.forEach((n6) => {
      t3[n6] = { methods: e4[r5].methods, events: e4[r5].events };
    });
  }), t3;
}
function _o(e4) {
  return [...new Set(e4.map((t3) => t3.includes(":") ? t3.split(":")[0] : t3))];
}
function ah(e4) {
  const t3 = {};
  return Object.keys(e4).forEach((r5) => {
    if (r5.includes(":")) t3[r5] = e4[r5];
    else {
      const i6 = $e(e4[r5].accounts);
      i6 == null ? void 0 : i6.forEach((n6) => {
        t3[n6] = { accounts: e4[r5].accounts.filter((o6) => o6.includes(`${n6}:`)), methods: e4[r5].methods, events: e4[r5].events };
      });
    }
  }), t3;
}
function uh(e4, t3) {
  return Vr(e4, false) && e4 <= t3.max && e4 >= t3.min;
}
function hh() {
  const e4 = We();
  return new Promise((t3) => {
    switch (e4) {
      case qt.browser:
        t3(Bo());
        break;
      case qt.reactNative:
        t3(Co());
        break;
      case qt.node:
        t3(Ro());
        break;
      default:
        t3(true);
    }
  });
}
function Bo() {
  return pr() && (navigator == null ? void 0 : navigator.onLine);
}
async function Co() {
  if (er() && typeof global < "u" && global != null && global.NetInfo) {
    const e4 = await (global == null ? void 0 : global.NetInfo.fetch());
    return e4 == null ? void 0 : e4.isConnected;
  }
  return true;
}
function Ro() {
  return true;
}
function ch(e4) {
  switch (We()) {
    case qt.browser:
      Oo(e4);
      break;
    case qt.reactNative:
      Po(e4);
      break;
    case qt.node:
      break;
  }
}
function Oo(e4) {
  !er() && pr() && (window.addEventListener("online", () => e4(true)), window.addEventListener("offline", () => e4(false)));
}
function Po(e4) {
  er() && typeof global < "u" && global != null && global.NetInfo && (global == null ? void 0 : global.NetInfo.addEventListener((t3) => e4(t3 == null ? void 0 : t3.isConnected)));
}
var rn = {};
var lh = class {
  static get(t3) {
    return rn[t3];
  }
  static set(t3, r5) {
    rn[t3] = r5;
  }
  static delete(t3) {
    delete rn[t3];
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
var import_time4 = __toESM(require_cjs4());

// node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js
var import_events5 = __toESM(require_events());

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
var esm_exports3 = {};
__export(esm_exports3, {
  DEFAULT_ERROR: () => DEFAULT_ERROR,
  IBaseJsonRpcProvider: () => n5,
  IEvents: () => e3,
  IJsonRpcConnection: () => o4,
  IJsonRpcProvider: () => r4,
  INTERNAL_ERROR: () => INTERNAL_ERROR,
  INVALID_PARAMS: () => INVALID_PARAMS,
  INVALID_REQUEST: () => INVALID_REQUEST,
  METHOD_NOT_FOUND: () => METHOD_NOT_FOUND,
  PARSE_ERROR: () => PARSE_ERROR,
  RESERVED_ERROR_CODES: () => RESERVED_ERROR_CODES,
  SERVER_ERROR: () => SERVER_ERROR,
  SERVER_ERROR_CODE_RANGE: () => SERVER_ERROR_CODE_RANGE,
  STANDARD_ERROR_MAP: () => STANDARD_ERROR_MAP,
  formatErrorMessage: () => formatErrorMessage,
  formatJsonRpcError: () => formatJsonRpcError,
  formatJsonRpcRequest: () => formatJsonRpcRequest,
  formatJsonRpcResult: () => formatJsonRpcResult,
  getBigIntRpcId: () => getBigIntRpcId,
  getError: () => getError,
  getErrorByCode: () => getErrorByCode,
  isHttpUrl: () => isHttpUrl,
  isJsonRpcError: () => isJsonRpcError,
  isJsonRpcPayload: () => isJsonRpcPayload,
  isJsonRpcRequest: () => isJsonRpcRequest,
  isJsonRpcResponse: () => isJsonRpcResponse,
  isJsonRpcResult: () => isJsonRpcResult,
  isJsonRpcValidationInvalid: () => isJsonRpcValidationInvalid,
  isLocalhostUrl: () => isLocalhostUrl,
  isNodeJs: () => isNodeJs,
  isReservedErrorCode: () => isReservedErrorCode,
  isServerErrorCode: () => isServerErrorCode,
  isValidDefaultRoute: () => isValidDefaultRoute,
  isValidErrorCode: () => isValidErrorCode,
  isValidLeadingWildcardRoute: () => isValidLeadingWildcardRoute,
  isValidRoute: () => isValidRoute,
  isValidTrailingWildcardRoute: () => isValidTrailingWildcardRoute,
  isValidWildcardRoute: () => isValidWildcardRoute,
  isWsUrl: () => isWsUrl,
  parseConnectionError: () => parseConnectionError,
  payloadId: () => payloadId,
  validateJsonRpcError: () => validateJsonRpcError
});

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js
var PARSE_ERROR = "PARSE_ERROR";
var INVALID_REQUEST = "INVALID_REQUEST";
var METHOD_NOT_FOUND = "METHOD_NOT_FOUND";
var INVALID_PARAMS = "INVALID_PARAMS";
var INTERNAL_ERROR = "INTERNAL_ERROR";
var SERVER_ERROR = "SERVER_ERROR";
var RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];
var SERVER_ERROR_CODE_RANGE = [-32e3, -32099];
var STANDARD_ERROR_MAP = {
  [PARSE_ERROR]: { code: -32700, message: "Parse error" },
  [INVALID_REQUEST]: { code: -32600, message: "Invalid Request" },
  [METHOD_NOT_FOUND]: { code: -32601, message: "Method not found" },
  [INVALID_PARAMS]: { code: -32602, message: "Invalid params" },
  [INTERNAL_ERROR]: { code: -32603, message: "Internal error" },
  [SERVER_ERROR]: { code: -32e3, message: "Server error" }
};
var DEFAULT_ERROR = SERVER_ERROR;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js
function isServerErrorCode(code2) {
  return code2 <= SERVER_ERROR_CODE_RANGE[0] && code2 >= SERVER_ERROR_CODE_RANGE[1];
}
function isReservedErrorCode(code2) {
  return RESERVED_ERROR_CODES.includes(code2);
}
function isValidErrorCode(code2) {
  return typeof code2 === "number";
}
function getError(type) {
  if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return STANDARD_ERROR_MAP[type];
}
function getErrorByCode(code2) {
  const match = Object.values(STANDARD_ERROR_MAP).find((e4) => e4.code === code2);
  if (!match) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return match;
}
function validateJsonRpcError(response) {
  if (typeof response.error.code === "undefined") {
    return { valid: false, error: "Missing code for JSON-RPC error" };
  }
  if (typeof response.error.message === "undefined") {
    return { valid: false, error: "Missing message for JSON-RPC error" };
  }
  if (!isValidErrorCode(response.error.code)) {
    return {
      valid: false,
      error: `Invalid error code type for JSON-RPC: ${response.error.code}`
    };
  }
  if (isReservedErrorCode(response.error.code)) {
    const error = getErrorByCode(response.error.code);
    if (error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message && response.error.message === error.message) {
      return {
        valid: false,
        error: `Invalid error code message for JSON-RPC: ${response.error.code}`
      };
    }
  }
  return { valid: true };
}
function parseConnectionError(e4, url, type) {
  return e4.message.includes("getaddrinfo ENOTFOUND") || e4.message.includes("connect ECONNREFUSED") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e4;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js
var env_exports = {};
__export(env_exports, {
  isNodeJs: () => isNodeJs
});
var import_environment = __toESM(require_cjs7());
__reExport(env_exports, __toESM(require_cjs7()));
var isNodeJs = import_environment.isNode;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
__reExport(esm_exports3, env_exports);

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js
function payloadId(entropy = 3) {
  const date = Date.now() * Math.pow(10, entropy);
  const extra = Math.floor(Math.random() * Math.pow(10, entropy));
  return date + extra;
}
function getBigIntRpcId(entropy = 6) {
  return BigInt(payloadId(entropy));
}
function formatJsonRpcRequest(method, params, id) {
  return {
    id: id || payloadId(),
    jsonrpc: "2.0",
    method,
    params
  };
}
function formatJsonRpcResult(id, result) {
  return {
    id,
    jsonrpc: "2.0",
    result
  };
}
function formatJsonRpcError(id, error, data) {
  return {
    id,
    jsonrpc: "2.0",
    error: formatErrorMessage(error, data)
  };
}
function formatErrorMessage(error, data) {
  if (typeof error === "undefined") {
    return getError(INTERNAL_ERROR);
  }
  if (typeof error === "string") {
    error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), { message: error });
  }
  if (typeof data !== "undefined") {
    error.data = data;
  }
  if (isReservedErrorCode(error.code)) {
    error = getErrorByCode(error.code);
  }
  return error;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js
function isValidRoute(route) {
  if (route.includes("*")) {
    return isValidWildcardRoute(route);
  }
  if (/\W/g.test(route)) {
    return false;
  }
  return true;
}
function isValidDefaultRoute(route) {
  return route === "*";
}
function isValidWildcardRoute(route) {
  if (isValidDefaultRoute(route)) {
    return true;
  }
  if (!route.includes("*")) {
    return false;
  }
  if (route.split("*").length !== 2) {
    return false;
  }
  if (route.split("*").filter((x5) => x5.trim() === "").length !== 1) {
    return false;
  }
  return true;
}
function isValidLeadingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[0].trim();
}
function isValidTrailingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[1].trim();
}

// node_modules/@walletconnect/jsonrpc-types/dist/index.es.js
var e3 = class {
};
var o4 = class extends e3 {
  constructor(c7) {
    super();
  }
};
var n5 = class extends e3 {
  constructor() {
    super();
  }
};
var r4 = class extends n5 {
  constructor(c7) {
    super();
  }
};

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js
var HTTP_REGEX = "^https?:";
var WS_REGEX = "^wss?:";
function getUrlProtocol(url) {
  const matches = url.match(new RegExp(/^\w+:/, "gi"));
  if (!matches || !matches.length)
    return;
  return matches[0];
}
function matchRegexProtocol(url, regex) {
  const protocol = getUrlProtocol(url);
  if (typeof protocol === "undefined")
    return false;
  return new RegExp(regex).test(protocol);
}
function isHttpUrl(url) {
  return matchRegexProtocol(url, HTTP_REGEX);
}
function isWsUrl(url) {
  return matchRegexProtocol(url, WS_REGEX);
}
function isLocalhostUrl(url) {
  return new RegExp("wss?://localhost(:d{2,5})?").test(url);
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js
function isJsonRpcPayload(payload) {
  return typeof payload === "object" && "id" in payload && "jsonrpc" in payload && payload.jsonrpc === "2.0";
}
function isJsonRpcRequest(payload) {
  return isJsonRpcPayload(payload) && "method" in payload;
}
function isJsonRpcResponse(payload) {
  return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));
}
function isJsonRpcResult(payload) {
  return "result" in payload;
}
function isJsonRpcError(payload) {
  return "error" in payload;
}
function isJsonRpcValidationInvalid(validation) {
  return "error" in validation && validation.valid === false;
}

// node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js
var o5 = class extends r4 {
  constructor(t3) {
    super(t3), this.events = new import_events5.EventEmitter(), this.hasRegisteredEventListeners = false, this.connection = this.setConnection(t3), this.connection.connected && this.registerEventListeners();
  }
  async connect(t3 = this.connection) {
    await this.open(t3);
  }
  async disconnect() {
    await this.close();
  }
  on(t3, e4) {
    this.events.on(t3, e4);
  }
  once(t3, e4) {
    this.events.once(t3, e4);
  }
  off(t3, e4) {
    this.events.off(t3, e4);
  }
  removeListener(t3, e4) {
    this.events.removeListener(t3, e4);
  }
  async request(t3, e4) {
    return this.requestStrict(formatJsonRpcRequest(t3.method, t3.params || [], t3.id || getBigIntRpcId().toString()), e4);
  }
  async requestStrict(t3, e4) {
    return new Promise(async (i6, s5) => {
      if (!this.connection.connected) try {
        await this.open();
      } catch (n6) {
        s5(n6);
      }
      this.events.on(`${t3.id}`, (n6) => {
        isJsonRpcError(n6) ? s5(n6.error) : i6(n6.result);
      });
      try {
        await this.connection.send(t3, e4);
      } catch (n6) {
        s5(n6);
      }
    });
  }
  setConnection(t3 = this.connection) {
    return t3;
  }
  onPayload(t3) {
    this.events.emit("payload", t3), isJsonRpcResponse(t3) ? this.events.emit(`${t3.id}`, t3) : this.events.emit("message", { type: t3.method, data: t3.params });
  }
  onClose(t3) {
    t3 && t3.code === 3e3 && this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${t3.code} ${t3.reason ? `(${t3.reason})` : ""}`)), this.events.emit("disconnect");
  }
  async open(t3 = this.connection) {
    this.connection === t3 && this.connection.connected || (this.connection.connected && this.close(), typeof t3 == "string" && (await this.connection.open(t3), t3 = this.connection), this.connection = this.setConnection(t3), await this.connection.open(), this.registerEventListeners(), this.events.emit("connect"));
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    this.hasRegisteredEventListeners || (this.connection.on("payload", (t3) => this.onPayload(t3)), this.connection.on("close", (t3) => this.onClose(t3)), this.connection.on("error", (t3) => this.events.emit("error", t3)), this.connection.on("register_error", (t3) => this.onClose()), this.hasRegisteredEventListeners = true);
  }
};

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js
var import_events6 = __toESM(require_events());
var w6 = () => typeof WebSocket < "u" ? WebSocket : typeof global < "u" && typeof global.WebSocket < "u" ? global.WebSocket : typeof window < "u" && typeof window.WebSocket < "u" ? window.WebSocket : typeof self < "u" && typeof self.WebSocket < "u" ? self.WebSocket : require_browser4();
var b4 = () => typeof WebSocket < "u" || typeof global < "u" && typeof global.WebSocket < "u" || typeof window < "u" && typeof window.WebSocket < "u" || typeof self < "u" && typeof self.WebSocket < "u";
var a5 = (c7) => c7.split("?")[0];
var h6 = 10;
var S3 = w6();
var f4 = class {
  constructor(e4) {
    if (this.url = e4, this.events = new import_events6.EventEmitter(), this.registering = false, !isWsUrl(e4)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e4}`);
    this.url = e4;
  }
  get connected() {
    return typeof this.socket < "u";
  }
  get connecting() {
    return this.registering;
  }
  on(e4, t3) {
    this.events.on(e4, t3);
  }
  once(e4, t3) {
    this.events.once(e4, t3);
  }
  off(e4, t3) {
    this.events.off(e4, t3);
  }
  removeListener(e4, t3) {
    this.events.removeListener(e4, t3);
  }
  async open(e4 = this.url) {
    await this.register(e4);
  }
  async close() {
    return new Promise((e4, t3) => {
      if (typeof this.socket > "u") {
        t3(new Error("Connection already closed"));
        return;
      }
      this.socket.onclose = (n6) => {
        this.onClose(n6), e4();
      }, this.socket.close();
    });
  }
  async send(e4) {
    typeof this.socket > "u" && (this.socket = await this.register());
    try {
      this.socket.send(safeJsonStringify3(e4));
    } catch (t3) {
      this.onError(e4.id, t3);
    }
  }
  register(e4 = this.url) {
    if (!isWsUrl(e4)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e4}`);
    if (this.registering) {
      const t3 = this.events.getMaxListeners();
      return (this.events.listenerCount("register_error") >= t3 || this.events.listenerCount("open") >= t3) && this.events.setMaxListeners(t3 + 1), new Promise((n6, o6) => {
        this.events.once("register_error", (s5) => {
          this.resetMaxListeners(), o6(s5);
        }), this.events.once("open", () => {
          if (this.resetMaxListeners(), typeof this.socket > "u") return o6(new Error("WebSocket connection is missing or invalid"));
          n6(this.socket);
        });
      });
    }
    return this.url = e4, this.registering = true, new Promise((t3, n6) => {
      const o6 = new URLSearchParams(e4).get("origin"), s5 = (0, esm_exports3.isReactNative)() ? { headers: { origin: o6 } } : { rejectUnauthorized: !isLocalhostUrl(e4) }, i6 = new S3(e4, [], s5);
      b4() ? i6.onerror = (r5) => {
        const l6 = r5;
        n6(this.emitError(l6.error));
      } : i6.on("error", (r5) => {
        n6(this.emitError(r5));
      }), i6.onopen = () => {
        this.onOpen(i6), t3(i6);
      };
    });
  }
  onOpen(e4) {
    e4.onmessage = (t3) => this.onPayload(t3), e4.onclose = (t3) => this.onClose(t3), this.socket = e4, this.registering = false, this.events.emit("open");
  }
  onClose(e4) {
    this.socket = void 0, this.registering = false, this.events.emit("close", e4);
  }
  onPayload(e4) {
    if (typeof e4.data > "u") return;
    const t3 = typeof e4.data == "string" ? safeJsonParse3(e4.data) : e4.data;
    this.events.emit("payload", t3);
  }
  onError(e4, t3) {
    const n6 = this.parseError(t3), o6 = n6.message || n6.toString(), s5 = formatJsonRpcError(e4, o6);
    this.events.emit("payload", s5);
  }
  parseError(e4, t3 = this.url) {
    return parseConnectionError(e4, a5(t3), "WS");
  }
  resetMaxListeners() {
    this.events.getMaxListeners() > h6 && this.events.setMaxListeners(h6);
  }
  emitError(e4) {
    const t3 = this.parseError(new Error((e4 == null ? void 0 : e4.message) || `WebSocket connection failed for host: ${a5(this.url)}`));
    return this.events.emit("register_error", t3), t3;
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
var import_lodash = __toESM(require_lodash());
var import_isomorphic_unfetch = __toESM(require_browser5());
function Hi2(n6, e4) {
  if (n6.length >= 255) throw new TypeError("Alphabet too long");
  for (var t3 = new Uint8Array(256), i6 = 0; i6 < t3.length; i6++) t3[i6] = 255;
  for (var s5 = 0; s5 < n6.length; s5++) {
    var r5 = n6.charAt(s5), o6 = r5.charCodeAt(0);
    if (t3[o6] !== 255) throw new TypeError(r5 + " is ambiguous");
    t3[o6] = s5;
  }
  var a6 = n6.length, h7 = n6.charAt(0), l6 = Math.log(a6) / Math.log(256), d5 = Math.log(256) / Math.log(a6);
  function g5(u5) {
    if (u5 instanceof Uint8Array || (ArrayBuffer.isView(u5) ? u5 = new Uint8Array(u5.buffer, u5.byteOffset, u5.byteLength) : Array.isArray(u5) && (u5 = Uint8Array.from(u5))), !(u5 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (u5.length === 0) return "";
    for (var p5 = 0, T5 = 0, D5 = 0, P3 = u5.length; D5 !== P3 && u5[D5] === 0; ) D5++, p5++;
    for (var x5 = (P3 - D5) * d5 + 1 >>> 0, w7 = new Uint8Array(x5); D5 !== P3; ) {
      for (var O4 = u5[D5], N10 = 0, _6 = x5 - 1; (O4 !== 0 || N10 < T5) && _6 !== -1; _6--, N10++) O4 += 256 * w7[_6] >>> 0, w7[_6] = O4 % a6 >>> 0, O4 = O4 / a6 >>> 0;
      if (O4 !== 0) throw new Error("Non-zero carry");
      T5 = N10, D5++;
    }
    for (var A5 = x5 - T5; A5 !== x5 && w7[A5] === 0; ) A5++;
    for (var G2 = h7.repeat(p5); A5 < x5; ++A5) G2 += n6.charAt(w7[A5]);
    return G2;
  }
  function m5(u5) {
    if (typeof u5 != "string") throw new TypeError("Expected String");
    if (u5.length === 0) return new Uint8Array();
    var p5 = 0;
    if (u5[p5] !== " ") {
      for (var T5 = 0, D5 = 0; u5[p5] === h7; ) T5++, p5++;
      for (var P3 = (u5.length - p5) * l6 + 1 >>> 0, x5 = new Uint8Array(P3); u5[p5]; ) {
        var w7 = t3[u5.charCodeAt(p5)];
        if (w7 === 255) return;
        for (var O4 = 0, N10 = P3 - 1; (w7 !== 0 || O4 < D5) && N10 !== -1; N10--, O4++) w7 += a6 * x5[N10] >>> 0, x5[N10] = w7 % 256 >>> 0, w7 = w7 / 256 >>> 0;
        if (w7 !== 0) throw new Error("Non-zero carry");
        D5 = O4, p5++;
      }
      if (u5[p5] !== " ") {
        for (var _6 = P3 - D5; _6 !== P3 && x5[_6] === 0; ) _6++;
        for (var A5 = new Uint8Array(T5 + (P3 - _6)), G2 = T5; _6 !== P3; ) A5[G2++] = x5[_6++];
        return A5;
      }
    }
  }
  function L6(u5) {
    var p5 = m5(u5);
    if (p5) return p5;
    throw new Error(`Non-${e4} character`);
  }
  return { encode: g5, decodeUnsafe: m5, decode: L6 };
}
var Yi2 = Hi2;
var Ji2 = Yi2;
var Ne = (n6) => {
  if (n6 instanceof Uint8Array && n6.constructor.name === "Uint8Array") return n6;
  if (n6 instanceof ArrayBuffer) return new Uint8Array(n6);
  if (ArrayBuffer.isView(n6)) return new Uint8Array(n6.buffer, n6.byteOffset, n6.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Xi2 = (n6) => new TextEncoder().encode(n6);
var Wi2 = (n6) => new TextDecoder().decode(n6);
var Qi2 = class {
  constructor(e4, t3, i6) {
    this.name = e4, this.prefix = t3, this.baseEncode = i6;
  }
  encode(e4) {
    if (e4 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e4)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Zi = class {
  constructor(e4, t3, i6) {
    if (this.name = e4, this.prefix = t3, t3.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = t3.codePointAt(0), this.baseDecode = i6;
  }
  decode(e4) {
    if (typeof e4 == "string") {
      if (e4.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e4)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e4.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e4) {
    return Le(this, e4);
  }
};
var es2 = class {
  constructor(e4) {
    this.decoders = e4;
  }
  or(e4) {
    return Le(this, e4);
  }
  decode(e4) {
    const t3 = e4[0], i6 = this.decoders[t3];
    if (i6) return i6.decode(e4);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e4)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var Le = (n6, e4) => new es2({ ...n6.decoders || { [n6.prefix]: n6 }, ...e4.decoders || { [e4.prefix]: e4 } });
var ts2 = class {
  constructor(e4, t3, i6, s5) {
    this.name = e4, this.prefix = t3, this.baseEncode = i6, this.baseDecode = s5, this.encoder = new Qi2(e4, t3, i6), this.decoder = new Zi(e4, t3, s5);
  }
  encode(e4) {
    return this.encoder.encode(e4);
  }
  decode(e4) {
    return this.decoder.decode(e4);
  }
};
var W2 = ({ name: n6, prefix: e4, encode: t3, decode: i6 }) => new ts2(n6, e4, t3, i6);
var K4 = ({ prefix: n6, name: e4, alphabet: t3 }) => {
  const { encode: i6, decode: s5 } = Ji2(t3, e4);
  return W2({ prefix: n6, name: e4, encode: i6, decode: (r5) => Ne(s5(r5)) });
};
var is2 = (n6, e4, t3, i6) => {
  const s5 = {};
  for (let d5 = 0; d5 < e4.length; ++d5) s5[e4[d5]] = d5;
  let r5 = n6.length;
  for (; n6[r5 - 1] === "="; ) --r5;
  const o6 = new Uint8Array(r5 * t3 / 8 | 0);
  let a6 = 0, h7 = 0, l6 = 0;
  for (let d5 = 0; d5 < r5; ++d5) {
    const g5 = s5[n6[d5]];
    if (g5 === void 0) throw new SyntaxError(`Non-${i6} character`);
    h7 = h7 << t3 | g5, a6 += t3, a6 >= 8 && (a6 -= 8, o6[l6++] = 255 & h7 >> a6);
  }
  if (a6 >= t3 || 255 & h7 << 8 - a6) throw new SyntaxError("Unexpected end of data");
  return o6;
};
var ss2 = (n6, e4, t3) => {
  const i6 = e4[e4.length - 1] === "=", s5 = (1 << t3) - 1;
  let r5 = "", o6 = 0, a6 = 0;
  for (let h7 = 0; h7 < n6.length; ++h7) for (a6 = a6 << 8 | n6[h7], o6 += 8; o6 > t3; ) o6 -= t3, r5 += e4[s5 & a6 >> o6];
  if (o6 && (r5 += e4[s5 & a6 << t3 - o6]), i6) for (; r5.length * t3 & 7; ) r5 += "=";
  return r5;
};
var y7 = ({ name: n6, prefix: e4, bitsPerChar: t3, alphabet: i6 }) => W2({ prefix: e4, name: n6, encode(s5) {
  return ss2(s5, i6, t3);
}, decode(s5) {
  return is2(s5, i6, t3, n6);
} });
var rs2 = W2({ prefix: "\0", name: "identity", encode: (n6) => Wi2(n6), decode: (n6) => Xi2(n6) });
var ns2 = Object.freeze({ __proto__: null, identity: rs2 });
var os2 = y7({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var as2 = Object.freeze({ __proto__: null, base2: os2 });
var hs2 = y7({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var cs2 = Object.freeze({ __proto__: null, base8: hs2 });
var ls2 = K4({ prefix: "9", name: "base10", alphabet: "0123456789" });
var us2 = Object.freeze({ __proto__: null, base10: ls2 });
var ds2 = y7({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var gs2 = y7({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var ps2 = Object.freeze({ __proto__: null, base16: ds2, base16upper: gs2 });
var Ds2 = y7({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var ys2 = y7({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var ms2 = y7({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var bs2 = y7({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var fs2 = y7({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var Es2 = y7({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var ws2 = y7({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var vs2 = y7({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var Is2 = y7({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var Cs2 = Object.freeze({ __proto__: null, base32: Ds2, base32upper: ys2, base32pad: ms2, base32padupper: bs2, base32hex: fs2, base32hexupper: Es2, base32hexpad: ws2, base32hexpadupper: vs2, base32z: Is2 });
var Ts2 = K4({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var _s2 = K4({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var Rs2 = Object.freeze({ __proto__: null, base36: Ts2, base36upper: _s2 });
var Ss2 = K4({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Ps2 = K4({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var xs2 = Object.freeze({ __proto__: null, base58btc: Ss2, base58flickr: Ps2 });
var Os2 = y7({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var As2 = y7({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var zs2 = y7({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var Ns2 = y7({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Ls2 = Object.freeze({ __proto__: null, base64: Os2, base64pad: As2, base64url: zs2, base64urlpad: Ns2 });
var Ue = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var Us2 = Ue.reduce((n6, e4, t3) => (n6[t3] = e4, n6), []);
var Fs2 = Ue.reduce((n6, e4, t3) => (n6[e4.codePointAt(0)] = t3, n6), []);
function $s2(n6) {
  return n6.reduce((e4, t3) => (e4 += Us2[t3], e4), "");
}
function Ms2(n6) {
  const e4 = [];
  for (const t3 of n6) {
    const i6 = Fs2[t3.codePointAt(0)];
    if (i6 === void 0) throw new Error(`Non-base256emoji character: ${t3}`);
    e4.push(i6);
  }
  return new Uint8Array(e4);
}
var Bs2 = W2({ prefix: "🚀", name: "base256emoji", encode: $s2, decode: Ms2 });
var ks2 = Object.freeze({ __proto__: null, base256emoji: Bs2 });
var Ks2 = $e2;
var Fe = 128;
var qs2 = 127;
var Vs2 = ~qs2;
var js2 = Math.pow(2, 31);
function $e2(n6, e4, t3) {
  e4 = e4 || [], t3 = t3 || 0;
  for (var i6 = t3; n6 >= js2; ) e4[t3++] = n6 & 255 | Fe, n6 /= 128;
  for (; n6 & Vs2; ) e4[t3++] = n6 & 255 | Fe, n6 >>>= 7;
  return e4[t3] = n6 | 0, $e2.bytes = t3 - i6 + 1, e4;
}
var Gs2 = ue2;
var Hs2 = 128;
var Me = 127;
function ue2(n6, i6) {
  var t3 = 0, i6 = i6 || 0, s5 = 0, r5 = i6, o6, a6 = n6.length;
  do {
    if (r5 >= a6) throw ue2.bytes = 0, new RangeError("Could not decode varint");
    o6 = n6[r5++], t3 += s5 < 28 ? (o6 & Me) << s5 : (o6 & Me) * Math.pow(2, s5), s5 += 7;
  } while (o6 >= Hs2);
  return ue2.bytes = r5 - i6, t3;
}
var Ys2 = Math.pow(2, 7);
var Js2 = Math.pow(2, 14);
var Xs2 = Math.pow(2, 21);
var Ws2 = Math.pow(2, 28);
var Qs2 = Math.pow(2, 35);
var Zs2 = Math.pow(2, 42);
var er2 = Math.pow(2, 49);
var tr2 = Math.pow(2, 56);
var ir2 = Math.pow(2, 63);
var sr2 = function(n6) {
  return n6 < Ys2 ? 1 : n6 < Js2 ? 2 : n6 < Xs2 ? 3 : n6 < Ws2 ? 4 : n6 < Qs2 ? 5 : n6 < Zs2 ? 6 : n6 < er2 ? 7 : n6 < tr2 ? 8 : n6 < ir2 ? 9 : 10;
};
var rr2 = { encode: Ks2, decode: Gs2, encodingLength: sr2 };
var Be2 = rr2;
var ke = (n6, e4, t3 = 0) => (Be2.encode(n6, e4, t3), e4);
var Ke = (n6) => Be2.encodingLength(n6);
var de2 = (n6, e4) => {
  const t3 = e4.byteLength, i6 = Ke(n6), s5 = i6 + Ke(t3), r5 = new Uint8Array(s5 + t3);
  return ke(n6, r5, 0), ke(t3, r5, i6), r5.set(e4, s5), new nr2(n6, t3, e4, r5);
};
var nr2 = class {
  constructor(e4, t3, i6, s5) {
    this.code = e4, this.size = t3, this.digest = i6, this.bytes = s5;
  }
};
var qe = ({ name: n6, code: e4, encode: t3 }) => new or3(n6, e4, t3);
var or3 = class {
  constructor(e4, t3, i6) {
    this.name = e4, this.code = t3, this.encode = i6;
  }
  digest(e4) {
    if (e4 instanceof Uint8Array) {
      const t3 = this.encode(e4);
      return t3 instanceof Uint8Array ? de2(this.code, t3) : t3.then((i6) => de2(this.code, i6));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Ve = (n6) => async (e4) => new Uint8Array(await crypto.subtle.digest(n6, e4));
var ar2 = qe({ name: "sha2-256", code: 18, encode: Ve("SHA-256") });
var hr2 = qe({ name: "sha2-512", code: 19, encode: Ve("SHA-512") });
var cr2 = Object.freeze({ __proto__: null, sha256: ar2, sha512: hr2 });
var je = 0;
var lr2 = "identity";
var Ge = Ne;
var ur2 = (n6) => de2(je, Ge(n6));
var dr2 = { code: je, name: lr2, encode: Ge, digest: ur2 };
var gr2 = Object.freeze({ __proto__: null, identity: dr2 });
new TextEncoder(), new TextDecoder();
var He = { ...ns2, ...as2, ...cs2, ...us2, ...ps2, ...Cs2, ...Rs2, ...xs2, ...Ls2, ...ks2 };
({ ...cr2, ...gr2 });
function pr2(n6 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(n6) : new Uint8Array(n6);
}
function Ye(n6, e4, t3, i6) {
  return { name: n6, prefix: e4, encoder: { name: n6, prefix: e4, encode: t3 }, decoder: { decode: i6 } };
}
var Je = Ye("utf8", "u", (n6) => "u" + new TextDecoder("utf8").decode(n6), (n6) => new TextEncoder().encode(n6.substring(1)));
var ge2 = Ye("ascii", "a", (n6) => {
  let e4 = "a";
  for (let t3 = 0; t3 < n6.length; t3++) e4 += String.fromCharCode(n6[t3]);
  return e4;
}, (n6) => {
  n6 = n6.substring(1);
  const e4 = pr2(n6.length);
  for (let t3 = 0; t3 < n6.length; t3++) e4[t3] = n6.charCodeAt(t3);
  return e4;
});
var Dr2 = { utf8: Je, "utf-8": Je, hex: He.base16, latin1: ge2, ascii: ge2, binary: ge2, ...He };
function yr2(n6, e4 = "utf8") {
  const t3 = Dr2[e4];
  if (!t3) throw new Error(`Unsupported encoding "${e4}"`);
  return (e4 === "utf8" || e4 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(n6, "utf8") : t3.decoder.decode(`${t3.prefix}${n6}`);
}
var pe2 = "wc";
var Xe2 = 2;
var Q3 = "core";
var z5 = `${pe2}@2:${Q3}:`;
var We2 = { name: Q3, logger: "error" };
var Qe = { database: ":memory:" };
var Ze2 = "crypto";
var De = "client_ed25519_seed";
var et = import_time4.ONE_DAY;
var tt = "keychain";
var it = "0.3";
var st = "messages";
var rt = "0.3";
var nt = import_time4.SIX_HOURS;
var ot = "publisher";
var at = "irn";
var ht = "error";
var ye2 = "wss://relay.walletconnect.org";
var ct = "relayer";
var f5 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" };
var lt = "_subscription";
var E7 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" };
var ut = 0.1;
var dt = "2.14.0";
var gt = 1e4;
var pt = "0.3";
var Dt2 = "WALLETCONNECT_CLIENT_ID";
var S4 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" };
var yt = "subscription";
var mt = "0.3";
var bt = import_time4.FIVE_SECONDS * 1e3;
var ft = "pairing";
var Et = "0.3";
var M3 = { wc_pairingDelete: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 0 } } };
var q3 = { create: "pairing_create", expire: "pairing_expire", delete: "pairing_delete", ping: "pairing_ping" };
var I4 = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" };
var wt = "history";
var vt = "0.3";
var It = "expirer";
var C5 = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" };
var Ct = "0.3";
var Z2 = "verify-api";
var wr2 = "https://verify.walletconnect.com";
var Tt2 = "https://verify.walletconnect.org";
var V3 = Tt2;
var _t = [wr2, Tt2];
var Rt = "echo";
var St = "https://echo.walletconnect.com";
var Pt = class {
  constructor(e4, t3) {
    this.core = e4, this.logger = t3, this.keychain = /* @__PURE__ */ new Map(), this.name = tt, this.version = it, this.initialized = false, this.storagePrefix = z5, this.init = async () => {
      if (!this.initialized) {
        const i6 = await this.getKeyChain();
        typeof i6 < "u" && (this.keychain = i6), this.initialized = true;
      }
    }, this.has = (i6) => (this.isInitialized(), this.keychain.has(i6)), this.set = async (i6, s5) => {
      this.isInitialized(), this.keychain.set(i6, s5), await this.persist();
    }, this.get = (i6) => {
      this.isInitialized();
      const s5 = this.keychain.get(i6);
      if (typeof s5 > "u") {
        const { message: r5 } = xe("NO_MATCHING_KEY", `${this.name}: ${i6}`);
        throw new Error(r5);
      }
      return s5;
    }, this.del = async (i6) => {
      this.isInitialized(), this.keychain.delete(i6), await this.persist();
    }, this.core = e4, this.logger = E5(t3, this.name);
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setKeyChain(e4) {
    await this.core.storage.setItem(this.storageKey, i0(e4));
  }
  async getKeyChain() {
    const e4 = await this.core.storage.getItem(this.storageKey);
    return typeof e4 < "u" ? n0(e4) : void 0;
  }
  async persist() {
    await this.setKeyChain(this.keychain);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var xt = class {
  constructor(e4, t3, i6) {
    this.core = e4, this.logger = t3, this.name = Ze2, this.randomSessionIdentifier = gu(), this.initialized = false, this.init = async () => {
      this.initialized || (await this.keychain.init(), this.initialized = true);
    }, this.hasKeys = (s5) => (this.isInitialized(), this.keychain.has(s5)), this.getClientId = async () => {
      this.isInitialized();
      const s5 = await this.getClientSeed(), r5 = generateKeyPair(s5);
      return encodeIss(r5.publicKey);
    }, this.generateKeyPair = () => {
      this.isInitialized();
      const s5 = mu();
      return this.setPrivateKey(s5.publicKey, s5.privateKey);
    }, this.signJWT = async (s5) => {
      this.isInitialized();
      const r5 = await this.getClientSeed(), o6 = generateKeyPair(r5), a6 = this.randomSessionIdentifier, h7 = et;
      return await signJWT(a6, s5, h7, o6);
    }, this.generateSharedKey = (s5, r5, o6) => {
      this.isInitialized();
      const a6 = this.getPrivateKey(s5), h7 = Au(a6, r5);
      return this.setSymKey(h7, o6);
    }, this.setSymKey = async (s5, r5) => {
      this.isInitialized();
      const o6 = r5 || bu(s5);
      return await this.keychain.set(o6, s5), o6;
    }, this.deleteKeyPair = async (s5) => {
      this.isInitialized(), await this.keychain.del(s5);
    }, this.deleteSymKey = async (s5) => {
      this.isInitialized(), await this.keychain.del(s5);
    }, this.encode = async (s5, r5, o6) => {
      this.isInitialized();
      const a6 = eo(o6), h7 = safeJsonStringify3(r5);
      if (Eu(a6)) {
        const m5 = a6.senderPublicKey, L6 = a6.receiverPublicKey;
        s5 = await this.generateSharedKey(m5, L6);
      }
      const l6 = this.getSymKey(s5), { type: d5, senderPublicKey: g5 } = a6;
      return wu({ type: d5, symKey: l6, message: h7, senderPublicKey: g5 });
    }, this.decode = async (s5, r5, o6) => {
      this.isInitialized();
      const a6 = Mu(r5, o6);
      if (Eu(a6)) {
        const h7 = a6.receiverPublicKey, l6 = a6.senderPublicKey;
        s5 = await this.generateSharedKey(h7, l6);
      }
      try {
        const h7 = this.getSymKey(s5), l6 = xu({ symKey: h7, encoded: r5 });
        return safeJsonParse3(l6);
      } catch (h7) {
        this.logger.error(`Failed to decode message from topic: '${s5}', clientId: '${await this.getClientId()}'`), this.logger.error(h7);
      }
    }, this.getPayloadType = (s5) => {
      const r5 = Xi(s5);
      return Mr(r5.type);
    }, this.getPayloadSenderPublicKey = (s5) => {
      const r5 = Xi(s5);
      return r5.senderPublicKey ? toString2(r5.senderPublicKey, zt) : void 0;
    }, this.core = e4, this.logger = E5(t3, this.name), this.keychain = i6 || new Pt(this.core, this.logger);
  }
  get context() {
    return y4(this.logger);
  }
  async setPrivateKey(e4, t3) {
    return await this.keychain.set(e4, t3), e4;
  }
  getPrivateKey(e4) {
    return this.keychain.get(e4);
  }
  async getClientSeed() {
    let e4 = "";
    try {
      e4 = this.keychain.get(De);
    } catch {
      e4 = gu(), await this.keychain.set(De, e4);
    }
    return yr2(e4, "base16");
  }
  getSymKey(e4) {
    return this.keychain.get(e4);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var Ot2 = class extends a4 {
  constructor(e4, t3) {
    super(e4, t3), this.logger = e4, this.core = t3, this.messages = /* @__PURE__ */ new Map(), this.name = st, this.version = rt, this.initialized = false, this.storagePrefix = z5, this.init = async () => {
      if (!this.initialized) {
        this.logger.trace("Initialized");
        try {
          const i6 = await this.getRelayerMessages();
          typeof i6 < "u" && (this.messages = i6), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
        } catch (i6) {
          this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i6);
        } finally {
          this.initialized = true;
        }
      }
    }, this.set = async (i6, s5) => {
      this.isInitialized();
      const r5 = yu(s5);
      let o6 = this.messages.get(i6);
      return typeof o6 > "u" && (o6 = {}), typeof o6[r5] < "u" || (o6[r5] = s5, this.messages.set(i6, o6), await this.persist()), r5;
    }, this.get = (i6) => {
      this.isInitialized();
      let s5 = this.messages.get(i6);
      return typeof s5 > "u" && (s5 = {}), s5;
    }, this.has = (i6, s5) => {
      this.isInitialized();
      const r5 = this.get(i6), o6 = yu(s5);
      return typeof r5[o6] < "u";
    }, this.del = async (i6) => {
      this.isInitialized(), this.messages.delete(i6), await this.persist();
    }, this.logger = E5(e4, this.name), this.core = t3;
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setRelayerMessages(e4) {
    await this.core.storage.setItem(this.storageKey, i0(e4));
  }
  async getRelayerMessages() {
    const e4 = await this.core.storage.getItem(this.storageKey);
    return typeof e4 < "u" ? n0(e4) : void 0;
  }
  async persist() {
    await this.setRelayerMessages(this.messages);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var vr2 = class extends u3 {
  constructor(e4, t3) {
    super(e4, t3), this.relayer = e4, this.logger = t3, this.events = new import_events7.EventEmitter(), this.name = ot, this.queue = /* @__PURE__ */ new Map(), this.publishTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_MINUTE), this.failedPublishTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND), this.needsTransportRestart = false, this.publish = async (i6, s5, r5) => {
      var o6;
      this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i6, message: s5, opts: r5 } });
      const a6 = (r5 == null ? void 0 : r5.ttl) || nt, h7 = Su(r5), l6 = (r5 == null ? void 0 : r5.prompt) || false, d5 = (r5 == null ? void 0 : r5.tag) || 0, g5 = (r5 == null ? void 0 : r5.id) || getBigIntRpcId().toString(), m5 = { topic: i6, message: s5, opts: { ttl: a6, relay: h7, prompt: l6, tag: d5, id: g5 } }, L6 = `Failed to publish payload, please try again. id:${g5} tag:${d5}`, u5 = Date.now();
      let p5, T5 = 1;
      try {
        for (; p5 === void 0; ) {
          if (Date.now() - u5 > this.publishTimeout) throw new Error(L6);
          this.logger.trace({ id: g5, attempts: T5 }, `publisher.publish - attempt ${T5}`), p5 = await await u0(this.rpcPublish(i6, s5, a6, h7, l6, d5, g5).catch((D5) => this.logger.warn(D5)), this.publishTimeout, L6), T5++, p5 || await new Promise((D5) => setTimeout(D5, this.failedPublishTimeout));
        }
        this.relayer.events.emit(f5.publish, m5), this.logger.debug("Successfully Published Payload"), this.logger.trace({ type: "method", method: "publish", params: { id: g5, topic: i6, message: s5, opts: r5 } });
      } catch (D5) {
        if (this.logger.debug("Failed to Publish Payload"), this.logger.error(D5), (o6 = r5 == null ? void 0 : r5.internal) != null && o6.throwOnFailedPublish) throw D5;
        this.queue.set(g5, m5);
      }
    }, this.on = (i6, s5) => {
      this.events.on(i6, s5);
    }, this.once = (i6, s5) => {
      this.events.once(i6, s5);
    }, this.off = (i6, s5) => {
      this.events.off(i6, s5);
    }, this.removeListener = (i6, s5) => {
      this.events.removeListener(i6, s5);
    }, this.relayer = e4, this.logger = E5(t3, this.name), this.registerEventListeners();
  }
  get context() {
    return y4(this.logger);
  }
  rpcPublish(e4, t3, i6, s5, r5, o6, a6) {
    var h7, l6, d5, g5;
    const m5 = { method: Nu(s5.protocol).publish, params: { topic: e4, message: t3, ttl: i6, prompt: r5, tag: o6 }, id: a6 };
    return Pe((h7 = m5.params) == null ? void 0 : h7.prompt) && ((l6 = m5.params) == null || delete l6.prompt), Pe((d5 = m5.params) == null ? void 0 : d5.tag) && ((g5 = m5.params) == null || delete g5.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: m5 }), this.relayer.request(m5);
  }
  removeRequestFromQueue(e4) {
    this.queue.delete(e4);
  }
  checkQueue() {
    this.queue.forEach(async (e4) => {
      const { topic: t3, message: i6, opts: s5 } = e4;
      await this.publish(t3, i6, s5);
    });
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(r3.pulse, () => {
      if (this.needsTransportRestart) {
        this.needsTransportRestart = false, this.relayer.events.emit(f5.connection_stalled);
        return;
      }
      this.checkQueue();
    }), this.relayer.on(f5.message_ack, (e4) => {
      this.removeRequestFromQueue(e4.id.toString());
    });
  }
};
var Ir2 = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map(), this.set = (e4, t3) => {
      const i6 = this.get(e4);
      this.exists(e4, t3) || this.map.set(e4, [...i6, t3]);
    }, this.get = (e4) => this.map.get(e4) || [], this.exists = (e4, t3) => this.get(e4).includes(t3), this.delete = (e4, t3) => {
      if (typeof t3 > "u") {
        this.map.delete(e4);
        return;
      }
      if (!this.map.has(e4)) return;
      const i6 = this.get(e4);
      if (!this.exists(e4, t3)) return;
      const s5 = i6.filter((r5) => r5 !== t3);
      if (!s5.length) {
        this.map.delete(e4);
        return;
      }
      this.map.set(e4, s5);
    }, this.clear = () => {
      this.map.clear();
    };
  }
  get topics() {
    return Array.from(this.map.keys());
  }
};
var Cr2 = Object.defineProperty;
var Tr2 = Object.defineProperties;
var _r2 = Object.getOwnPropertyDescriptors;
var At = Object.getOwnPropertySymbols;
var Rr2 = Object.prototype.hasOwnProperty;
var Sr2 = Object.prototype.propertyIsEnumerable;
var zt2 = (n6, e4, t3) => e4 in n6 ? Cr2(n6, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : n6[e4] = t3;
var j5 = (n6, e4) => {
  for (var t3 in e4 || (e4 = {})) Rr2.call(e4, t3) && zt2(n6, t3, e4[t3]);
  if (At) for (var t3 of At(e4)) Sr2.call(e4, t3) && zt2(n6, t3, e4[t3]);
  return n6;
};
var me2 = (n6, e4) => Tr2(n6, _r2(e4));
var Nt = class extends d4 {
  constructor(e4, t3) {
    super(e4, t3), this.relayer = e4, this.logger = t3, this.subscriptions = /* @__PURE__ */ new Map(), this.topicMap = new Ir2(), this.events = new import_events7.EventEmitter(), this.name = yt, this.version = mt, this.pending = /* @__PURE__ */ new Map(), this.cached = [], this.initialized = false, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = z5, this.subscribeTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_MINUTE), this.restartInProgress = false, this.batchSubscribeTopicsLimit = 500, this.pendingBatchMessages = [], this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId());
    }, this.subscribe = async (i6, s5) => {
      await this.restartToComplete(), this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i6, opts: s5 } });
      try {
        const r5 = Su(s5), o6 = { topic: i6, relay: r5 };
        this.pending.set(i6, o6);
        const a6 = await this.rpcSubscribe(i6, r5);
        return typeof a6 == "string" && (this.onSubscribe(a6, o6), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i6, opts: s5 } })), a6;
      } catch (r5) {
        throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(r5), r5;
      }
    }, this.unsubscribe = async (i6, s5) => {
      await this.restartToComplete(), this.isInitialized(), typeof (s5 == null ? void 0 : s5.id) < "u" ? await this.unsubscribeById(i6, s5.id, s5) : await this.unsubscribeByTopic(i6, s5);
    }, this.isSubscribed = async (i6) => {
      if (this.topics.includes(i6)) return true;
      const s5 = `${this.pendingSubscriptionWatchLabel}_${i6}`;
      return await new Promise((r5, o6) => {
        const a6 = new import_time4.Watch();
        a6.start(s5);
        const h7 = setInterval(() => {
          !this.pending.has(i6) && this.topics.includes(i6) && (clearInterval(h7), a6.stop(s5), r5(true)), a6.elapsed(s5) >= bt && (clearInterval(h7), a6.stop(s5), o6(new Error("Subscription resolution timeout")));
        }, this.pollingInterval);
      }).catch(() => false);
    }, this.on = (i6, s5) => {
      this.events.on(i6, s5);
    }, this.once = (i6, s5) => {
      this.events.once(i6, s5);
    }, this.off = (i6, s5) => {
      this.events.off(i6, s5);
    }, this.removeListener = (i6, s5) => {
      this.events.removeListener(i6, s5);
    }, this.start = async () => {
      await this.onConnect();
    }, this.stop = async () => {
      await this.onDisconnect();
    }, this.restart = async () => {
      this.restartInProgress = true, await this.restore(), await this.reset(), this.restartInProgress = false;
    }, this.relayer = e4, this.logger = E5(t3, this.name), this.clientId = "";
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.subscriptions.size;
  }
  get ids() {
    return Array.from(this.subscriptions.keys());
  }
  get values() {
    return Array.from(this.subscriptions.values());
  }
  get topics() {
    return this.topicMap.topics;
  }
  hasSubscription(e4, t3) {
    let i6 = false;
    try {
      i6 = this.getSubscription(e4).topic === t3;
    } catch {
    }
    return i6;
  }
  onEnable() {
    this.cached = [], this.initialized = true;
  }
  onDisable() {
    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
  }
  async unsubscribeByTopic(e4, t3) {
    const i6 = this.topicMap.get(e4);
    await Promise.all(i6.map(async (s5) => await this.unsubscribeById(e4, s5, t3)));
  }
  async unsubscribeById(e4, t3, i6) {
    this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e4, id: t3, opts: i6 } });
    try {
      const s5 = Su(i6);
      await this.rpcUnsubscribe(e4, t3, s5);
      const r5 = tr("USER_DISCONNECTED", `${this.name}, ${e4}`);
      await this.onUnsubscribe(e4, t3, r5), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e4, id: t3, opts: i6 } });
    } catch (s5) {
      throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(s5), s5;
    }
  }
  async rpcSubscribe(e4, t3) {
    const i6 = { method: Nu(t3.protocol).subscribe, params: { topic: e4 } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i6 });
    try {
      return await await u0(this.relayer.request(i6).catch((s5) => this.logger.warn(s5)), this.subscribeTimeout) ? yu(e4 + this.clientId) : null;
    } catch {
      this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(f5.connection_stalled);
    }
    return null;
  }
  async rpcBatchSubscribe(e4) {
    if (!e4.length) return;
    const t3 = e4[0].relay, i6 = { method: Nu(t3.protocol).batchSubscribe, params: { topics: e4.map((s5) => s5.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i6 });
    try {
      return await await u0(this.relayer.request(i6).catch((s5) => this.logger.warn(s5)), this.subscribeTimeout);
    } catch {
      this.relayer.events.emit(f5.connection_stalled);
    }
  }
  async rpcBatchFetchMessages(e4) {
    if (!e4.length) return;
    const t3 = e4[0].relay, i6 = { method: Nu(t3.protocol).batchFetchMessages, params: { topics: e4.map((r5) => r5.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i6 });
    let s5;
    try {
      s5 = await await u0(this.relayer.request(i6).catch((r5) => this.logger.warn(r5)), this.subscribeTimeout);
    } catch {
      this.relayer.events.emit(f5.connection_stalled);
    }
    return s5;
  }
  rpcUnsubscribe(e4, t3, i6) {
    const s5 = { method: Nu(i6.protocol).unsubscribe, params: { topic: e4, id: t3 } };
    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s5 }), this.relayer.request(s5);
  }
  onSubscribe(e4, t3) {
    this.setSubscription(e4, me2(j5({}, t3), { id: e4 })), this.pending.delete(t3.topic);
  }
  onBatchSubscribe(e4) {
    e4.length && e4.forEach((t3) => {
      this.setSubscription(t3.id, j5({}, t3)), this.pending.delete(t3.topic);
    });
  }
  async onUnsubscribe(e4, t3, i6) {
    this.events.removeAllListeners(t3), this.hasSubscription(t3, e4) && this.deleteSubscription(t3, i6), await this.relayer.messages.del(e4);
  }
  async setRelayerSubscriptions(e4) {
    await this.relayer.core.storage.setItem(this.storageKey, e4);
  }
  async getRelayerSubscriptions() {
    return await this.relayer.core.storage.getItem(this.storageKey);
  }
  setSubscription(e4, t3) {
    this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e4, subscription: t3 }), this.addSubscription(e4, t3);
  }
  addSubscription(e4, t3) {
    this.subscriptions.set(e4, j5({}, t3)), this.topicMap.set(t3.topic, e4), this.events.emit(S4.created, t3);
  }
  getSubscription(e4) {
    this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e4 });
    const t3 = this.subscriptions.get(e4);
    if (!t3) {
      const { message: i6 } = xe("NO_MATCHING_KEY", `${this.name}: ${e4}`);
      throw new Error(i6);
    }
    return t3;
  }
  deleteSubscription(e4, t3) {
    this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e4, reason: t3 });
    const i6 = this.getSubscription(e4);
    this.subscriptions.delete(e4), this.topicMap.delete(i6.topic, e4), this.events.emit(S4.deleted, me2(j5({}, i6), { reason: t3 }));
  }
  async persist() {
    await this.setRelayerSubscriptions(this.values), this.events.emit(S4.sync);
  }
  async reset() {
    if (this.cached.length) {
      const e4 = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
      for (let t3 = 0; t3 < e4; t3++) {
        const i6 = this.cached.splice(0, this.batchSubscribeTopicsLimit);
        await this.batchFetchMessages(i6), await this.batchSubscribe(i6);
      }
    }
    this.events.emit(S4.resubscribed);
  }
  async restore() {
    try {
      const e4 = await this.getRelayerSubscriptions();
      if (typeof e4 > "u" || !e4.length) return;
      if (this.subscriptions.size) {
        const { message: t3 } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t3), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t3);
      }
      this.cached = e4, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
    } catch (e4) {
      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e4);
    }
  }
  async batchSubscribe(e4) {
    if (!e4.length) return;
    const t3 = await this.rpcBatchSubscribe(e4);
    Er(t3) && this.onBatchSubscribe(t3.map((i6, s5) => me2(j5({}, e4[s5]), { id: i6 })));
  }
  async batchFetchMessages(e4) {
    if (!e4.length) return;
    this.logger.trace(`Fetching batch messages for ${e4.length} subscriptions`);
    const t3 = await this.rpcBatchFetchMessages(e4);
    t3 && t3.messages && (this.pendingBatchMessages = this.pendingBatchMessages.concat(t3.messages));
  }
  async onConnect() {
    await this.restart(), this.onEnable();
  }
  onDisconnect() {
    this.onDisable();
  }
  async checkPending() {
    if (!this.initialized || !this.relayer.connected) return;
    const e4 = [];
    this.pending.forEach((t3) => {
      e4.push(t3);
    }), await this.batchSubscribe(e4), this.pendingBatchMessages.length && (await this.relayer.handleBatchMessageEvents(this.pendingBatchMessages), this.pendingBatchMessages = []);
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(r3.pulse, async () => {
      await this.checkPending();
    }), this.events.on(S4.created, async (e4) => {
      const t3 = S4.created;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, data: e4 }), await this.persist();
    }), this.events.on(S4.deleted, async (e4) => {
      const t3 = S4.deleted;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, data: e4 }), await this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
  async restartToComplete() {
    this.restartInProgress && await new Promise((e4) => {
      const t3 = setInterval(() => {
        this.restartInProgress || (clearInterval(t3), e4());
      }, this.pollingInterval);
    });
  }
};
var Pr2 = Object.defineProperty;
var Lt2 = Object.getOwnPropertySymbols;
var xr2 = Object.prototype.hasOwnProperty;
var Or2 = Object.prototype.propertyIsEnumerable;
var Ut2 = (n6, e4, t3) => e4 in n6 ? Pr2(n6, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : n6[e4] = t3;
var Ar2 = (n6, e4) => {
  for (var t3 in e4 || (e4 = {})) xr2.call(e4, t3) && Ut2(n6, t3, e4[t3]);
  if (Lt2) for (var t3 of Lt2(e4)) Or2.call(e4, t3) && Ut2(n6, t3, e4[t3]);
  return n6;
};
var Ft2 = class extends g4 {
  constructor(e4) {
    super(e4), this.protocol = "wc", this.version = 2, this.events = new import_events7.EventEmitter(), this.name = ct, this.transportExplicitlyClosed = false, this.initialized = false, this.connectionAttemptInProgress = false, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = ["socket hang up", "stalled", "interrupted"], this.hasExperiencedNetworkDisruption = false, this.requestsInFlight = /* @__PURE__ */ new Map(), this.heartBeatTimeout = (0, import_time4.toMiliseconds)(import_time4.THIRTY_SECONDS + import_time4.ONE_SECOND), this.request = async (t3) => {
      var i6, s5;
      this.logger.debug("Publishing Request Payload");
      const r5 = t3.id || getBigIntRpcId().toString();
      await this.toEstablishConnection();
      try {
        const o6 = this.provider.request(t3);
        this.requestsInFlight.set(r5, { promise: o6, request: t3 }), this.logger.trace({ id: r5, method: t3.method, topic: (i6 = t3.params) == null ? void 0 : i6.topic }, "relayer.request - attempt to publish...");
        const a6 = await new Promise(async (h7, l6) => {
          const d5 = () => {
            l6(new Error(`relayer.request - publish interrupted, id: ${r5}`));
          };
          this.provider.on(E7.disconnect, d5);
          const g5 = await o6;
          this.provider.off(E7.disconnect, d5), h7(g5);
        });
        return this.logger.trace({ id: r5, method: t3.method, topic: (s5 = t3.params) == null ? void 0 : s5.topic }, "relayer.request - published"), a6;
      } catch (o6) {
        throw this.logger.debug(`Failed to Publish Request: ${r5}`), o6;
      } finally {
        this.requestsInFlight.delete(r5);
      }
    }, this.resetPingTimeout = () => {
      if (pi()) try {
        clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(() => {
          var t3, i6, s5;
          (s5 = (i6 = (t3 = this.provider) == null ? void 0 : t3.connection) == null ? void 0 : i6.socket) == null || s5.terminate();
        }, this.heartBeatTimeout);
      } catch (t3) {
        this.logger.warn(t3);
      }
    }, this.onPayloadHandler = (t3) => {
      this.onProviderPayload(t3), this.resetPingTimeout();
    }, this.onConnectHandler = () => {
      this.logger.trace("relayer connected"), this.startPingTimeout(), this.events.emit(f5.connect);
    }, this.onDisconnectHandler = () => {
      this.logger.trace("relayer disconnected"), this.onProviderDisconnect();
    }, this.onProviderErrorHandler = (t3) => {
      this.logger.error(t3), this.events.emit(f5.error, t3), this.logger.info("Fatal socket error received, closing transport"), this.transportClose();
    }, this.registerProviderListeners = () => {
      this.provider.on(E7.payload, this.onPayloadHandler), this.provider.on(E7.connect, this.onConnectHandler), this.provider.on(E7.disconnect, this.onDisconnectHandler), this.provider.on(E7.error, this.onProviderErrorHandler);
    }, this.core = e4.core, this.logger = typeof e4.logger < "u" && typeof e4.logger != "string" ? E5(e4.logger, this.name) : (0, import_pino2.default)(k4({ level: e4.logger || ht })), this.messages = new Ot2(this.logger, e4.core), this.subscriber = new Nt(this, this.logger), this.publisher = new vr2(this, this.logger), this.relayUrl = (e4 == null ? void 0 : e4.relayUrl) || ye2, this.projectId = e4.projectId, this.bundleId = Wo(), this.provider = {};
  }
  async init() {
    this.logger.trace("Initialized"), this.registerEventListeners(), await Promise.all([this.messages.init(), this.subscriber.init()]), await this.transportOpen(), this.initialized = true, setTimeout(async () => {
      this.subscriber.topics.length === 0 && this.subscriber.pending.size === 0 && (this.logger.info("No topics subscribed to after init, closing transport"), await this.transportClose(), this.transportExplicitlyClosed = false);
    }, gt);
  }
  get context() {
    return y4(this.logger);
  }
  get connected() {
    var e4, t3, i6;
    return ((i6 = (t3 = (e4 = this.provider) == null ? void 0 : e4.connection) == null ? void 0 : t3.socket) == null ? void 0 : i6.readyState) === 1;
  }
  get connecting() {
    var e4, t3, i6;
    return ((i6 = (t3 = (e4 = this.provider) == null ? void 0 : e4.connection) == null ? void 0 : t3.socket) == null ? void 0 : i6.readyState) === 0;
  }
  async publish(e4, t3, i6) {
    this.isInitialized(), await this.publisher.publish(e4, t3, i6), await this.recordMessageEvent({ topic: e4, message: t3, publishedAt: Date.now() });
  }
  async subscribe(e4, t3) {
    var i6;
    this.isInitialized();
    let s5 = ((i6 = this.subscriber.topicMap.get(e4)) == null ? void 0 : i6[0]) || "", r5;
    const o6 = (a6) => {
      a6.topic === e4 && (this.subscriber.off(S4.created, o6), r5());
    };
    return await Promise.all([new Promise((a6) => {
      r5 = a6, this.subscriber.on(S4.created, o6);
    }), new Promise(async (a6) => {
      s5 = await this.subscriber.subscribe(e4, t3) || s5, a6();
    })]), s5;
  }
  async unsubscribe(e4, t3) {
    this.isInitialized(), await this.subscriber.unsubscribe(e4, t3);
  }
  on(e4, t3) {
    this.events.on(e4, t3);
  }
  once(e4, t3) {
    this.events.once(e4, t3);
  }
  off(e4, t3) {
    this.events.off(e4, t3);
  }
  removeListener(e4, t3) {
    this.events.removeListener(e4, t3);
  }
  async transportDisconnect() {
    if (!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0) try {
      await Promise.all(Array.from(this.requestsInFlight.values()).map((e4) => e4.promise));
    } catch (e4) {
      this.logger.warn(e4);
    }
    this.hasExperiencedNetworkDisruption || this.connected ? await u0(this.provider.disconnect(), 2e3, "provider.disconnect()").catch(() => this.onProviderDisconnect()) : this.onProviderDisconnect();
  }
  async transportClose() {
    this.transportExplicitlyClosed = true, await this.transportDisconnect();
  }
  async transportOpen(e4) {
    await this.confirmOnlineStateOrThrow(), e4 && e4 !== this.relayUrl && (this.relayUrl = e4, await this.transportDisconnect()), await this.createProvider(), this.connectionAttemptInProgress = true, this.transportExplicitlyClosed = false;
    try {
      await new Promise(async (t3, i6) => {
        const s5 = () => {
          this.provider.off(E7.disconnect, s5), i6(new Error("Connection interrupted while trying to subscribe"));
        };
        this.provider.on(E7.disconnect, s5), await u0(this.provider.connect(), (0, import_time4.toMiliseconds)(import_time4.ONE_MINUTE), `Socket stalled when trying to connect to ${this.relayUrl}`).catch((r5) => {
          i6(r5);
        }), this.subscriber.start().catch((r5) => {
          this.logger.error(r5), this.onDisconnectHandler();
        }), this.hasExperiencedNetworkDisruption = false, t3();
      });
    } catch (t3) {
      this.logger.error(t3);
      const i6 = t3;
      if (this.hasExperiencedNetworkDisruption = true, !this.isConnectionStalled(i6.message)) throw t3;
    } finally {
      this.connectionAttemptInProgress = false;
    }
  }
  async restartTransport(e4) {
    this.connectionAttemptInProgress || (this.relayUrl = e4 || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());
  }
  async confirmOnlineStateOrThrow() {
    if (!await hh()) throw new Error("No internet connection detected. Please restart your network and try again.");
  }
  async handleBatchMessageEvents(e4) {
    if ((e4 == null ? void 0 : e4.length) === 0) {
      this.logger.trace("Batch message events is empty. Ignoring...");
      return;
    }
    const t3 = e4.sort((i6, s5) => i6.publishedAt - s5.publishedAt);
    this.logger.trace(`Batch of ${t3.length} message events sorted`);
    for (const i6 of t3) try {
      await this.onMessageEvent(i6);
    } catch (s5) {
      this.logger.warn(s5);
    }
    this.logger.trace(`Batch of ${t3.length} message events processed`);
  }
  startPingTimeout() {
    var e4, t3, i6, s5, r5;
    if (pi()) try {
      (t3 = (e4 = this.provider) == null ? void 0 : e4.connection) != null && t3.socket && ((r5 = (s5 = (i6 = this.provider) == null ? void 0 : i6.connection) == null ? void 0 : s5.socket) == null || r5.once("ping", () => {
        this.resetPingTimeout();
      })), this.resetPingTimeout();
    } catch (o6) {
      this.logger.warn(o6);
    }
  }
  isConnectionStalled(e4) {
    return this.staleConnectionErrors.some((t3) => e4.includes(t3));
  }
  async createProvider() {
    this.provider.connection && this.unregisterProviderListeners();
    const e4 = await this.core.crypto.signJWT(this.relayUrl);
    this.provider = new o5(new f4($o({ sdkVersion: dt, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e4, useOnCloseEvent: true, bundleId: this.bundleId }))), this.registerProviderListeners();
  }
  async recordMessageEvent(e4) {
    const { topic: t3, message: i6 } = e4;
    await this.messages.set(t3, i6);
  }
  async shouldIgnoreMessageEvent(e4) {
    const { topic: t3, message: i6 } = e4;
    if (!i6 || i6.length === 0) return this.logger.debug(`Ignoring invalid/empty message: ${i6}`), true;
    if (!await this.subscriber.isSubscribed(t3)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t3}`), true;
    const s5 = this.messages.has(t3, i6);
    return s5 && this.logger.debug(`Ignoring duplicate message: ${i6}`), s5;
  }
  async onProviderPayload(e4) {
    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e4 }), isJsonRpcRequest(e4)) {
      if (!e4.method.endsWith(lt)) return;
      const t3 = e4.params, { topic: i6, message: s5, publishedAt: r5 } = t3.data, o6 = { topic: i6, message: s5, publishedAt: r5 };
      this.logger.debug("Emitting Relayer Payload"), this.logger.trace(Ar2({ type: "event", event: t3.id }, o6)), this.events.emit(t3.id, o6), await this.acknowledgePayload(e4), await this.onMessageEvent(o6);
    } else isJsonRpcResponse(e4) && this.events.emit(f5.message_ack, e4);
  }
  async onMessageEvent(e4) {
    await this.shouldIgnoreMessageEvent(e4) || (this.events.emit(f5.message, e4), await this.recordMessageEvent(e4));
  }
  async acknowledgePayload(e4) {
    const t3 = formatJsonRpcResult(e4.id, true);
    await this.provider.connection.send(t3);
  }
  unregisterProviderListeners() {
    this.provider.off(E7.payload, this.onPayloadHandler), this.provider.off(E7.connect, this.onConnectHandler), this.provider.off(E7.disconnect, this.onDisconnectHandler), this.provider.off(E7.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);
  }
  async registerEventListeners() {
    let e4 = await hh();
    ch(async (t3) => {
      e4 !== t3 && (e4 = t3, t3 ? await this.restartTransport().catch((i6) => this.logger.error(i6)) : (this.hasExperiencedNetworkDisruption = true, await this.transportDisconnect(), this.transportExplicitlyClosed = false));
    });
  }
  async onProviderDisconnect() {
    await this.subscriber.stop(), this.requestsInFlight.clear(), clearTimeout(this.pingTimeout), this.events.emit(f5.disconnect), this.connectionAttemptInProgress = false, !this.transportExplicitlyClosed && setTimeout(async () => {
      await this.transportOpen().catch((e4) => this.logger.error(e4));
    }, (0, import_time4.toMiliseconds)(ut));
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
  async toEstablishConnection() {
    await this.confirmOnlineStateOrThrow(), !this.connected && (this.connectionAttemptInProgress && await new Promise((e4) => {
      const t3 = setInterval(() => {
        this.connected && (clearInterval(t3), e4());
      }, this.connectionStatusPollingInterval);
    }), await this.transportOpen());
  }
};
var zr2 = Object.defineProperty;
var $t2 = Object.getOwnPropertySymbols;
var Nr2 = Object.prototype.hasOwnProperty;
var Lr2 = Object.prototype.propertyIsEnumerable;
var Mt = (n6, e4, t3) => e4 in n6 ? zr2(n6, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : n6[e4] = t3;
var Bt = (n6, e4) => {
  for (var t3 in e4 || (e4 = {})) Nr2.call(e4, t3) && Mt(n6, t3, e4[t3]);
  if ($t2) for (var t3 of $t2(e4)) Lr2.call(e4, t3) && Mt(n6, t3, e4[t3]);
  return n6;
};
var kt2 = class extends p4 {
  constructor(e4, t3, i6, s5 = z5, r5 = void 0) {
    super(e4, t3, i6, s5), this.core = e4, this.logger = t3, this.name = i6, this.map = /* @__PURE__ */ new Map(), this.version = pt, this.cached = [], this.initialized = false, this.storagePrefix = z5, this.recentlyDeleted = [], this.recentlyDeletedLimit = 200, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((o6) => {
        this.getKey && o6 !== null && !Pe(o6) ? this.map.set(this.getKey(o6), o6) : Gu(o6) ? this.map.set(o6.id, o6) : Yu(o6) && this.map.set(o6.topic, o6);
      }), this.cached = [], this.initialized = true);
    }, this.set = async (o6, a6) => {
      this.isInitialized(), this.map.has(o6) ? await this.update(o6, a6) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: o6, value: a6 }), this.map.set(o6, a6), await this.persist());
    }, this.get = (o6) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: o6 }), this.getData(o6)), this.getAll = (o6) => (this.isInitialized(), o6 ? this.values.filter((a6) => Object.keys(o6).every((h7) => (0, import_lodash.default)(a6[h7], o6[h7]))) : this.values), this.update = async (o6, a6) => {
      this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: o6, update: a6 });
      const h7 = Bt(Bt({}, this.getData(o6)), a6);
      this.map.set(o6, h7), await this.persist();
    }, this.delete = async (o6, a6) => {
      this.isInitialized(), this.map.has(o6) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: o6, reason: a6 }), this.map.delete(o6), this.addToRecentlyDeleted(o6), await this.persist());
    }, this.logger = E5(t3, this.name), this.storagePrefix = s5, this.getKey = r5;
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.map.size;
  }
  get keys() {
    return Array.from(this.map.keys());
  }
  get values() {
    return Array.from(this.map.values());
  }
  addToRecentlyDeleted(e4) {
    this.recentlyDeleted.push(e4), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
  }
  async setDataStore(e4) {
    await this.core.storage.setItem(this.storageKey, e4);
  }
  async getDataStore() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getData(e4) {
    const t3 = this.map.get(e4);
    if (!t3) {
      if (this.recentlyDeleted.includes(e4)) {
        const { message: s5 } = xe("MISSING_OR_INVALID", `Record was recently deleted - ${this.name}: ${e4}`);
        throw this.logger.error(s5), new Error(s5);
      }
      const { message: i6 } = xe("NO_MATCHING_KEY", `${this.name}: ${e4}`);
      throw this.logger.error(i6), new Error(i6);
    }
    return t3;
  }
  async persist() {
    await this.setDataStore(this.values);
  }
  async restore() {
    try {
      const e4 = await this.getDataStore();
      if (typeof e4 > "u" || !e4.length) return;
      if (this.map.size) {
        const { message: t3 } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t3), new Error(t3);
      }
      this.cached = e4, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
    } catch (e4) {
      this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e4);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var Kt2 = class {
  constructor(e4, t3) {
    this.core = e4, this.logger = t3, this.name = ft, this.version = Et, this.events = new import_events7.default(), this.initialized = false, this.storagePrefix = z5, this.ignoredPayloadTypes = [lr], this.registeredMethods = [], this.init = async () => {
      this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
    }, this.register = ({ methods: i6 }) => {
      this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...i6])];
    }, this.create = async (i6) => {
      this.isInitialized();
      const s5 = gu(), r5 = await this.core.crypto.setSymKey(s5), o6 = d0(import_time4.FIVE_MINUTES), a6 = { protocol: at }, h7 = { topic: r5, expiry: o6, relay: a6, active: false }, l6 = Du({ protocol: this.core.protocol, version: this.core.version, topic: r5, symKey: s5, relay: a6, expiryTimestamp: o6, methods: i6 == null ? void 0 : i6.methods });
      return this.core.expirer.set(r5, o6), await this.pairings.set(r5, h7), await this.core.relayer.subscribe(r5), { topic: r5, uri: l6 };
    }, this.pair = async (i6) => {
      this.isInitialized(), this.isValidPair(i6);
      const { topic: s5, symKey: r5, relay: o6, expiryTimestamp: a6, methods: h7 } = Pu(i6.uri);
      let l6;
      if (this.pairings.keys.includes(s5) && (l6 = this.pairings.get(s5), l6.active)) throw new Error(`Pairing already exists: ${s5}. Please try again with a new connection URI.`);
      const d5 = a6 || d0(import_time4.FIVE_MINUTES), g5 = { topic: s5, relay: o6, expiry: d5, active: false, methods: h7 };
      return this.core.expirer.set(s5, d5), await this.pairings.set(s5, g5), i6.activatePairing && await this.activate({ topic: s5 }), this.events.emit(q3.create, g5), this.core.crypto.keychain.has(s5) || await this.core.crypto.setSymKey(r5, s5), await this.core.relayer.subscribe(s5, { relay: o6 }), g5;
    }, this.activate = async ({ topic: i6 }) => {
      this.isInitialized();
      const s5 = d0(import_time4.THIRTY_DAYS);
      this.core.expirer.set(i6, s5), await this.pairings.update(i6, { active: true, expiry: s5 });
    }, this.ping = async (i6) => {
      this.isInitialized(), await this.isValidPing(i6);
      const { topic: s5 } = i6;
      if (this.pairings.keys.includes(s5)) {
        const r5 = await this.sendRequest(s5, "wc_pairingPing", {}), { done: o6, resolve: a6, reject: h7 } = a0();
        this.events.once(v0("pairing_ping", r5), ({ error: l6 }) => {
          l6 ? h7(l6) : a6();
        }), await o6();
      }
    }, this.updateExpiry = async ({ topic: i6, expiry: s5 }) => {
      this.isInitialized(), await this.pairings.update(i6, { expiry: s5 });
    }, this.updateMetadata = async ({ topic: i6, metadata: s5 }) => {
      this.isInitialized(), await this.pairings.update(i6, { peerMetadata: s5 });
    }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async (i6) => {
      this.isInitialized(), await this.isValidDisconnect(i6);
      const { topic: s5 } = i6;
      this.pairings.keys.includes(s5) && (await this.sendRequest(s5, "wc_pairingDelete", tr("USER_DISCONNECTED")), await this.deletePairing(s5));
    }, this.sendRequest = async (i6, s5, r5) => {
      const o6 = formatJsonRpcRequest(s5, r5), a6 = await this.core.crypto.encode(i6, o6), h7 = M3[s5].req;
      return this.core.history.set(i6, o6), this.core.relayer.publish(i6, a6, h7), o6.id;
    }, this.sendResult = async (i6, s5, r5) => {
      const o6 = formatJsonRpcResult(i6, r5), a6 = await this.core.crypto.encode(s5, o6), h7 = await this.core.history.get(s5, i6), l6 = M3[h7.request.method].res;
      await this.core.relayer.publish(s5, a6, l6), await this.core.history.resolve(o6);
    }, this.sendError = async (i6, s5, r5) => {
      const o6 = formatJsonRpcError(i6, r5), a6 = await this.core.crypto.encode(s5, o6), h7 = await this.core.history.get(s5, i6), l6 = M3[h7.request.method] ? M3[h7.request.method].res : M3.unregistered_method.res;
      await this.core.relayer.publish(s5, a6, l6), await this.core.history.resolve(o6);
    }, this.deletePairing = async (i6, s5) => {
      await this.core.relayer.unsubscribe(i6), await Promise.all([this.pairings.delete(i6, tr("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(i6), s5 ? Promise.resolve() : this.core.expirer.del(i6)]);
    }, this.cleanup = async () => {
      const i6 = this.pairings.getAll().filter((s5) => p0(s5.expiry));
      await Promise.all(i6.map((s5) => this.deletePairing(s5.topic)));
    }, this.onRelayEventRequest = (i6) => {
      const { topic: s5, payload: r5 } = i6;
      switch (r5.method) {
        case "wc_pairingPing":
          return this.onPairingPingRequest(s5, r5);
        case "wc_pairingDelete":
          return this.onPairingDeleteRequest(s5, r5);
        default:
          return this.onUnknownRpcMethodRequest(s5, r5);
      }
    }, this.onRelayEventResponse = async (i6) => {
      const { topic: s5, payload: r5 } = i6, o6 = (await this.core.history.get(s5, r5.id)).request.method;
      switch (o6) {
        case "wc_pairingPing":
          return this.onPairingPingResponse(s5, r5);
        default:
          return this.onUnknownRpcMethodResponse(o6);
      }
    }, this.onPairingPingRequest = async (i6, s5) => {
      const { id: r5 } = s5;
      try {
        this.isValidPing({ topic: i6 }), await this.sendResult(r5, i6, true), this.events.emit(q3.ping, { id: r5, topic: i6 });
      } catch (o6) {
        await this.sendError(r5, i6, o6), this.logger.error(o6);
      }
    }, this.onPairingPingResponse = (i6, s5) => {
      const { id: r5 } = s5;
      setTimeout(() => {
        isJsonRpcResult(s5) ? this.events.emit(v0("pairing_ping", r5), {}) : isJsonRpcError(s5) && this.events.emit(v0("pairing_ping", r5), { error: s5.error });
      }, 500);
    }, this.onPairingDeleteRequest = async (i6, s5) => {
      const { id: r5 } = s5;
      try {
        this.isValidDisconnect({ topic: i6 }), await this.deletePairing(i6), this.events.emit(q3.delete, { id: r5, topic: i6 });
      } catch (o6) {
        await this.sendError(r5, i6, o6), this.logger.error(o6);
      }
    }, this.onUnknownRpcMethodRequest = async (i6, s5) => {
      const { id: r5, method: o6 } = s5;
      try {
        if (this.registeredMethods.includes(o6)) return;
        const a6 = tr("WC_METHOD_UNSUPPORTED", o6);
        await this.sendError(r5, i6, a6), this.logger.error(a6);
      } catch (a6) {
        await this.sendError(r5, i6, a6), this.logger.error(a6);
      }
    }, this.onUnknownRpcMethodResponse = (i6) => {
      this.registeredMethods.includes(i6) || this.logger.error(tr("WC_METHOD_UNSUPPORTED", i6));
    }, this.isValidPair = (i6) => {
      var s5;
      if (!$u(i6)) {
        const { message: o6 } = xe("MISSING_OR_INVALID", `pair() params: ${i6}`);
        throw new Error(o6);
      }
      if (!Ju(i6.uri)) {
        const { message: o6 } = xe("MISSING_OR_INVALID", `pair() uri: ${i6.uri}`);
        throw new Error(o6);
      }
      const r5 = Pu(i6.uri);
      if (!((s5 = r5 == null ? void 0 : r5.relay) != null && s5.protocol)) {
        const { message: o6 } = xe("MISSING_OR_INVALID", "pair() uri#relay-protocol");
        throw new Error(o6);
      }
      if (!(r5 != null && r5.symKey)) {
        const { message: o6 } = xe("MISSING_OR_INVALID", "pair() uri#symKey");
        throw new Error(o6);
      }
      if (r5 != null && r5.expiryTimestamp && (0, import_time4.toMiliseconds)(r5 == null ? void 0 : r5.expiryTimestamp) < Date.now()) {
        const { message: o6 } = xe("EXPIRED", "pair() URI has expired. Please try again with a new connection URI.");
        throw new Error(o6);
      }
    }, this.isValidPing = async (i6) => {
      if (!$u(i6)) {
        const { message: r5 } = xe("MISSING_OR_INVALID", `ping() params: ${i6}`);
        throw new Error(r5);
      }
      const { topic: s5 } = i6;
      await this.isValidPairingTopic(s5);
    }, this.isValidDisconnect = async (i6) => {
      if (!$u(i6)) {
        const { message: r5 } = xe("MISSING_OR_INVALID", `disconnect() params: ${i6}`);
        throw new Error(r5);
      }
      const { topic: s5 } = i6;
      await this.isValidPairingTopic(s5);
    }, this.isValidPairingTopic = async (i6) => {
      if (!Gt(i6, false)) {
        const { message: s5 } = xe("MISSING_OR_INVALID", `pairing topic should be a string: ${i6}`);
        throw new Error(s5);
      }
      if (!this.pairings.keys.includes(i6)) {
        const { message: s5 } = xe("NO_MATCHING_KEY", `pairing topic doesn't exist: ${i6}`);
        throw new Error(s5);
      }
      if (p0(this.pairings.get(i6).expiry)) {
        await this.deletePairing(i6);
        const { message: s5 } = xe("EXPIRED", `pairing topic: ${i6}`);
        throw new Error(s5);
      }
    }, this.core = e4, this.logger = E5(t3, this.name), this.pairings = new kt2(this.core, this.logger, this.name, this.storagePrefix);
  }
  get context() {
    return y4(this.logger);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
  registerRelayerEvents() {
    this.core.relayer.on(f5.message, async (e4) => {
      const { topic: t3, message: i6 } = e4;
      if (!this.pairings.keys.includes(t3) || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i6))) return;
      const s5 = await this.core.crypto.decode(t3, i6);
      try {
        isJsonRpcRequest(s5) ? (this.core.history.set(t3, s5), this.onRelayEventRequest({ topic: t3, payload: s5 })) : isJsonRpcResponse(s5) && (await this.core.history.resolve(s5), await this.onRelayEventResponse({ topic: t3, payload: s5 }), this.core.history.delete(t3, s5.id));
      } catch (r5) {
        this.logger.error(r5);
      }
    });
  }
  registerExpirerEvents() {
    this.core.expirer.on(C5.expired, async (e4) => {
      const { topic: t3 } = l0(e4.target);
      t3 && this.pairings.keys.includes(t3) && (await this.deletePairing(t3, true), this.events.emit(q3.expire, { topic: t3 }));
    });
  }
};
var qt2 = class extends h5 {
  constructor(e4, t3) {
    super(e4, t3), this.core = e4, this.logger = t3, this.records = /* @__PURE__ */ new Map(), this.events = new import_events7.EventEmitter(), this.name = wt, this.version = vt, this.cached = [], this.initialized = false, this.storagePrefix = z5, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i6) => this.records.set(i6.id, i6)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.set = (i6, s5, r5) => {
      if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: i6, request: s5, chainId: r5 }), this.records.has(s5.id)) return;
      const o6 = { id: s5.id, topic: i6, request: { method: s5.method, params: s5.params || null }, chainId: r5, expiry: d0(import_time4.THIRTY_DAYS) };
      this.records.set(o6.id, o6), this.persist(), this.events.emit(I4.created, o6);
    }, this.resolve = async (i6) => {
      if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: i6 }), !this.records.has(i6.id)) return;
      const s5 = await this.getRecord(i6.id);
      typeof s5.response > "u" && (s5.response = isJsonRpcError(i6) ? { error: i6.error } : { result: i6.result }, this.records.set(s5.id, s5), this.persist(), this.events.emit(I4.updated, s5));
    }, this.get = async (i6, s5) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: i6, id: s5 }), await this.getRecord(s5)), this.delete = (i6, s5) => {
      this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: s5 }), this.values.forEach((r5) => {
        if (r5.topic === i6) {
          if (typeof s5 < "u" && r5.id !== s5) return;
          this.records.delete(r5.id), this.events.emit(I4.deleted, r5);
        }
      }), this.persist();
    }, this.exists = async (i6, s5) => (this.isInitialized(), this.records.has(s5) ? (await this.getRecord(s5)).topic === i6 : false), this.on = (i6, s5) => {
      this.events.on(i6, s5);
    }, this.once = (i6, s5) => {
      this.events.once(i6, s5);
    }, this.off = (i6, s5) => {
      this.events.off(i6, s5);
    }, this.removeListener = (i6, s5) => {
      this.events.removeListener(i6, s5);
    }, this.logger = E5(t3, this.name);
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get size() {
    return this.records.size;
  }
  get keys() {
    return Array.from(this.records.keys());
  }
  get values() {
    return Array.from(this.records.values());
  }
  get pending() {
    const e4 = [];
    return this.values.forEach((t3) => {
      if (typeof t3.response < "u") return;
      const i6 = { topic: t3.topic, request: formatJsonRpcRequest(t3.request.method, t3.request.params, t3.id), chainId: t3.chainId };
      return e4.push(i6);
    }), e4;
  }
  async setJsonRpcRecords(e4) {
    await this.core.storage.setItem(this.storageKey, e4);
  }
  async getJsonRpcRecords() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getRecord(e4) {
    this.isInitialized();
    const t3 = this.records.get(e4);
    if (!t3) {
      const { message: i6 } = xe("NO_MATCHING_KEY", `${this.name}: ${e4}`);
      throw new Error(i6);
    }
    return t3;
  }
  async persist() {
    await this.setJsonRpcRecords(this.values), this.events.emit(I4.sync);
  }
  async restore() {
    try {
      const e4 = await this.getJsonRpcRecords();
      if (typeof e4 > "u" || !e4.length) return;
      if (this.records.size) {
        const { message: t3 } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t3), new Error(t3);
      }
      this.cached = e4, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
    } catch (e4) {
      this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e4);
    }
  }
  registerEventListeners() {
    this.events.on(I4.created, (e4) => {
      const t3 = I4.created;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, record: e4 });
    }), this.events.on(I4.updated, (e4) => {
      const t3 = I4.updated;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, record: e4 });
    }), this.events.on(I4.deleted, (e4) => {
      const t3 = I4.deleted;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, record: e4 });
    }), this.core.heartbeat.on(r3.pulse, () => {
      this.cleanup();
    });
  }
  cleanup() {
    try {
      this.isInitialized();
      let e4 = false;
      this.records.forEach((t3) => {
        (0, import_time4.toMiliseconds)(t3.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${t3.id}`), this.records.delete(t3.id), this.events.emit(I4.deleted, t3, false), e4 = true);
      }), e4 && this.persist();
    } catch (e4) {
      this.logger.warn(e4);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var Vt = class extends E6 {
  constructor(e4, t3) {
    super(e4, t3), this.core = e4, this.logger = t3, this.expirations = /* @__PURE__ */ new Map(), this.events = new import_events7.EventEmitter(), this.name = It, this.version = Ct, this.cached = [], this.initialized = false, this.storagePrefix = z5, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i6) => this.expirations.set(i6.target, i6)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.has = (i6) => {
      try {
        const s5 = this.formatTarget(i6);
        return typeof this.getExpiration(s5) < "u";
      } catch {
        return false;
      }
    }, this.set = (i6, s5) => {
      this.isInitialized();
      const r5 = this.formatTarget(i6), o6 = { target: r5, expiry: s5 };
      this.expirations.set(r5, o6), this.checkExpiry(r5, o6), this.events.emit(C5.created, { target: r5, expiration: o6 });
    }, this.get = (i6) => {
      this.isInitialized();
      const s5 = this.formatTarget(i6);
      return this.getExpiration(s5);
    }, this.del = (i6) => {
      if (this.isInitialized(), this.has(i6)) {
        const s5 = this.formatTarget(i6), r5 = this.getExpiration(s5);
        this.expirations.delete(s5), this.events.emit(C5.deleted, { target: s5, expiration: r5 });
      }
    }, this.on = (i6, s5) => {
      this.events.on(i6, s5);
    }, this.once = (i6, s5) => {
      this.events.once(i6, s5);
    }, this.off = (i6, s5) => {
      this.events.off(i6, s5);
    }, this.removeListener = (i6, s5) => {
      this.events.removeListener(i6, s5);
    }, this.logger = E5(t3, this.name);
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.expirations.size;
  }
  get keys() {
    return Array.from(this.expirations.keys());
  }
  get values() {
    return Array.from(this.expirations.values());
  }
  formatTarget(e4) {
    if (typeof e4 == "string") return h0(e4);
    if (typeof e4 == "number") return c0(e4);
    const { message: t3 } = xe("UNKNOWN_TYPE", `Target type: ${typeof e4}`);
    throw new Error(t3);
  }
  async setExpirations(e4) {
    await this.core.storage.setItem(this.storageKey, e4);
  }
  async getExpirations() {
    return await this.core.storage.getItem(this.storageKey);
  }
  async persist() {
    await this.setExpirations(this.values), this.events.emit(C5.sync);
  }
  async restore() {
    try {
      const e4 = await this.getExpirations();
      if (typeof e4 > "u" || !e4.length) return;
      if (this.expirations.size) {
        const { message: t3 } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t3), new Error(t3);
      }
      this.cached = e4, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
    } catch (e4) {
      this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e4);
    }
  }
  getExpiration(e4) {
    const t3 = this.expirations.get(e4);
    if (!t3) {
      const { message: i6 } = xe("NO_MATCHING_KEY", `${this.name}: ${e4}`);
      throw this.logger.warn(i6), new Error(i6);
    }
    return t3;
  }
  checkExpiry(e4, t3) {
    const { expiry: i6 } = t3;
    (0, import_time4.toMiliseconds)(i6) - Date.now() <= 0 && this.expire(e4, t3);
  }
  expire(e4, t3) {
    this.expirations.delete(e4), this.events.emit(C5.expired, { target: e4, expiration: t3 });
  }
  checkExpirations() {
    this.core.relayer.connected && this.expirations.forEach((e4, t3) => this.checkExpiry(t3, e4));
  }
  registerEventListeners() {
    this.core.heartbeat.on(r3.pulse, () => this.checkExpirations()), this.events.on(C5.created, (e4) => {
      const t3 = C5.created;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, data: e4 }), this.persist();
    }), this.events.on(C5.expired, (e4) => {
      const t3 = C5.expired;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, data: e4 }), this.persist();
    }), this.events.on(C5.deleted, (e4) => {
      const t3 = C5.deleted;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, data: e4 }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var jt2 = class extends y5 {
  constructor(e4, t3) {
    super(e4, t3), this.projectId = e4, this.logger = t3, this.name = Z2, this.initialized = false, this.queue = [], this.verifyDisabled = false, this.init = async (i6) => {
      if (this.verifyDisabled || er() || !pr()) return;
      const s5 = this.getVerifyUrl(i6 == null ? void 0 : i6.verifyUrl);
      this.verifyUrl !== s5 && this.removeIframe(), this.verifyUrl = s5;
      try {
        await this.createIframe();
      } catch (r5) {
        this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(r5), this.verifyDisabled = true;
      }
    }, this.register = async (i6) => {
      this.initialized ? this.sendPost(i6.attestationId) : (this.addToQueue(i6.attestationId), await this.init());
    }, this.resolve = async (i6) => {
      if (this.isDevEnv) return "";
      const s5 = this.getVerifyUrl(i6 == null ? void 0 : i6.verifyUrl);
      return this.fetchAttestation(i6.attestationId, s5);
    }, this.fetchAttestation = async (i6, s5) => {
      this.logger.info(`resolving attestation: ${i6} from url: ${s5}`);
      const r5 = this.startAbortTimer(import_time4.ONE_SECOND * 5), o6 = await fetch(`${s5}/attestation/${i6}`, { signal: this.abortController.signal });
      return clearTimeout(r5), o6.status === 200 ? await o6.json() : void 0;
    }, this.addToQueue = (i6) => {
      this.queue.push(i6);
    }, this.processQueue = () => {
      this.queue.length !== 0 && (this.queue.forEach((i6) => this.sendPost(i6)), this.queue = []);
    }, this.sendPost = (i6) => {
      var s5;
      try {
        if (!this.iframe) return;
        (s5 = this.iframe.contentWindow) == null || s5.postMessage(i6, "*"), this.logger.info(`postMessage sent: ${i6} ${this.verifyUrl}`);
      } catch {
      }
    }, this.createIframe = async () => {
      let i6;
      const s5 = (r5) => {
        r5.data === "verify_ready" && (this.onInit(), window.removeEventListener("message", s5), i6());
      };
      await Promise.race([new Promise((r5) => {
        const o6 = document.getElementById(Z2);
        if (o6) return this.iframe = o6, this.onInit(), r5();
        window.addEventListener("message", s5);
        const a6 = document.createElement("iframe");
        a6.id = Z2, a6.src = `${this.verifyUrl}/${this.projectId}`, a6.style.display = "none", document.body.append(a6), this.iframe = a6, i6 = r5;
      }), new Promise((r5, o6) => setTimeout(() => {
        window.removeEventListener("message", s5), o6("verify iframe load timeout");
      }, (0, import_time4.toMiliseconds)(import_time4.FIVE_SECONDS)))]);
    }, this.onInit = () => {
      this.initialized = true, this.processQueue();
    }, this.removeIframe = () => {
      this.iframe && (this.iframe.remove(), this.iframe = void 0, this.initialized = false);
    }, this.getVerifyUrl = (i6) => {
      let s5 = i6 || V3;
      return _t.includes(s5) || (this.logger.info(`verify url: ${s5}, not included in trusted list, assigning default: ${V3}`), s5 = V3), s5;
    }, this.logger = E5(t3, this.name), this.verifyUrl = V3, this.abortController = new AbortController(), this.isDevEnv = pi() && process.env.IS_VITEST;
  }
  get context() {
    return y4(this.logger);
  }
  startAbortTimer(e4) {
    return this.abortController = new AbortController(), setTimeout(() => this.abortController.abort(), (0, import_time4.toMiliseconds)(e4));
  }
};
var Gt2 = class extends v4 {
  constructor(e4, t3) {
    super(e4, t3), this.projectId = e4, this.logger = t3, this.context = Rt, this.registerDeviceToken = async (i6) => {
      const { clientId: s5, token: r5, notificationType: o6, enableEncrypted: a6 = false } = i6, h7 = `${St}/${this.projectId}/clients`;
      await (0, import_isomorphic_unfetch.default)(h7, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ client_id: s5, type: o6, token: r5, always_raw: a6 }) });
    }, this.logger = E5(t3, this.context);
  }
};
var Ur2 = Object.defineProperty;
var Ht2 = Object.getOwnPropertySymbols;
var Fr2 = Object.prototype.hasOwnProperty;
var $r = Object.prototype.propertyIsEnumerable;
var Yt = (n6, e4, t3) => e4 in n6 ? Ur2(n6, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : n6[e4] = t3;
var Jt2 = (n6, e4) => {
  for (var t3 in e4 || (e4 = {})) Fr2.call(e4, t3) && Yt(n6, t3, e4[t3]);
  if (Ht2) for (var t3 of Ht2(e4)) $r.call(e4, t3) && Yt(n6, t3, e4[t3]);
  return n6;
};
var ee = class _ee extends n4 {
  constructor(e4) {
    var t3;
    super(e4), this.protocol = pe2, this.version = Xe2, this.name = Q3, this.events = new import_events7.EventEmitter(), this.initialized = false, this.on = (o6, a6) => this.events.on(o6, a6), this.once = (o6, a6) => this.events.once(o6, a6), this.off = (o6, a6) => this.events.off(o6, a6), this.removeListener = (o6, a6) => this.events.removeListener(o6, a6), this.projectId = e4 == null ? void 0 : e4.projectId, this.relayUrl = (e4 == null ? void 0 : e4.relayUrl) || ye2, this.customStoragePrefix = e4 != null && e4.customStoragePrefix ? `:${e4.customStoragePrefix}` : "";
    const i6 = k4({ level: typeof (e4 == null ? void 0 : e4.logger) == "string" && e4.logger ? e4.logger : We2.logger }), { logger: s5, chunkLoggerController: r5 } = A4({ opts: i6, maxSizeInBytes: e4 == null ? void 0 : e4.maxLogBlobSizeInBytes, loggerOverride: e4 == null ? void 0 : e4.logger });
    this.logChunkController = r5, (t3 = this.logChunkController) != null && t3.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async () => {
      var o6, a6;
      (o6 = this.logChunkController) != null && o6.downloadLogsBlobInBrowser && ((a6 = this.logChunkController) == null || a6.downloadLogsBlobInBrowser({ clientId: await this.crypto.getClientId() }));
    }), this.logger = E5(s5, this.name), this.heartbeat = new i3(), this.crypto = new xt(this, this.logger, e4 == null ? void 0 : e4.keychain), this.history = new qt2(this, this.logger), this.expirer = new Vt(this, this.logger), this.storage = e4 != null && e4.storage ? e4.storage : new h3(Jt2(Jt2({}, Qe), e4 == null ? void 0 : e4.storageOptions)), this.relayer = new Ft2({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new Kt2(this, this.logger), this.verify = new jt2(this.projectId || "", this.logger), this.echoClient = new Gt2(this.projectId || "", this.logger);
  }
  static async init(e4) {
    const t3 = new _ee(e4);
    await t3.initialize();
    const i6 = await t3.crypto.getClientId();
    return await t3.storage.setItem(Dt2, i6), t3;
  }
  get context() {
    return y4(this.logger);
  }
  async start() {
    this.initialized || await this.initialize();
  }
  async getLogsBlob() {
    var e4;
    return (e4 = this.logChunkController) == null ? void 0 : e4.logsToBlob({ clientId: await this.crypto.getClientId() });
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = true, this.logger.info("Core Initialization Success");
    } catch (e4) {
      throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e4), this.logger.error(e4.message), e4;
    }
  }
};
var Mr2 = ee;

// node_modules/@walletconnect/sign-client/dist/index.es.js
var import_events8 = __toESM(require_events());
var import_time5 = __toESM(require_cjs4());
var Ee = "wc";
var Se = 2;
var _e3 = "client";
var ie2 = `${Ee}@${Se}:${_e3}:`;
var re2 = { name: _e3, logger: "error", controller: false, relayUrl: "wss://relay.walletconnect.com" };
var fe2 = "WALLETCONNECT_DEEPLINK_CHOICE";
var Ue2 = "proposal";
var Ge2 = "Proposal expired";
var ke2 = "session";
var $4 = import_time5.SEVEN_DAYS;
var je2 = "engine";
var R3 = { wc_sessionPropose: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1101 }, reject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1120 }, autoReject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1121 } }, wc_sessionSettle: { req: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1114 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1115 } }, wc_sessionAuthenticate: { req: { ttl: import_time5.ONE_HOUR, prompt: true, tag: 1116 }, res: { ttl: import_time5.ONE_HOUR, prompt: false, tag: 1117 }, reject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1118 }, autoReject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1119 } } };
var ne2 = { min: import_time5.FIVE_MINUTES, max: import_time5.SEVEN_DAYS };
var D4 = { idle: "IDLE", active: "ACTIVE" };
var Fe2 = "request";
var Qe2 = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest", "wc_sessionAuthenticate"];
var ze = "wc";
var He2 = "auth";
var Ye2 = "authKeys";
var Xe3 = "pairingTopics";
var Je2 = "requests";
var J2 = `${ze}@${1.5}:${He2}:`;
var B3 = `${J2}:PUB_KEY`;
var Yt2 = Object.defineProperty;
var Xt3 = Object.defineProperties;
var Jt3 = Object.getOwnPropertyDescriptors;
var Be3 = Object.getOwnPropertySymbols;
var Bt2 = Object.prototype.hasOwnProperty;
var Wt2 = Object.prototype.propertyIsEnumerable;
var We3 = (E8, n6, t3) => n6 in E8 ? Yt2(E8, n6, { enumerable: true, configurable: true, writable: true, value: t3 }) : E8[n6] = t3;
var m4 = (E8, n6) => {
  for (var t3 in n6 || (n6 = {})) Bt2.call(n6, t3) && We3(E8, t3, n6[t3]);
  if (Be3) for (var t3 of Be3(n6)) Wt2.call(n6, t3) && We3(E8, t3, n6[t3]);
  return E8;
};
var L5 = (E8, n6) => Xt3(E8, Jt3(n6));
var Zt2 = class extends w5 {
  constructor(n6) {
    super(n6), this.name = je2, this.events = new import_events8.default(), this.initialized = false, this.requestQueue = { state: D4.idle, queue: [] }, this.sessionRequestQueue = { state: D4.idle, queue: [] }, this.requestQueueDelay = import_time5.ONE_SECOND, this.expectedPairingMethodMap = /* @__PURE__ */ new Map(), this.recentlyDeletedMap = /* @__PURE__ */ new Map(), this.recentlyDeletedLimit = 200, this.relayMessageCache = [], this.init = async () => {
      this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), this.client.core.pairing.register({ methods: Object.keys(R3) }), this.initialized = true, setTimeout(() => {
        this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();
      }, (0, import_time5.toMiliseconds)(this.requestQueueDelay)));
    }, this.connect = async (t3) => {
      await this.isInitialized();
      const e4 = L5(m4({}, t3), { requiredNamespaces: t3.requiredNamespaces || {}, optionalNamespaces: t3.optionalNamespaces || {} });
      await this.isValidConnect(e4);
      const { pairingTopic: s5, requiredNamespaces: i6, optionalNamespaces: r5, sessionProperties: o6, relays: a6 } = e4;
      let c7 = s5, h7, d5 = false;
      try {
        c7 && (d5 = this.client.core.pairing.pairings.get(c7).active);
      } catch (v5) {
        throw this.client.logger.error(`connect() -> pairing.get(${c7}) failed`), v5;
      }
      if (!c7 || !d5) {
        const { topic: v5, uri: O4 } = await this.client.core.pairing.create();
        c7 = v5, h7 = O4;
      }
      if (!c7) {
        const { message: v5 } = xe("NO_MATCHING_KEY", `connect() pairing topic: ${c7}`);
        throw new Error(v5);
      }
      const u5 = await this.client.core.crypto.generateKeyPair(), p5 = R3.wc_sessionPropose.req.ttl || import_time5.FIVE_MINUTES, w7 = d0(p5), y8 = m4({ requiredNamespaces: i6, optionalNamespaces: r5, relays: a6 ?? [{ protocol: at }], proposer: { publicKey: u5, metadata: this.client.metadata }, expiryTimestamp: w7, pairingTopic: c7 }, o6 && { sessionProperties: o6 }), { reject: S5, resolve: T5, done: _6 } = a0(p5, Ge2);
      this.events.once(v0("session_connect"), async ({ error: v5, session: O4 }) => {
        if (v5) S5(v5);
        else if (O4) {
          O4.self.publicKey = u5;
          const Q4 = L5(m4({}, O4), { pairingTopic: y8.pairingTopic, requiredNamespaces: y8.requiredNamespaces, optionalNamespaces: y8.optionalNamespaces });
          await this.client.session.set(O4.topic, Q4), await this.setExpiry(O4.topic, O4.expiry), c7 && await this.client.core.pairing.updateMetadata({ topic: c7, metadata: O4.peer.metadata }), this.cleanupDuplicatePairings(Q4), T5(Q4);
        }
      });
      const P3 = await this.sendRequest({ topic: c7, method: "wc_sessionPropose", params: y8, throwOnFailedPublish: true });
      return await this.setProposal(P3, m4({ id: P3 }, y8)), { uri: h7, approval: _6 };
    }, this.pair = async (t3) => {
      await this.isInitialized();
      try {
        return await this.client.core.pairing.pair(t3);
      } catch (e4) {
        throw this.client.logger.error("pair() failed"), e4;
      }
    }, this.approve = async (t3) => {
      await this.isInitialized();
      try {
        await this.isValidApprove(t3);
      } catch (_6) {
        throw this.client.logger.error("approve() -> isValidApprove() failed"), _6;
      }
      const { id: e4, relayProtocol: s5, namespaces: i6, sessionProperties: r5, sessionConfig: o6 } = t3;
      let a6;
      try {
        a6 = this.client.proposal.get(e4);
      } catch (_6) {
        throw this.client.logger.error(`approve() -> proposal.get(${e4}) failed`), _6;
      }
      const { pairingTopic: c7, proposer: h7, requiredNamespaces: d5, optionalNamespaces: u5 } = a6, p5 = await this.client.core.crypto.generateKeyPair(), w7 = h7.publicKey, y8 = await this.client.core.crypto.generateSharedKey(p5, w7), S5 = m4(m4({ relay: { protocol: s5 ?? "irn" }, namespaces: i6, controller: { publicKey: p5, metadata: this.client.metadata }, expiry: d0($4) }, r5 && { sessionProperties: r5 }), o6 && { sessionConfig: o6 });
      await this.client.core.relayer.subscribe(y8);
      const T5 = L5(m4({}, S5), { topic: y8, requiredNamespaces: d5, optionalNamespaces: u5, pairingTopic: c7, acknowledged: false, self: S5.controller, peer: { publicKey: h7.publicKey, metadata: h7.metadata }, controller: p5 });
      await this.client.session.set(y8, T5);
      try {
        await this.sendResult({ id: e4, topic: c7, result: { relay: { protocol: s5 ?? "irn" }, responderPublicKey: p5 }, throwOnFailedPublish: true }), await this.sendRequest({ topic: y8, method: "wc_sessionSettle", params: S5, throwOnFailedPublish: true });
      } catch (_6) {
        throw this.client.logger.error(_6), this.client.session.delete(y8, tr("USER_DISCONNECTED")), await this.client.core.relayer.unsubscribe(y8), _6;
      }
      return await this.client.core.pairing.updateMetadata({ topic: c7, metadata: h7.metadata }), await this.client.proposal.delete(e4, tr("USER_DISCONNECTED")), await this.client.core.pairing.activate({ topic: c7 }), await this.setExpiry(y8, d0($4)), { topic: y8, acknowledged: () => new Promise((_6) => setTimeout(() => _6(this.client.session.get(y8)), 500)) };
    }, this.reject = async (t3) => {
      await this.isInitialized();
      try {
        await this.isValidReject(t3);
      } catch (r5) {
        throw this.client.logger.error("reject() -> isValidReject() failed"), r5;
      }
      const { id: e4, reason: s5 } = t3;
      let i6;
      try {
        i6 = this.client.proposal.get(e4).pairingTopic;
      } catch (r5) {
        throw this.client.logger.error(`reject() -> proposal.get(${e4}) failed`), r5;
      }
      i6 && (await this.sendError({ id: e4, topic: i6, error: s5, rpcOpts: R3.wc_sessionPropose.reject }), await this.client.proposal.delete(e4, tr("USER_DISCONNECTED")));
    }, this.update = async (t3) => {
      await this.isInitialized();
      try {
        await this.isValidUpdate(t3);
      } catch (d5) {
        throw this.client.logger.error("update() -> isValidUpdate() failed"), d5;
      }
      const { topic: e4, namespaces: s5 } = t3, { done: i6, resolve: r5, reject: o6 } = a0(), a6 = payloadId(), c7 = getBigIntRpcId().toString(), h7 = this.client.session.get(e4).namespaces;
      return this.events.once(v0("session_update", a6), ({ error: d5 }) => {
        d5 ? o6(d5) : r5();
      }), await this.client.session.update(e4, { namespaces: s5 }), await this.sendRequest({ topic: e4, method: "wc_sessionUpdate", params: { namespaces: s5 }, throwOnFailedPublish: true, clientRpcId: a6, relayRpcId: c7 }).catch((d5) => {
        this.client.logger.error(d5), this.client.session.update(e4, { namespaces: h7 }), o6(d5);
      }), { acknowledged: i6 };
    }, this.extend = async (t3) => {
      await this.isInitialized();
      try {
        await this.isValidExtend(t3);
      } catch (a6) {
        throw this.client.logger.error("extend() -> isValidExtend() failed"), a6;
      }
      const { topic: e4 } = t3, s5 = payloadId(), { done: i6, resolve: r5, reject: o6 } = a0();
      return this.events.once(v0("session_extend", s5), ({ error: a6 }) => {
        a6 ? o6(a6) : r5();
      }), await this.setExpiry(e4, d0($4)), this.sendRequest({ topic: e4, method: "wc_sessionExtend", params: {}, clientRpcId: s5, throwOnFailedPublish: true }).catch((a6) => {
        o6(a6);
      }), { acknowledged: i6 };
    }, this.request = async (t3) => {
      await this.isInitialized();
      try {
        await this.isValidRequest(t3);
      } catch (p5) {
        throw this.client.logger.error("request() -> isValidRequest() failed"), p5;
      }
      const { chainId: e4, request: s5, topic: i6, expiry: r5 = R3.wc_sessionRequest.req.ttl } = t3, o6 = this.client.session.get(i6), a6 = payloadId(), c7 = getBigIntRpcId().toString(), { done: h7, resolve: d5, reject: u5 } = a0(r5, "Request expired. Please try again.");
      return this.events.once(v0("session_request", a6), ({ error: p5, result: w7 }) => {
        p5 ? u5(p5) : d5(w7);
      }), await Promise.all([new Promise(async (p5) => {
        await this.sendRequest({ clientRpcId: a6, relayRpcId: c7, topic: i6, method: "wc_sessionRequest", params: { request: L5(m4({}, s5), { expiryTimestamp: d0(r5) }), chainId: e4 }, expiry: r5, throwOnFailedPublish: true }).catch((w7) => u5(w7)), this.client.events.emit("session_request_sent", { topic: i6, request: s5, chainId: e4, id: a6 }), p5();
      }), new Promise(async (p5) => {
        var w7;
        if (!((w7 = o6.sessionConfig) != null && w7.disableDeepLink)) {
          const y8 = await g0(this.client.core.storage, fe2);
          m0({ id: a6, topic: i6, wcDeepLink: y8 });
        }
        p5();
      }), h7()]).then((p5) => p5[2]);
    }, this.respond = async (t3) => {
      await this.isInitialized(), await this.isValidRespond(t3);
      const { topic: e4, response: s5 } = t3, { id: i6 } = s5;
      isJsonRpcResult(s5) ? await this.sendResult({ id: i6, topic: e4, result: s5.result, throwOnFailedPublish: true }) : isJsonRpcError(s5) && await this.sendError({ id: i6, topic: e4, error: s5.error }), this.cleanupAfterResponse(t3);
    }, this.ping = async (t3) => {
      await this.isInitialized();
      try {
        await this.isValidPing(t3);
      } catch (s5) {
        throw this.client.logger.error("ping() -> isValidPing() failed"), s5;
      }
      const { topic: e4 } = t3;
      if (this.client.session.keys.includes(e4)) {
        const s5 = payloadId(), i6 = getBigIntRpcId().toString(), { done: r5, resolve: o6, reject: a6 } = a0();
        this.events.once(v0("session_ping", s5), ({ error: c7 }) => {
          c7 ? a6(c7) : o6();
        }), await Promise.all([this.sendRequest({ topic: e4, method: "wc_sessionPing", params: {}, throwOnFailedPublish: true, clientRpcId: s5, relayRpcId: i6 }), r5()]);
      } else this.client.core.pairing.pairings.keys.includes(e4) && await this.client.core.pairing.ping({ topic: e4 });
    }, this.emit = async (t3) => {
      await this.isInitialized(), await this.isValidEmit(t3);
      const { topic: e4, event: s5, chainId: i6 } = t3, r5 = getBigIntRpcId().toString();
      await this.sendRequest({ topic: e4, method: "wc_sessionEvent", params: { event: s5, chainId: i6 }, throwOnFailedPublish: true, relayRpcId: r5 });
    }, this.disconnect = async (t3) => {
      await this.isInitialized(), await this.isValidDisconnect(t3);
      const { topic: e4 } = t3;
      if (this.client.session.keys.includes(e4)) await this.sendRequest({ topic: e4, method: "wc_sessionDelete", params: tr("USER_DISCONNECTED"), throwOnFailedPublish: true }), await this.deleteSession({ topic: e4, emitEvent: false });
      else if (this.client.core.pairing.pairings.keys.includes(e4)) await this.client.core.pairing.disconnect({ topic: e4 });
      else {
        const { message: s5 } = xe("MISMATCHED_TOPIC", `Session or pairing topic not found: ${e4}`);
        throw new Error(s5);
      }
    }, this.find = (t3) => (this.isInitialized(), this.client.session.getAll().filter((e4) => Qu(e4, t3))), this.getPendingSessionRequests = () => this.client.pendingRequest.getAll(), this.authenticate = async (t3) => {
      this.isInitialized(), this.isValidAuthenticate(t3);
      const { chains: e4, statement: s5 = "", uri: i6, domain: r5, nonce: o6, type: a6, exp: c7, nbf: h7, methods: d5 = [], expiry: u5 } = t3, p5 = [...t3.resources || []], { topic: w7, uri: y8 } = await this.client.core.pairing.create({ methods: ["wc_sessionAuthenticate"] });
      this.client.logger.info({ message: "Generated new pairing", pairing: { topic: w7, uri: y8 } });
      const S5 = await this.client.core.crypto.generateKeyPair(), T5 = bu(S5);
      if (await Promise.all([this.client.auth.authKeys.set(B3, { responseTopic: T5, publicKey: S5 }), this.client.auth.pairingTopics.set(T5, { topic: T5, pairingTopic: w7 })]), await this.client.core.relayer.subscribe(T5), this.client.logger.info(`sending request to new pairing topic: ${w7}`), d5.length > 0) {
        const { namespace: A5 } = dn(e4[0]);
        let f6 = cu(A5, "request", d5);
        Qr(p5) && (f6 = lu(f6, p5.pop())), p5.push(f6);
      }
      const _6 = u5 && u5 > R3.wc_sessionAuthenticate.req.ttl ? u5 : R3.wc_sessionAuthenticate.req.ttl, P3 = { authPayload: { type: a6 ?? "caip122", chains: e4, statement: s5, aud: i6, domain: r5, version: "1", nonce: o6, iat: (/* @__PURE__ */ new Date()).toISOString(), exp: c7, nbf: h7, resources: p5 }, requester: { publicKey: S5, metadata: this.client.metadata }, expiryTimestamp: d0(_6) }, v5 = { eip155: { chains: e4, methods: [.../* @__PURE__ */ new Set(["personal_sign", ...d5])], events: ["chainChanged", "accountsChanged"] } }, O4 = { requiredNamespaces: {}, optionalNamespaces: v5, relays: [{ protocol: "irn" }], pairingTopic: w7, proposer: { publicKey: S5, metadata: this.client.metadata }, expiryTimestamp: d0(R3.wc_sessionPropose.req.ttl) }, { done: Q4, resolve: Ie, reject: ae2 } = a0(_6, "Request expired"), W3 = async ({ error: A5, session: f6 }) => {
        if (this.events.off(v0("session_request", K5), ce3), A5) ae2(A5);
        else if (f6) {
          f6.self.publicKey = S5, await this.client.session.set(f6.topic, f6), await this.setExpiry(f6.topic, f6.expiry), w7 && await this.client.core.pairing.updateMetadata({ topic: w7, metadata: f6.peer.metadata });
          const U4 = this.client.session.get(f6.topic);
          await this.deleteProposal(z6), Ie({ session: U4 });
        }
      }, ce3 = async (A5) => {
        if (await this.deletePendingAuthRequest(K5, { message: "fulfilled", code: 0 }), A5.error) {
          const H3 = tr("WC_METHOD_UNSUPPORTED", "wc_sessionAuthenticate");
          return A5.error.code === H3.code ? void 0 : (this.events.off(v0("session_connect"), W3), ae2(A5.error.message));
        }
        await this.deleteProposal(z6), this.events.off(v0("session_connect"), W3);
        const { cacaos: f6, responder: U4 } = A5.result, le3 = [], qe2 = [];
        for (const H3 of f6) {
          await ou({ cacao: H3, projectId: this.client.core.projectId }) || (this.client.logger.error(H3, "Signature verification failed"), ae2(tr("SESSION_SETTLEMENT_FAILED", "Signature verification failed")));
          const { p: he3 } = H3, pe3 = Qr(he3.resources), Ne2 = [fu(he3.iss)], et2 = Li(he3.iss);
          if (pe3) {
            const de3 = du(pe3), tt2 = pu(pe3);
            le3.push(...de3), Ne2.push(...tt2);
          }
          for (const de3 of Ne2) qe2.push(`${de3}:${et2}`);
        }
        const Z3 = await this.client.core.crypto.generateSharedKey(S5, U4.publicKey);
        let ee2;
        le3.length > 0 && (ee2 = { topic: Z3, acknowledged: true, self: { publicKey: S5, metadata: this.client.metadata }, peer: U4, controller: U4.publicKey, expiry: d0($4), requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: w7, namespaces: ju([...new Set(le3)], [...new Set(qe2)]) }, await this.client.core.relayer.subscribe(Z3), await this.client.session.set(Z3, ee2), w7 && await this.client.core.pairing.updateMetadata({ topic: w7, metadata: U4.metadata }), ee2 = this.client.session.get(Z3)), Ie({ auths: f6, session: ee2 });
      }, K5 = payloadId(), z6 = payloadId();
      this.events.once(v0("session_connect"), W3), this.events.once(v0("session_request", K5), ce3);
      try {
        await Promise.all([this.sendRequest({ topic: w7, method: "wc_sessionAuthenticate", params: P3, expiry: t3.expiry, throwOnFailedPublish: true, clientRpcId: K5 }), this.sendRequest({ topic: w7, method: "wc_sessionPropose", params: O4, expiry: R3.wc_sessionPropose.req.ttl, throwOnFailedPublish: true, clientRpcId: z6 })]);
      } catch (A5) {
        throw this.events.off(v0("session_connect"), W3), this.events.off(v0("session_request", K5), ce3), A5;
      }
      return await this.setProposal(z6, m4({ id: z6 }, O4)), await this.setAuthRequest(K5, { request: L5(m4({}, P3), { verifyContext: {} }), pairingTopic: w7 }), { uri: y8, response: Q4 };
    }, this.approveSessionAuthenticate = async (t3) => {
      this.isInitialized();
      const { id: e4, auths: s5 } = t3, i6 = this.getPendingAuthRequest(e4);
      if (!i6) throw new Error(`Could not find pending auth request with id ${e4}`);
      const r5 = i6.requester.publicKey, o6 = await this.client.core.crypto.generateKeyPair(), a6 = bu(r5), c7 = { type: lr, receiverPublicKey: r5, senderPublicKey: o6 }, h7 = [], d5 = [];
      for (const w7 of s5) {
        if (!await ou({ cacao: w7, projectId: this.client.core.projectId })) {
          const P3 = tr("SESSION_SETTLEMENT_FAILED", "Signature verification failed");
          throw await this.sendError({ id: e4, topic: a6, error: P3, encodeOpts: c7 }), new Error(P3.message);
        }
        const { p: y8 } = w7, S5 = Qr(y8.resources), T5 = [fu(y8.iss)], _6 = Li(y8.iss);
        if (S5) {
          const P3 = du(S5), v5 = pu(S5);
          h7.push(...P3), T5.push(...v5);
        }
        for (const P3 of T5) d5.push(`${P3}:${_6}`);
      }
      const u5 = await this.client.core.crypto.generateSharedKey(o6, r5);
      let p5;
      return (h7 == null ? void 0 : h7.length) > 0 && (p5 = { topic: u5, acknowledged: true, self: { publicKey: o6, metadata: this.client.metadata }, peer: { publicKey: r5, metadata: i6.requester.metadata }, controller: r5, expiry: d0($4), authentication: s5, requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: i6.pairingTopic, namespaces: ju([...new Set(h7)], [...new Set(d5)]) }, await this.client.core.relayer.subscribe(u5), await this.client.session.set(u5, p5), await this.client.core.pairing.updateMetadata({ topic: i6.pairingTopic, metadata: i6.requester.metadata })), await this.sendResult({ topic: a6, id: e4, result: { cacaos: s5, responder: { publicKey: o6, metadata: this.client.metadata } }, encodeOpts: c7, throwOnFailedPublish: true }), await this.client.auth.requests.delete(e4, { message: "fulfilled", code: 0 }), await this.client.core.pairing.activate({ topic: i6.pairingTopic }), { session: p5 };
    }, this.rejectSessionAuthenticate = async (t3) => {
      await this.isInitialized();
      const { id: e4, reason: s5 } = t3, i6 = this.getPendingAuthRequest(e4);
      if (!i6) throw new Error(`Could not find pending auth request with id ${e4}`);
      const r5 = i6.requester.publicKey, o6 = await this.client.core.crypto.generateKeyPair(), a6 = bu(r5), c7 = { type: lr, receiverPublicKey: r5, senderPublicKey: o6 };
      await this.sendError({ id: e4, topic: a6, error: s5, encodeOpts: c7, rpcOpts: R3.wc_sessionAuthenticate.reject }), await this.client.auth.requests.delete(e4, { message: "rejected", code: 0 }), await this.client.proposal.delete(e4, tr("USER_DISCONNECTED"));
    }, this.formatAuthMessage = (t3) => {
      this.isInitialized();
      const { request: e4, iss: s5 } = t3;
      return zf(e4, s5);
    }, this.processRelayMessageCache = () => {
      setTimeout(async () => {
        if (this.relayMessageCache.length !== 0) for (; this.relayMessageCache.length > 0; ) try {
          const t3 = this.relayMessageCache.shift();
          t3 && await this.onRelayMessage(t3);
        } catch (t3) {
          this.client.logger.error(t3);
        }
      }, 50);
    }, this.cleanupDuplicatePairings = async (t3) => {
      if (t3.pairingTopic) try {
        const e4 = this.client.core.pairing.pairings.get(t3.pairingTopic), s5 = this.client.core.pairing.pairings.getAll().filter((i6) => {
          var r5, o6;
          return ((r5 = i6.peerMetadata) == null ? void 0 : r5.url) && ((o6 = i6.peerMetadata) == null ? void 0 : o6.url) === t3.peer.metadata.url && i6.topic && i6.topic !== e4.topic;
        });
        if (s5.length === 0) return;
        this.client.logger.info(`Cleaning up ${s5.length} duplicate pairing(s)`), await Promise.all(s5.map((i6) => this.client.core.pairing.disconnect({ topic: i6.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
      } catch (e4) {
        this.client.logger.error(e4);
      }
    }, this.deleteSession = async (t3) => {
      var e4;
      const { topic: s5, expirerHasDeleted: i6 = false, emitEvent: r5 = true, id: o6 = 0 } = t3, { self: a6 } = this.client.session.get(s5);
      await this.client.core.relayer.unsubscribe(s5), await this.client.session.delete(s5, tr("USER_DISCONNECTED")), this.addToRecentlyDeleted(s5, "session"), this.client.core.crypto.keychain.has(a6.publicKey) && await this.client.core.crypto.deleteKeyPair(a6.publicKey), this.client.core.crypto.keychain.has(s5) && await this.client.core.crypto.deleteSymKey(s5), i6 || this.client.core.expirer.del(s5), this.client.core.storage.removeItem(fe2).catch((c7) => this.client.logger.warn(c7)), this.getPendingSessionRequests().forEach((c7) => {
        c7.topic === s5 && this.deletePendingSessionRequest(c7.id, tr("USER_DISCONNECTED"));
      }), s5 === ((e4 = this.sessionRequestQueue.queue[0]) == null ? void 0 : e4.topic) && (this.sessionRequestQueue.state = D4.idle), r5 && this.client.events.emit("session_delete", { id: o6, topic: s5 });
    }, this.deleteProposal = async (t3, e4) => {
      await Promise.all([this.client.proposal.delete(t3, tr("USER_DISCONNECTED")), e4 ? Promise.resolve() : this.client.core.expirer.del(t3)]), this.addToRecentlyDeleted(t3, "proposal");
    }, this.deletePendingSessionRequest = async (t3, e4, s5 = false) => {
      await Promise.all([this.client.pendingRequest.delete(t3, e4), s5 ? Promise.resolve() : this.client.core.expirer.del(t3)]), this.addToRecentlyDeleted(t3, "request"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i6) => i6.id !== t3), s5 && (this.sessionRequestQueue.state = D4.idle, this.client.events.emit("session_request_expire", { id: t3 }));
    }, this.deletePendingAuthRequest = async (t3, e4, s5 = false) => {
      await Promise.all([this.client.auth.requests.delete(t3, e4), s5 ? Promise.resolve() : this.client.core.expirer.del(t3)]);
    }, this.setExpiry = async (t3, e4) => {
      this.client.session.keys.includes(t3) && (this.client.core.expirer.set(t3, e4), await this.client.session.update(t3, { expiry: e4 }));
    }, this.setProposal = async (t3, e4) => {
      this.client.core.expirer.set(t3, d0(R3.wc_sessionPropose.req.ttl)), await this.client.proposal.set(t3, e4);
    }, this.setAuthRequest = async (t3, e4) => {
      const { request: s5, pairingTopic: i6 } = e4;
      this.client.core.expirer.set(t3, s5.expiryTimestamp), await this.client.auth.requests.set(t3, { authPayload: s5.authPayload, requester: s5.requester, expiryTimestamp: s5.expiryTimestamp, id: t3, pairingTopic: i6, verifyContext: s5.verifyContext });
    }, this.setPendingSessionRequest = async (t3) => {
      const { id: e4, topic: s5, params: i6, verifyContext: r5 } = t3, o6 = i6.request.expiryTimestamp || d0(R3.wc_sessionRequest.req.ttl);
      this.client.core.expirer.set(e4, o6), await this.client.pendingRequest.set(e4, { id: e4, topic: s5, params: i6, verifyContext: r5 });
    }, this.sendRequest = async (t3) => {
      const { topic: e4, method: s5, params: i6, expiry: r5, relayRpcId: o6, clientRpcId: a6, throwOnFailedPublish: c7 } = t3, h7 = formatJsonRpcRequest(s5, i6, a6);
      if (pr() && Qe2.includes(s5)) {
        const p5 = yu(JSON.stringify(h7));
        this.client.core.verify.register({ attestationId: p5 });
      }
      let d5;
      try {
        d5 = await this.client.core.crypto.encode(e4, h7);
      } catch (p5) {
        throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${e4} failed`), p5;
      }
      const u5 = R3[s5].req;
      return r5 && (u5.ttl = r5), o6 && (u5.id = o6), this.client.core.history.set(e4, h7), c7 ? (u5.internal = L5(m4({}, u5.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(e4, d5, u5)) : this.client.core.relayer.publish(e4, d5, u5).catch((p5) => this.client.logger.error(p5)), h7.id;
    }, this.sendResult = async (t3) => {
      const { id: e4, topic: s5, result: i6, throwOnFailedPublish: r5, encodeOpts: o6 } = t3, a6 = formatJsonRpcResult(e4, i6);
      let c7;
      try {
        c7 = await this.client.core.crypto.encode(s5, a6, o6);
      } catch (u5) {
        throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${s5} failed`), u5;
      }
      let h7;
      try {
        h7 = await this.client.core.history.get(s5, e4);
      } catch (u5) {
        throw this.client.logger.error(`sendResult() -> history.get(${s5}, ${e4}) failed`), u5;
      }
      const d5 = R3[h7.request.method].res;
      r5 ? (d5.internal = L5(m4({}, d5.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(s5, c7, d5)) : this.client.core.relayer.publish(s5, c7, d5).catch((u5) => this.client.logger.error(u5)), await this.client.core.history.resolve(a6);
    }, this.sendError = async (t3) => {
      const { id: e4, topic: s5, error: i6, encodeOpts: r5, rpcOpts: o6 } = t3, a6 = formatJsonRpcError(e4, i6);
      let c7;
      try {
        c7 = await this.client.core.crypto.encode(s5, a6, r5);
      } catch (u5) {
        throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${s5} failed`), u5;
      }
      let h7;
      try {
        h7 = await this.client.core.history.get(s5, e4);
      } catch (u5) {
        throw this.client.logger.error(`sendError() -> history.get(${s5}, ${e4}) failed`), u5;
      }
      const d5 = o6 || R3[h7.request.method].res;
      this.client.core.relayer.publish(s5, c7, d5), await this.client.core.history.resolve(a6);
    }, this.cleanup = async () => {
      const t3 = [], e4 = [];
      this.client.session.getAll().forEach((s5) => {
        let i6 = false;
        p0(s5.expiry) && (i6 = true), this.client.core.crypto.keychain.has(s5.topic) || (i6 = true), i6 && t3.push(s5.topic);
      }), this.client.proposal.getAll().forEach((s5) => {
        p0(s5.expiryTimestamp) && e4.push(s5.id);
      }), await Promise.all([...t3.map((s5) => this.deleteSession({ topic: s5 })), ...e4.map((s5) => this.deleteProposal(s5))]);
    }, this.onRelayEventRequest = async (t3) => {
      this.requestQueue.queue.push(t3), await this.processRequestsQueue();
    }, this.processRequestsQueue = async () => {
      if (this.requestQueue.state === D4.active) {
        this.client.logger.info("Request queue already active, skipping...");
        return;
      }
      for (this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0; ) {
        this.requestQueue.state = D4.active;
        const t3 = this.requestQueue.queue.shift();
        if (t3) try {
          await this.processRequest(t3);
        } catch (e4) {
          this.client.logger.warn(e4);
        }
      }
      this.requestQueue.state = D4.idle;
    }, this.processRequest = async (t3) => {
      const { topic: e4, payload: s5 } = t3, i6 = s5.method;
      if (!this.shouldIgnorePairingRequest({ topic: e4, requestMethod: i6 })) switch (i6) {
        case "wc_sessionPropose":
          return await this.onSessionProposeRequest(e4, s5);
        case "wc_sessionSettle":
          return await this.onSessionSettleRequest(e4, s5);
        case "wc_sessionUpdate":
          return await this.onSessionUpdateRequest(e4, s5);
        case "wc_sessionExtend":
          return await this.onSessionExtendRequest(e4, s5);
        case "wc_sessionPing":
          return await this.onSessionPingRequest(e4, s5);
        case "wc_sessionDelete":
          return await this.onSessionDeleteRequest(e4, s5);
        case "wc_sessionRequest":
          return await this.onSessionRequest(e4, s5);
        case "wc_sessionEvent":
          return await this.onSessionEventRequest(e4, s5);
        case "wc_sessionAuthenticate":
          return await this.onSessionAuthenticateRequest(e4, s5);
        default:
          return this.client.logger.info(`Unsupported request method ${i6}`);
      }
    }, this.onRelayEventResponse = async (t3) => {
      const { topic: e4, payload: s5 } = t3, i6 = (await this.client.core.history.get(e4, s5.id)).request.method;
      switch (i6) {
        case "wc_sessionPropose":
          return this.onSessionProposeResponse(e4, s5);
        case "wc_sessionSettle":
          return this.onSessionSettleResponse(e4, s5);
        case "wc_sessionUpdate":
          return this.onSessionUpdateResponse(e4, s5);
        case "wc_sessionExtend":
          return this.onSessionExtendResponse(e4, s5);
        case "wc_sessionPing":
          return this.onSessionPingResponse(e4, s5);
        case "wc_sessionRequest":
          return this.onSessionRequestResponse(e4, s5);
        case "wc_sessionAuthenticate":
          return this.onSessionAuthenticateResponse(e4, s5);
        default:
          return this.client.logger.info(`Unsupported response method ${i6}`);
      }
    }, this.onRelayEventUnknownPayload = (t3) => {
      const { topic: e4 } = t3, { message: s5 } = xe("MISSING_OR_INVALID", `Decoded payload on topic ${e4} is not identifiable as a JSON-RPC request or a response.`);
      throw new Error(s5);
    }, this.shouldIgnorePairingRequest = (t3) => {
      const { topic: e4, requestMethod: s5 } = t3, i6 = this.expectedPairingMethodMap.get(e4);
      return !i6 || i6.includes(s5) ? false : !!(i6.includes("wc_sessionAuthenticate") && this.client.events.listenerCount("session_authenticate") > 0);
    }, this.onSessionProposeRequest = async (t3, e4) => {
      const { params: s5, id: i6 } = e4;
      try {
        this.isValidConnect(m4({}, e4.params));
        const r5 = s5.expiryTimestamp || d0(R3.wc_sessionPropose.req.ttl), o6 = m4({ id: i6, pairingTopic: t3, expiryTimestamp: r5 }, s5);
        await this.setProposal(i6, o6);
        const a6 = yu(JSON.stringify(e4)), c7 = await this.getVerifyContext(a6, o6.proposer.metadata);
        this.client.events.emit("session_proposal", { id: i6, params: o6, verifyContext: c7 });
      } catch (r5) {
        await this.sendError({ id: i6, topic: t3, error: r5, rpcOpts: R3.wc_sessionPropose.autoReject }), this.client.logger.error(r5);
      }
    }, this.onSessionProposeResponse = async (t3, e4) => {
      const { id: s5 } = e4;
      if (isJsonRpcResult(e4)) {
        const { result: i6 } = e4;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: i6 });
        const r5 = this.client.proposal.get(s5);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: r5 });
        const o6 = r5.proposer.publicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: o6 });
        const a6 = i6.responderPublicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: a6 });
        const c7 = await this.client.core.crypto.generateSharedKey(o6, a6);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", sessionTopic: c7 });
        const h7 = await this.client.core.relayer.subscribe(c7);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: h7 }), await this.client.core.pairing.activate({ topic: t3 });
      } else if (isJsonRpcError(e4)) {
        await this.client.proposal.delete(s5, tr("USER_DISCONNECTED"));
        const i6 = v0("session_connect");
        if (this.events.listenerCount(i6) === 0) throw new Error(`emitting ${i6} without any listeners, 954`);
        this.events.emit(v0("session_connect"), { error: e4.error });
      }
    }, this.onSessionSettleRequest = async (t3, e4) => {
      const { id: s5, params: i6 } = e4;
      try {
        this.isValidSessionSettleRequest(i6);
        const { relay: r5, controller: o6, expiry: a6, namespaces: c7, sessionProperties: h7, sessionConfig: d5 } = e4.params, u5 = m4(m4({ topic: t3, relay: r5, expiry: a6, namespaces: c7, acknowledged: true, pairingTopic: "", requiredNamespaces: {}, optionalNamespaces: {}, controller: o6.publicKey, self: { publicKey: "", metadata: this.client.metadata }, peer: { publicKey: o6.publicKey, metadata: o6.metadata } }, h7 && { sessionProperties: h7 }), d5 && { sessionConfig: d5 });
        await this.sendResult({ id: e4.id, topic: t3, result: true, throwOnFailedPublish: true });
        const p5 = v0("session_connect");
        if (this.events.listenerCount(p5) === 0) throw new Error(`emitting ${p5} without any listeners 997`);
        this.events.emit(v0("session_connect"), { session: u5 });
      } catch (r5) {
        await this.sendError({ id: s5, topic: t3, error: r5 }), this.client.logger.error(r5);
      }
    }, this.onSessionSettleResponse = async (t3, e4) => {
      const { id: s5 } = e4;
      isJsonRpcResult(e4) ? (await this.client.session.update(t3, { acknowledged: true }), this.events.emit(v0("session_approve", s5), {})) : isJsonRpcError(e4) && (await this.client.session.delete(t3, tr("USER_DISCONNECTED")), this.events.emit(v0("session_approve", s5), { error: e4.error }));
    }, this.onSessionUpdateRequest = async (t3, e4) => {
      const { params: s5, id: i6 } = e4;
      try {
        const r5 = `${t3}_session_update`, o6 = lh.get(r5);
        if (o6 && this.isRequestOutOfSync(o6, i6)) {
          this.client.logger.info(`Discarding out of sync request - ${i6}`), this.sendError({ id: i6, topic: t3, error: tr("INVALID_UPDATE_REQUEST") });
          return;
        }
        this.isValidUpdate(m4({ topic: t3 }, s5));
        try {
          lh.set(r5, i6), await this.client.session.update(t3, { namespaces: s5.namespaces }), await this.sendResult({ id: i6, topic: t3, result: true, throwOnFailedPublish: true });
        } catch (a6) {
          throw lh.delete(r5), a6;
        }
        this.client.events.emit("session_update", { id: i6, topic: t3, params: s5 });
      } catch (r5) {
        await this.sendError({ id: i6, topic: t3, error: r5 }), this.client.logger.error(r5);
      }
    }, this.isRequestOutOfSync = (t3, e4) => parseInt(e4.toString().slice(0, -3)) <= parseInt(t3.toString().slice(0, -3)), this.onSessionUpdateResponse = (t3, e4) => {
      const { id: s5 } = e4, i6 = v0("session_update", s5);
      if (this.events.listenerCount(i6) === 0) throw new Error(`emitting ${i6} without any listeners`);
      isJsonRpcResult(e4) ? this.events.emit(v0("session_update", s5), {}) : isJsonRpcError(e4) && this.events.emit(v0("session_update", s5), { error: e4.error });
    }, this.onSessionExtendRequest = async (t3, e4) => {
      const { id: s5 } = e4;
      try {
        this.isValidExtend({ topic: t3 }), await this.setExpiry(t3, d0($4)), await this.sendResult({ id: s5, topic: t3, result: true, throwOnFailedPublish: true }), this.client.events.emit("session_extend", { id: s5, topic: t3 });
      } catch (i6) {
        await this.sendError({ id: s5, topic: t3, error: i6 }), this.client.logger.error(i6);
      }
    }, this.onSessionExtendResponse = (t3, e4) => {
      const { id: s5 } = e4, i6 = v0("session_extend", s5);
      if (this.events.listenerCount(i6) === 0) throw new Error(`emitting ${i6} without any listeners`);
      isJsonRpcResult(e4) ? this.events.emit(v0("session_extend", s5), {}) : isJsonRpcError(e4) && this.events.emit(v0("session_extend", s5), { error: e4.error });
    }, this.onSessionPingRequest = async (t3, e4) => {
      const { id: s5 } = e4;
      try {
        this.isValidPing({ topic: t3 }), await this.sendResult({ id: s5, topic: t3, result: true, throwOnFailedPublish: true }), this.client.events.emit("session_ping", { id: s5, topic: t3 });
      } catch (i6) {
        await this.sendError({ id: s5, topic: t3, error: i6 }), this.client.logger.error(i6);
      }
    }, this.onSessionPingResponse = (t3, e4) => {
      const { id: s5 } = e4, i6 = v0("session_ping", s5);
      if (this.events.listenerCount(i6) === 0) throw new Error(`emitting ${i6} without any listeners`);
      setTimeout(() => {
        isJsonRpcResult(e4) ? this.events.emit(v0("session_ping", s5), {}) : isJsonRpcError(e4) && this.events.emit(v0("session_ping", s5), { error: e4.error });
      }, 500);
    }, this.onSessionDeleteRequest = async (t3, e4) => {
      const { id: s5 } = e4;
      try {
        this.isValidDisconnect({ topic: t3, reason: e4.params }), await Promise.all([new Promise((i6) => {
          this.client.core.relayer.once(f5.publish, async () => {
            i6(await this.deleteSession({ topic: t3, id: s5 }));
          });
        }), this.sendResult({ id: s5, topic: t3, result: true, throwOnFailedPublish: true }), this.cleanupPendingSentRequestsForTopic({ topic: t3, error: tr("USER_DISCONNECTED") })]);
      } catch (i6) {
        this.client.logger.error(i6);
      }
    }, this.onSessionRequest = async (t3, e4) => {
      var s5;
      const { id: i6, params: r5 } = e4;
      try {
        await this.isValidRequest(m4({ topic: t3 }, r5));
        const o6 = yu(JSON.stringify(formatJsonRpcRequest("wc_sessionRequest", r5, i6))), a6 = this.client.session.get(t3), c7 = await this.getVerifyContext(o6, a6.peer.metadata), h7 = { id: i6, topic: t3, params: r5, verifyContext: c7 };
        await this.setPendingSessionRequest(h7), (s5 = this.client.signConfig) != null && s5.disableRequestQueue ? this.emitSessionRequest(h7) : (this.addSessionRequestToSessionRequestQueue(h7), this.processSessionRequestQueue());
      } catch (o6) {
        await this.sendError({ id: i6, topic: t3, error: o6 }), this.client.logger.error(o6);
      }
    }, this.onSessionRequestResponse = (t3, e4) => {
      const { id: s5 } = e4, i6 = v0("session_request", s5);
      if (this.events.listenerCount(i6) === 0) throw new Error(`emitting ${i6} without any listeners`);
      isJsonRpcResult(e4) ? this.events.emit(v0("session_request", s5), { result: e4.result }) : isJsonRpcError(e4) && this.events.emit(v0("session_request", s5), { error: e4.error });
    }, this.onSessionEventRequest = async (t3, e4) => {
      const { id: s5, params: i6 } = e4;
      try {
        const r5 = `${t3}_session_event_${i6.event.name}`, o6 = lh.get(r5);
        if (o6 && this.isRequestOutOfSync(o6, s5)) {
          this.client.logger.info(`Discarding out of sync request - ${s5}`);
          return;
        }
        this.isValidEmit(m4({ topic: t3 }, i6)), this.client.events.emit("session_event", { id: s5, topic: t3, params: i6 }), lh.set(r5, s5);
      } catch (r5) {
        await this.sendError({ id: s5, topic: t3, error: r5 }), this.client.logger.error(r5);
      }
    }, this.onSessionAuthenticateResponse = (t3, e4) => {
      const { id: s5 } = e4;
      this.client.logger.trace({ type: "method", method: "onSessionAuthenticateResponse", topic: t3, payload: e4 }), isJsonRpcResult(e4) ? this.events.emit(v0("session_request", s5), { result: e4.result }) : isJsonRpcError(e4) && this.events.emit(v0("session_request", s5), { error: e4.error });
    }, this.onSessionAuthenticateRequest = async (t3, e4) => {
      try {
        const { requester: s5, authPayload: i6, expiryTimestamp: r5 } = e4.params, o6 = yu(JSON.stringify(e4)), a6 = await this.getVerifyContext(o6, this.client.metadata), c7 = { requester: s5, pairingTopic: t3, id: e4.id, authPayload: i6, verifyContext: a6, expiryTimestamp: r5 };
        await this.setAuthRequest(e4.id, { request: c7, pairingTopic: t3 }), this.client.events.emit("session_authenticate", { topic: t3, params: e4.params, id: e4.id, verifyContext: a6 });
      } catch (s5) {
        this.client.logger.error(s5);
        const i6 = e4.params.requester.publicKey, r5 = await this.client.core.crypto.generateKeyPair(), o6 = { type: lr, receiverPublicKey: i6, senderPublicKey: r5 };
        await this.sendError({ id: e4.id, topic: t3, error: s5, encodeOpts: o6, rpcOpts: R3.wc_sessionAuthenticate.autoReject });
      }
    }, this.addSessionRequestToSessionRequestQueue = (t3) => {
      this.sessionRequestQueue.queue.push(t3);
    }, this.cleanupAfterResponse = (t3) => {
      this.deletePendingSessionRequest(t3.response.id, { message: "fulfilled", code: 0 }), setTimeout(() => {
        this.sessionRequestQueue.state = D4.idle, this.processSessionRequestQueue();
      }, (0, import_time5.toMiliseconds)(this.requestQueueDelay));
    }, this.cleanupPendingSentRequestsForTopic = ({ topic: t3, error: e4 }) => {
      const s5 = this.client.core.history.pending;
      s5.length > 0 && s5.filter((i6) => i6.topic === t3 && i6.request.method === "wc_sessionRequest").forEach((i6) => {
        const r5 = i6.request.id, o6 = v0("session_request", r5);
        if (this.events.listenerCount(o6) === 0) throw new Error(`emitting ${o6} without any listeners`);
        this.events.emit(v0("session_request", i6.request.id), { error: e4 });
      });
    }, this.processSessionRequestQueue = () => {
      if (this.sessionRequestQueue.state === D4.active) {
        this.client.logger.info("session request queue is already active.");
        return;
      }
      const t3 = this.sessionRequestQueue.queue[0];
      if (!t3) {
        this.client.logger.info("session request queue is empty.");
        return;
      }
      try {
        this.sessionRequestQueue.state = D4.active, this.emitSessionRequest(t3);
      } catch (e4) {
        this.client.logger.error(e4);
      }
    }, this.emitSessionRequest = (t3) => {
      this.client.events.emit("session_request", t3);
    }, this.onPairingCreated = (t3) => {
      if (t3.methods && this.expectedPairingMethodMap.set(t3.topic, t3.methods), t3.active) return;
      const e4 = this.client.proposal.getAll().find((s5) => s5.pairingTopic === t3.topic);
      e4 && this.onSessionProposeRequest(t3.topic, formatJsonRpcRequest("wc_sessionPropose", { requiredNamespaces: e4.requiredNamespaces, optionalNamespaces: e4.optionalNamespaces, relays: e4.relays, proposer: e4.proposer, sessionProperties: e4.sessionProperties }, e4.id));
    }, this.isValidConnect = async (t3) => {
      if (!$u(t3)) {
        const { message: a6 } = xe("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(t3)}`);
        throw new Error(a6);
      }
      const { pairingTopic: e4, requiredNamespaces: s5, optionalNamespaces: i6, sessionProperties: r5, relays: o6 } = t3;
      if (Pe(e4) || await this.isValidPairingTopic(e4), !Xu(o6, true)) {
        const { message: a6 } = xe("MISSING_OR_INVALID", `connect() relays: ${o6}`);
        throw new Error(a6);
      }
      !Pe(s5) && Yr(s5) !== 0 && this.validateNamespaces(s5, "requiredNamespaces"), !Pe(i6) && Yr(i6) !== 0 && this.validateNamespaces(i6, "optionalNamespaces"), Pe(r5) || this.validateSessionProps(r5, "sessionProperties");
    }, this.validateNamespaces = (t3, e4) => {
      const s5 = Wu(t3, "connect()", e4);
      if (s5) throw new Error(s5.message);
    }, this.isValidApprove = async (t3) => {
      if (!$u(t3)) throw new Error(xe("MISSING_OR_INVALID", `approve() params: ${t3}`).message);
      const { id: e4, namespaces: s5, relayProtocol: i6, sessionProperties: r5 } = t3;
      this.checkRecentlyDeleted(e4), await this.isValidProposalId(e4);
      const o6 = this.client.proposal.get(e4), a6 = So(s5, "approve()");
      if (a6) throw new Error(a6.message);
      const c7 = Io(o6.requiredNamespaces, s5, "approve()");
      if (c7) throw new Error(c7.message);
      if (!Gt(i6, true)) {
        const { message: h7 } = xe("MISSING_OR_INVALID", `approve() relayProtocol: ${i6}`);
        throw new Error(h7);
      }
      Pe(r5) || this.validateSessionProps(r5, "sessionProperties");
    }, this.isValidReject = async (t3) => {
      if (!$u(t3)) {
        const { message: i6 } = xe("MISSING_OR_INVALID", `reject() params: ${t3}`);
        throw new Error(i6);
      }
      const { id: e4, reason: s5 } = t3;
      if (this.checkRecentlyDeleted(e4), await this.isValidProposalId(e4), !th(s5)) {
        const { message: i6 } = xe("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(s5)}`);
        throw new Error(i6);
      }
    }, this.isValidSessionSettleRequest = (t3) => {
      if (!$u(t3)) {
        const { message: c7 } = xe("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${t3}`);
        throw new Error(c7);
      }
      const { relay: e4, controller: s5, namespaces: i6, expiry: r5 } = t3;
      if (!No(e4)) {
        const { message: c7 } = xe("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
        throw new Error(c7);
      }
      const o6 = Vu(s5, "onSessionSettleRequest()");
      if (o6) throw new Error(o6.message);
      const a6 = So(i6, "onSessionSettleRequest()");
      if (a6) throw new Error(a6.message);
      if (p0(r5)) {
        const { message: c7 } = xe("EXPIRED", "onSessionSettleRequest()");
        throw new Error(c7);
      }
    }, this.isValidUpdate = async (t3) => {
      if (!$u(t3)) {
        const { message: a6 } = xe("MISSING_OR_INVALID", `update() params: ${t3}`);
        throw new Error(a6);
      }
      const { topic: e4, namespaces: s5 } = t3;
      this.checkRecentlyDeleted(e4), await this.isValidSessionTopic(e4);
      const i6 = this.client.session.get(e4), r5 = So(s5, "update()");
      if (r5) throw new Error(r5.message);
      const o6 = Io(i6.requiredNamespaces, s5, "update()");
      if (o6) throw new Error(o6.message);
    }, this.isValidExtend = async (t3) => {
      if (!$u(t3)) {
        const { message: s5 } = xe("MISSING_OR_INVALID", `extend() params: ${t3}`);
        throw new Error(s5);
      }
      const { topic: e4 } = t3;
      this.checkRecentlyDeleted(e4), await this.isValidSessionTopic(e4);
    }, this.isValidRequest = async (t3) => {
      if (!$u(t3)) {
        const { message: a6 } = xe("MISSING_OR_INVALID", `request() params: ${t3}`);
        throw new Error(a6);
      }
      const { topic: e4, request: s5, chainId: i6, expiry: r5 } = t3;
      this.checkRecentlyDeleted(e4), await this.isValidSessionTopic(e4);
      const { namespaces: o6 } = this.client.session.get(e4);
      if (!nh(o6, i6)) {
        const { message: a6 } = xe("MISSING_OR_INVALID", `request() chainId: ${i6}`);
        throw new Error(a6);
      }
      if (!eh(s5)) {
        const { message: a6 } = xe("MISSING_OR_INVALID", `request() ${JSON.stringify(s5)}`);
        throw new Error(a6);
      }
      if (!fh(o6, i6, s5.method)) {
        const { message: a6 } = xe("MISSING_OR_INVALID", `request() method: ${s5.method}`);
        throw new Error(a6);
      }
      if (r5 && !uh(r5, ne2)) {
        const { message: a6 } = xe("MISSING_OR_INVALID", `request() expiry: ${r5}. Expiry must be a number (in seconds) between ${ne2.min} and ${ne2.max}`);
        throw new Error(a6);
      }
    }, this.isValidRespond = async (t3) => {
      var e4;
      if (!$u(t3)) {
        const { message: r5 } = xe("MISSING_OR_INVALID", `respond() params: ${t3}`);
        throw new Error(r5);
      }
      const { topic: s5, response: i6 } = t3;
      try {
        await this.isValidSessionTopic(s5);
      } catch (r5) {
        throw (e4 = t3 == null ? void 0 : t3.response) != null && e4.id && this.cleanupAfterResponse(t3), r5;
      }
      if (!rh(i6)) {
        const { message: r5 } = xe("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(i6)}`);
        throw new Error(r5);
      }
    }, this.isValidPing = async (t3) => {
      if (!$u(t3)) {
        const { message: s5 } = xe("MISSING_OR_INVALID", `ping() params: ${t3}`);
        throw new Error(s5);
      }
      const { topic: e4 } = t3;
      await this.isValidSessionOrPairingTopic(e4);
    }, this.isValidEmit = async (t3) => {
      if (!$u(t3)) {
        const { message: o6 } = xe("MISSING_OR_INVALID", `emit() params: ${t3}`);
        throw new Error(o6);
      }
      const { topic: e4, event: s5, chainId: i6 } = t3;
      await this.isValidSessionTopic(e4);
      const { namespaces: r5 } = this.client.session.get(e4);
      if (!nh(r5, i6)) {
        const { message: o6 } = xe("MISSING_OR_INVALID", `emit() chainId: ${i6}`);
        throw new Error(o6);
      }
      if (!ih(s5)) {
        const { message: o6 } = xe("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(s5)}`);
        throw new Error(o6);
      }
      if (!oh(r5, i6, s5.name)) {
        const { message: o6 } = xe("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(s5)}`);
        throw new Error(o6);
      }
    }, this.isValidDisconnect = async (t3) => {
      if (!$u(t3)) {
        const { message: s5 } = xe("MISSING_OR_INVALID", `disconnect() params: ${t3}`);
        throw new Error(s5);
      }
      const { topic: e4 } = t3;
      await this.isValidSessionOrPairingTopic(e4);
    }, this.isValidAuthenticate = (t3) => {
      const { chains: e4, uri: s5, domain: i6, nonce: r5 } = t3;
      if (!Array.isArray(e4) || e4.length === 0) throw new Error("chains is required and must be a non-empty array");
      if (!Gt(s5, false)) throw new Error("uri is required parameter");
      if (!Gt(i6, false)) throw new Error("domain is required parameter");
      if (!Gt(r5, false)) throw new Error("nonce is required parameter");
      if ([...new Set(e4.map((a6) => dn(a6).namespace))].length > 1) throw new Error("Multi-namespace requests are not supported. Please request single namespace only.");
      const { namespace: o6 } = dn(e4[0]);
      if (o6 !== "eip155") throw new Error("Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.");
    }, this.getVerifyContext = async (t3, e4) => {
      const s5 = { verified: { verifyUrl: e4.verifyUrl || V3, validation: "UNKNOWN", origin: e4.url || "" } };
      try {
        const i6 = await this.client.core.verify.resolve({ attestationId: t3, verifyUrl: e4.verifyUrl });
        i6 && (s5.verified.origin = i6.origin, s5.verified.isScam = i6.isScam, s5.verified.validation = i6.origin === new URL(e4.url).origin ? "VALID" : "INVALID");
      } catch (i6) {
        this.client.logger.info(i6);
      }
      return this.client.logger.info(`Verify context: ${JSON.stringify(s5)}`), s5;
    }, this.validateSessionProps = (t3, e4) => {
      Object.values(t3).forEach((s5) => {
        if (!Gt(s5, false)) {
          const { message: i6 } = xe("MISSING_OR_INVALID", `${e4} must be in Record<string, string> format. Received: ${JSON.stringify(s5)}`);
          throw new Error(i6);
        }
      });
    }, this.getPendingAuthRequest = (t3) => {
      const e4 = this.client.auth.requests.get(t3);
      return typeof e4 == "object" ? e4 : void 0;
    }, this.addToRecentlyDeleted = (t3, e4) => {
      if (this.recentlyDeletedMap.set(t3, e4), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {
        let s5 = 0;
        const i6 = this.recentlyDeletedLimit / 2;
        for (const r5 of this.recentlyDeletedMap.keys()) {
          if (s5++ >= i6) break;
          this.recentlyDeletedMap.delete(r5);
        }
      }
    }, this.checkRecentlyDeleted = (t3) => {
      const e4 = this.recentlyDeletedMap.get(t3);
      if (e4) {
        const { message: s5 } = xe("MISSING_OR_INVALID", `Record was recently deleted - ${e4}: ${t3}`);
        throw new Error(s5);
      }
    };
  }
  async isInitialized() {
    if (!this.initialized) {
      const { message: n6 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(n6);
    }
    await this.client.core.relayer.confirmOnlineStateOrThrow();
  }
  registerRelayerEvents() {
    this.client.core.relayer.on(f5.message, (n6) => {
      !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(n6) : this.onRelayMessage(n6);
    });
  }
  async onRelayMessage(n6) {
    const { topic: t3, message: e4 } = n6, { publicKey: s5 } = this.client.auth.authKeys.keys.includes(B3) ? this.client.auth.authKeys.get(B3) : { responseTopic: void 0, publicKey: void 0 }, i6 = await this.client.core.crypto.decode(t3, e4, { receiverPublicKey: s5 });
    try {
      isJsonRpcRequest(i6) ? (this.client.core.history.set(t3, i6), this.onRelayEventRequest({ topic: t3, payload: i6 })) : isJsonRpcResponse(i6) ? (await this.client.core.history.resolve(i6), await this.onRelayEventResponse({ topic: t3, payload: i6 }), this.client.core.history.delete(t3, i6.id)) : this.onRelayEventUnknownPayload({ topic: t3, payload: i6 });
    } catch (r5) {
      this.client.logger.error(r5);
    }
  }
  registerExpirerEvents() {
    this.client.core.expirer.on(C5.expired, async (n6) => {
      const { topic: t3, id: e4 } = l0(n6.target);
      if (e4 && this.client.pendingRequest.keys.includes(e4)) return await this.deletePendingSessionRequest(e4, xe("EXPIRED"), true);
      if (e4 && this.client.auth.requests.keys.includes(e4)) return await this.deletePendingAuthRequest(e4, xe("EXPIRED"), true);
      t3 ? this.client.session.keys.includes(t3) && (await this.deleteSession({ topic: t3, expirerHasDeleted: true }), this.client.events.emit("session_expire", { topic: t3 })) : e4 && (await this.deleteProposal(e4, true), this.client.events.emit("proposal_expire", { id: e4 }));
    });
  }
  registerPairingEvents() {
    this.client.core.pairing.events.on(q3.create, (n6) => this.onPairingCreated(n6)), this.client.core.pairing.events.on(q3.delete, (n6) => {
      this.addToRecentlyDeleted(n6.topic, "pairing");
    });
  }
  isValidPairingTopic(n6) {
    if (!Gt(n6, false)) {
      const { message: t3 } = xe("MISSING_OR_INVALID", `pairing topic should be a string: ${n6}`);
      throw new Error(t3);
    }
    if (!this.client.core.pairing.pairings.keys.includes(n6)) {
      const { message: t3 } = xe("NO_MATCHING_KEY", `pairing topic doesn't exist: ${n6}`);
      throw new Error(t3);
    }
    if (p0(this.client.core.pairing.pairings.get(n6).expiry)) {
      const { message: t3 } = xe("EXPIRED", `pairing topic: ${n6}`);
      throw new Error(t3);
    }
  }
  async isValidSessionTopic(n6) {
    if (!Gt(n6, false)) {
      const { message: t3 } = xe("MISSING_OR_INVALID", `session topic should be a string: ${n6}`);
      throw new Error(t3);
    }
    if (this.checkRecentlyDeleted(n6), !this.client.session.keys.includes(n6)) {
      const { message: t3 } = xe("NO_MATCHING_KEY", `session topic doesn't exist: ${n6}`);
      throw new Error(t3);
    }
    if (p0(this.client.session.get(n6).expiry)) {
      await this.deleteSession({ topic: n6 });
      const { message: t3 } = xe("EXPIRED", `session topic: ${n6}`);
      throw new Error(t3);
    }
    if (!this.client.core.crypto.keychain.has(n6)) {
      const { message: t3 } = xe("MISSING_OR_INVALID", `session topic does not exist in keychain: ${n6}`);
      throw await this.deleteSession({ topic: n6 }), new Error(t3);
    }
  }
  async isValidSessionOrPairingTopic(n6) {
    if (this.checkRecentlyDeleted(n6), this.client.session.keys.includes(n6)) await this.isValidSessionTopic(n6);
    else if (this.client.core.pairing.pairings.keys.includes(n6)) this.isValidPairingTopic(n6);
    else if (Gt(n6, false)) {
      const { message: t3 } = xe("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${n6}`);
      throw new Error(t3);
    } else {
      const { message: t3 } = xe("MISSING_OR_INVALID", `session or pairing topic should be a string: ${n6}`);
      throw new Error(t3);
    }
  }
  async isValidProposalId(n6) {
    if (!Zu(n6)) {
      const { message: t3 } = xe("MISSING_OR_INVALID", `proposal id should be a number: ${n6}`);
      throw new Error(t3);
    }
    if (!this.client.proposal.keys.includes(n6)) {
      const { message: t3 } = xe("NO_MATCHING_KEY", `proposal id doesn't exist: ${n6}`);
      throw new Error(t3);
    }
    if (p0(this.client.proposal.get(n6).expiryTimestamp)) {
      await this.deleteProposal(n6);
      const { message: t3 } = xe("EXPIRED", `proposal id: ${n6}`);
      throw new Error(t3);
    }
  }
};
var es3 = class extends kt2 {
  constructor(n6, t3) {
    super(n6, t3, Ue2, ie2), this.core = n6, this.logger = t3;
  }
};
var Ze3 = class extends kt2 {
  constructor(n6, t3) {
    super(n6, t3, ke2, ie2), this.core = n6, this.logger = t3;
  }
};
var ts3 = class extends kt2 {
  constructor(n6, t3) {
    super(n6, t3, Fe2, ie2, (e4) => e4.id), this.core = n6, this.logger = t3;
  }
};
var ss3 = class extends kt2 {
  constructor(n6, t3) {
    super(n6, t3, Ye2, J2, () => B3), this.core = n6, this.logger = t3;
  }
};
var is3 = class extends kt2 {
  constructor(n6, t3) {
    super(n6, t3, Xe3, J2), this.core = n6, this.logger = t3;
  }
};
var rs3 = class extends kt2 {
  constructor(n6, t3) {
    super(n6, t3, Je2, J2, (e4) => e4.id), this.core = n6, this.logger = t3;
  }
};
var ns3 = class {
  constructor(n6, t3) {
    this.core = n6, this.logger = t3, this.authKeys = new ss3(this.core, this.logger), this.pairingTopics = new is3(this.core, this.logger), this.requests = new rs3(this.core, this.logger);
  }
  async init() {
    await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();
  }
};
var oe2 = class _oe extends b3 {
  constructor(n6) {
    super(n6), this.protocol = Ee, this.version = Se, this.name = re2.name, this.events = new import_events8.EventEmitter(), this.on = (e4, s5) => this.events.on(e4, s5), this.once = (e4, s5) => this.events.once(e4, s5), this.off = (e4, s5) => this.events.off(e4, s5), this.removeListener = (e4, s5) => this.events.removeListener(e4, s5), this.removeAllListeners = (e4) => this.events.removeAllListeners(e4), this.connect = async (e4) => {
      try {
        return await this.engine.connect(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.pair = async (e4) => {
      try {
        return await this.engine.pair(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.approve = async (e4) => {
      try {
        return await this.engine.approve(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.reject = async (e4) => {
      try {
        return await this.engine.reject(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.update = async (e4) => {
      try {
        return await this.engine.update(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.extend = async (e4) => {
      try {
        return await this.engine.extend(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.request = async (e4) => {
      try {
        return await this.engine.request(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.respond = async (e4) => {
      try {
        return await this.engine.respond(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.ping = async (e4) => {
      try {
        return await this.engine.ping(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.emit = async (e4) => {
      try {
        return await this.engine.emit(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.disconnect = async (e4) => {
      try {
        return await this.engine.disconnect(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.find = (e4) => {
      try {
        return this.engine.find(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.getPendingSessionRequests = () => {
      try {
        return this.engine.getPendingSessionRequests();
      } catch (e4) {
        throw this.logger.error(e4.message), e4;
      }
    }, this.authenticate = async (e4) => {
      try {
        return await this.engine.authenticate(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.formatAuthMessage = (e4) => {
      try {
        return this.engine.formatAuthMessage(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.approveSessionAuthenticate = async (e4) => {
      try {
        return await this.engine.approveSessionAuthenticate(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.rejectSessionAuthenticate = async (e4) => {
      try {
        return await this.engine.rejectSessionAuthenticate(e4);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }, this.name = (n6 == null ? void 0 : n6.name) || re2.name, this.metadata = (n6 == null ? void 0 : n6.metadata) || Xo(), this.signConfig = n6 == null ? void 0 : n6.signConfig;
    const t3 = typeof (n6 == null ? void 0 : n6.logger) < "u" && typeof (n6 == null ? void 0 : n6.logger) != "string" ? n6.logger : (0, import_pino2.default)(k4({ level: (n6 == null ? void 0 : n6.logger) || re2.logger }));
    this.core = (n6 == null ? void 0 : n6.core) || new Mr2(n6), this.logger = E5(t3, this.name), this.session = new Ze3(this.core, this.logger), this.proposal = new es3(this.core, this.logger), this.pendingRequest = new ts3(this.core, this.logger), this.engine = new Zt2(this), this.auth = new ns3(this.core, this.logger);
  }
  static async init(n6) {
    const t3 = new _oe(n6);
    return await t3.initialize(), t3;
  }
  get context() {
    return y4(this.logger);
  }
  get pairing() {
    return this.core.pairing.pairings;
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), await this.auth.init(), this.core.verify.init({ verifyUrl: this.metadata.verifyUrl }), this.logger.info("SignClient Initialization Success"), this.engine.processRelayMessageCache();
    } catch (n6) {
      throw this.logger.info("SignClient Initialization Failure"), this.logger.error(n6.message), n6;
    }
  }
};

// node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js
var import_bs58 = __toESM(require_bs58(), 1);

// node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js
var ClientNotInitializedError = class _ClientNotInitializedError extends Error {
  constructor() {
    super();
    Object.setPrototypeOf(this, _ClientNotInitializedError.prototype);
  }
};
var QRCodeModalError = class _QRCodeModalError extends Error {
  constructor() {
    super();
    Object.setPrototypeOf(this, _QRCodeModalError.prototype);
  }
};

// node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js
var WalletConnectChainID;
(function(WalletConnectChainID2) {
  WalletConnectChainID2["Mainnet"] = "solana:4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZ";
  WalletConnectChainID2["Devnet"] = "solana:8E9rvCKLFQia2Y35HXjjpWzj8weVo44K";
})(WalletConnectChainID || (WalletConnectChainID = {}));
var WalletConnectRPCMethods;
(function(WalletConnectRPCMethods2) {
  WalletConnectRPCMethods2["signTransaction"] = "solana_signTransaction";
  WalletConnectRPCMethods2["signMessage"] = "solana_signMessage";
})(WalletConnectRPCMethods || (WalletConnectRPCMethods = {}));
var getConnectParams = (chainId) => ({
  requiredNamespaces: {
    solana: {
      chains: [chainId],
      methods: [WalletConnectRPCMethods.signTransaction, WalletConnectRPCMethods.signMessage],
      events: []
    }
  }
});
var isVersionedTransaction = (transaction) => "version" in transaction;
var WalletConnectWallet = class {
  constructor(config) {
    this._options = config.options;
    this._network = config.network;
  }
  async connect() {
    const client = this._client ?? await oe2.init(this._options);
    const sessions = client.find(getConnectParams(this._network)).filter((s5) => s5.acknowledged);
    if (sessions.length) {
      this._session = sessions[sessions.length - 1];
      this._client = client;
      return {
        publicKey: this.publicKey
      };
    } else {
      const { uri, approval } = await client.connect(getConnectParams(this._network));
      return new Promise((resolve, reject) => {
        if (uri) {
          import_qrcode_modal.default.open(uri, () => {
            reject(new QRCodeModalError());
          });
        }
        approval().then((session) => {
          this._session = session;
          this._client = client;
          resolve({ publicKey: this.publicKey });
        }).catch(reject).finally(() => {
          import_qrcode_modal.default.close();
        });
      });
    }
  }
  async disconnect() {
    if (this._client && this._session) {
      await this._client.disconnect({
        topic: this._session.topic,
        reason: tr("USER_DISCONNECTED")
      });
      this._session = void 0;
    } else {
      throw new ClientNotInitializedError();
    }
  }
  get client() {
    if (this._client) {
      return Object.assign({}, this._client, { off: this._client.removeListener });
    } else {
      throw new ClientNotInitializedError();
    }
  }
  get publicKey() {
    if (this._client && this._session) {
      const { address } = ci(this._session.namespaces.solana.accounts[0]);
      return new PublicKey(address);
    } else {
      throw new ClientNotInitializedError();
    }
  }
  async signTransaction(transaction) {
    if (this._client && this._session) {
      let rawTransaction;
      let legacyTransaction;
      if (isVersionedTransaction(transaction)) {
        rawTransaction = Buffer.from(transaction.serialize()).toString("base64");
        if (transaction.version === "legacy") {
          legacyTransaction = Transaction.from(transaction.serialize());
        }
      } else {
        rawTransaction = transaction.serialize({
          requireAllSignatures: false,
          verifySignatures: false
        }).toString("base64");
        legacyTransaction = transaction;
      }
      const { signature } = await this._client.request({
        chainId: this._network,
        topic: this._session.topic,
        request: {
          method: WalletConnectRPCMethods.signTransaction,
          params: {
            // Passing ...legacyTransaction is deprecated.
            // All new clients should rely on the `transaction` parameter.
            // The future versions will stop passing ...legacyTransaction.
            ...legacyTransaction,
            // New base64-encoded serialized transaction request parameter
            transaction: rawTransaction
          }
        }
      });
      transaction.addSignature(this.publicKey, Buffer.from(import_bs58.default.decode(signature)));
      return transaction;
    } else {
      throw new ClientNotInitializedError();
    }
  }
  async signMessage(message) {
    if (this._client && this._session) {
      const { signature } = await this._client.request({
        // The network does not change the output of message signing, but this is a required parameter for SignClient
        chainId: this._network,
        topic: this._session.topic,
        request: {
          method: WalletConnectRPCMethods.signMessage,
          params: { pubkey: this.publicKey.toString(), message: import_bs58.default.encode(message) }
        }
      });
      return import_bs58.default.decode(signature);
    } else {
      throw new ClientNotInitializedError();
    }
  }
};
export {
  ClientNotInitializedError,
  QRCodeModalError,
  WalletConnectChainID,
  oe2 as WalletConnectClient,
  WalletConnectRPCMethods,
  WalletConnectWallet
};
/*! Bundled license information:

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)

@walletconnect/utils/dist/index.es.js:
  (**
  * [js-sha3]{@link https://github.com/emn178/js-sha3}
  *
  * @version 0.8.0
  * @author Chen, Yi-Cyuan [emn178@gmail.com]
  * @copyright Chen, Yi-Cyuan 2015-2018
  * @license MIT
  *)
*/
//# sourceMappingURL=esm-RKDGDTM3.js.map
